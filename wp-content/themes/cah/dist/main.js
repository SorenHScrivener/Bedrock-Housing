/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./lib/axios */ "./node_modules/axios/lib/axios.js");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var settle = __webpack_require__(/*! ./../core/settle */ "./node_modules/axios/lib/core/settle.js");
var cookies = __webpack_require__(/*! ./../helpers/cookies */ "./node_modules/axios/lib/helpers/cookies.js");
var buildURL = __webpack_require__(/*! ./../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ "./node_modules/axios/lib/core/buildFullPath.js");
var parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ "./node_modules/axios/lib/helpers/parseHeaders.js");
var isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ "./node_modules/axios/lib/helpers/isURLSameOrigin.js");
var createError = __webpack_require__(/*! ../core/createError */ "./node_modules/axios/lib/core/createError.js");

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;
    var responseType = config.responseType;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    function onloadend() {
      if (!request) {
        return;
      }
      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?
        request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    }

    if ('onloadend' in request) {
      // Use onloadend if available
      request.onloadend = onloadend;
    } else {
      // Listen for ready state to emulate onloadend
      request.onreadystatechange = function handleLoad() {
        if (!request || request.readyState !== 4) {
          return;
        }

        // The request errored out and we didn't get a response, this will be
        // handled by onerror instead
        // With one exception: request that using file: protocol, most browsers
        // will return status as 0 even though it's a successful request
        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
          return;
        }
        // readystate handler is calling before onerror or ontimeout handlers,
        // so we should call onloadend on the next 'tick'
        setTimeout(onloadend);
      };
    }

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(
        timeoutErrorMessage,
        config,
        config.transitional && config.transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (responseType && responseType !== 'json') {
      request.responseType = config.responseType;
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (!requestData) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");
var Axios = __webpack_require__(/*! ./core/Axios */ "./node_modules/axios/lib/core/Axios.js");
var mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var defaults = __webpack_require__(/*! ./defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");
axios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ "./node_modules/axios/lib/cancel/CancelToken.js");
axios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(/*! ./helpers/spread */ "./node_modules/axios/lib/helpers/spread.js");

// Expose isAxiosError
axios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ "./node_modules/axios/lib/helpers/isAxiosError.js");

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports["default"] = axios;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var Cancel = __webpack_require__(/*! ./Cancel */ "./node_modules/axios/lib/cancel/Cancel.js");

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var buildURL = __webpack_require__(/*! ../helpers/buildURL */ "./node_modules/axios/lib/helpers/buildURL.js");
var InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ "./node_modules/axios/lib/core/InterceptorManager.js");
var dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ "./node_modules/axios/lib/core/dispatchRequest.js");
var mergeConfig = __webpack_require__(/*! ./mergeConfig */ "./node_modules/axios/lib/core/mergeConfig.js");
var validator = __webpack_require__(/*! ../helpers/validator */ "./node_modules/axios/lib/helpers/validator.js");

var validators = validator.validators;
/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  var transitional = config.transitional;

  if (transitional !== undefined) {
    validator.assertOptions(transitional, {
      silentJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
      forcedJSONParsing: validators.transitional(validators.boolean, '1.0.0'),
      clarifyTimeoutError: validators.transitional(validators.boolean, '1.0.0')
    }, false);
  }

  // filter out skipped interceptors
  var requestInterceptorChain = [];
  var synchronousRequestInterceptors = true;
  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {
      return;
    }

    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;

    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  var responseInterceptorChain = [];
  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
  });

  var promise;

  if (!synchronousRequestInterceptors) {
    var chain = [dispatchRequest, undefined];

    Array.prototype.unshift.apply(chain, requestInterceptorChain);
    chain = chain.concat(responseInterceptorChain);

    promise = Promise.resolve(config);
    while (chain.length) {
      promise = promise.then(chain.shift(), chain.shift());
    }

    return promise;
  }


  var newConfig = config;
  while (requestInterceptorChain.length) {
    var onFulfilled = requestInterceptorChain.shift();
    var onRejected = requestInterceptorChain.shift();
    try {
      newConfig = onFulfilled(newConfig);
    } catch (error) {
      onRejected(error);
      break;
    }
  }

  try {
    promise = dispatchRequest(newConfig);
  } catch (error) {
    return Promise.reject(error);
  }

  while (responseInterceptorChain.length) {
    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: (config || {}).data
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(mergeConfig(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected, options) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected,
    synchronous: options ? options.synchronous : false,
    runWhen: options ? options.runWhen : null
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ "./node_modules/axios/lib/helpers/isAbsoluteURL.js");
var combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ "./node_modules/axios/lib/helpers/combineURLs.js");

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var enhanceError = __webpack_require__(/*! ./enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var transformData = __webpack_require__(/*! ./transformData */ "./node_modules/axios/lib/core/transformData.js");
var isCancel = __webpack_require__(/*! ../cancel/isCancel */ "./node_modules/axios/lib/cancel/isCancel.js");
var defaults = __webpack_require__(/*! ../defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData.call(
    config,
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData.call(
      config,
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData.call(
          config,
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function toJSON() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];
  var defaultToConfig2Keys = [
    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',
    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'
  ];
  var directMergeKeys = ['validateStatus'];

  function getMergedValue(target, source) {
    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {
      return utils.merge(target, source);
    } else if (utils.isPlainObject(source)) {
      return utils.merge({}, source);
    } else if (utils.isArray(source)) {
      return source.slice();
    }
    return source;
  }

  function mergeDeepProperties(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  }

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (!utils.isUndefined(config2[prop])) {
      config[prop] = getMergedValue(undefined, config2[prop]);
    } else if (!utils.isUndefined(config1[prop])) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  utils.forEach(directMergeKeys, function merge(prop) {
    if (prop in config2) {
      config[prop] = getMergedValue(config1[prop], config2[prop]);
    } else if (prop in config1) {
      config[prop] = getMergedValue(undefined, config1[prop]);
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys)
    .concat(directMergeKeys);

  var otherKeys = Object
    .keys(config1)
    .concat(Object.keys(config2))
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, mergeDeepProperties);

  return config;
};


/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var createError = __webpack_require__(/*! ./createError */ "./node_modules/axios/lib/core/createError.js");

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!response.status || !validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");
var defaults = __webpack_require__(/*! ./../defaults */ "./node_modules/axios/lib/defaults.js");

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  var context = this || defaults;
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn.call(context, data, headers);
  });

  return data;
};


/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/axios/lib/utils.js");
var normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ "./node_modules/axios/lib/helpers/normalizeHeaderName.js");
var enhanceError = __webpack_require__(/*! ./core/enhanceError */ "./node_modules/axios/lib/core/enhanceError.js");

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(/*! ./adapters/xhr */ "./node_modules/axios/lib/adapters/xhr.js");
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(/*! ./adapters/http */ "./node_modules/axios/lib/adapters/xhr.js");
  }
  return adapter;
}

function stringifySafely(rawValue, parser, encoder) {
  if (utils.isString(rawValue)) {
    try {
      (parser || JSON.parse)(rawValue);
      return utils.trim(rawValue);
    } catch (e) {
      if (e.name !== 'SyntaxError') {
        throw e;
      }
    }
  }

  return (encoder || JSON.stringify)(rawValue);
}

var defaults = {

  transitional: {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  },

  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');

    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {
      setContentTypeIfUnset(headers, 'application/json');
      return stringifySafely(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    var transitional = this.transitional;
    var silentJSONParsing = transitional && transitional.silentJSONParsing;
    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';

    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {
      try {
        return JSON.parse(data);
      } catch (e) {
        if (strictJSONParsing) {
          if (e.name === 'SyntaxError') {
            throw enhanceError(e, this, 'E_JSON_PARSE');
          }
          throw e;
        }
      }
    }

    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,
  maxBodyLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;


/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

function encode(val) {
  return encodeURIComponent(val).
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


/**
 * Determines whether the payload is an error thrown by Axios
 *
 * @param {*} payload The value to test
 * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false
 */
module.exports = function isAxiosError(payload) {
  return (typeof payload === 'object') && (payload.isAxiosError === true);
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/axios/lib/utils.js");

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var utils = __webpack_require__(/*! ./../utils */ "./node_modules/axios/lib/utils.js");

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),

/***/ "./node_modules/axios/lib/helpers/validator.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/validator.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var pkg = __webpack_require__(/*! ./../../package.json */ "./node_modules/axios/package.json");

var validators = {};

// eslint-disable-next-line func-names
['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {
  validators[type] = function validator(thing) {
    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;
  };
});

var deprecatedWarnings = {};
var currentVerArr = pkg.version.split('.');

/**
 * Compare package versions
 * @param {string} version
 * @param {string?} thanVersion
 * @returns {boolean}
 */
function isOlderVersion(version, thanVersion) {
  var pkgVersionArr = thanVersion ? thanVersion.split('.') : currentVerArr;
  var destVer = version.split('.');
  for (var i = 0; i < 3; i++) {
    if (pkgVersionArr[i] > destVer[i]) {
      return true;
    } else if (pkgVersionArr[i] < destVer[i]) {
      return false;
    }
  }
  return false;
}

/**
 * Transitional option validator
 * @param {function|boolean?} validator
 * @param {string?} version
 * @param {string} message
 * @returns {function}
 */
validators.transitional = function transitional(validator, version, message) {
  var isDeprecated = version && isOlderVersion(version);

  function formatMessage(opt, desc) {
    return '[Axios v' + pkg.version + '] Transitional option \'' + opt + '\'' + desc + (message ? '. ' + message : '');
  }

  // eslint-disable-next-line func-names
  return function(value, opt, opts) {
    if (validator === false) {
      throw new Error(formatMessage(opt, ' has been removed in ' + version));
    }

    if (isDeprecated && !deprecatedWarnings[opt]) {
      deprecatedWarnings[opt] = true;
      // eslint-disable-next-line no-console
      console.warn(
        formatMessage(
          opt,
          ' has been deprecated since v' + version + ' and will be removed in the near future'
        )
      );
    }

    return validator ? validator(value, opt, opts) : true;
  };
};

/**
 * Assert object's properties type
 * @param {object} options
 * @param {object} schema
 * @param {boolean?} allowUnknown
 */

function assertOptions(options, schema, allowUnknown) {
  if (typeof options !== 'object') {
    throw new TypeError('options must be an object');
  }
  var keys = Object.keys(options);
  var i = keys.length;
  while (i-- > 0) {
    var opt = keys[i];
    var validator = schema[opt];
    if (validator) {
      var value = options[opt];
      var result = value === undefined || validator(value, opt, options);
      if (result !== true) {
        throw new TypeError('option ' + opt + ' must be ' + result);
      }
      continue;
    }
    if (allowUnknown !== true) {
      throw Error('Unknown option ' + opt);
    }
  }
}

module.exports = {
  isOlderVersion: isOlderVersion,
  assertOptions: assertOptions,
  validators: validators
};


/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(/*! ./helpers/bind */ "./node_modules/axios/lib/helpers/bind.js");

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a plain Object
 *
 * @param {Object} val The value to test
 * @return {boolean} True if value is a plain Object, otherwise false
 */
function isPlainObject(val) {
  if (toString.call(val) !== '[object Object]') {
    return false;
  }

  var prototype = Object.getPrototypeOf(val);
  return prototype === null || prototype === Object.prototype;
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (isPlainObject(result[key]) && isPlainObject(val)) {
      result[key] = merge(result[key], val);
    } else if (isPlainObject(val)) {
      result[key] = merge({}, val);
    } else if (isArray(val)) {
      result[key] = val.slice();
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

/**
 * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)
 *
 * @param {string} content with BOM
 * @return {string} content value without BOM
 */
function stripBOM(content) {
  if (content.charCodeAt(0) === 0xFEFF) {
    content = content.slice(1);
  }
  return content;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isPlainObject: isPlainObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  extend: extend,
  trim: trim,
  stripBOM: stripBOM
};


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./css/dots.css":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./css/dots.css ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";\n/**\n * ==============================================\n * Dot Elastic\n * ==============================================\n */\n.dot-elastic {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-elastic 1s infinite linear;\n          animation: dot-elastic 1s infinite linear;\n}\n.dot-elastic::before, .dot-elastic::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n}\n.dot-elastic::before {\n  left: -99px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-elastic-before 1s infinite linear;\n          animation: dot-elastic-before 1s infinite linear;\n}\n.dot-elastic::after {\n  left: 99px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-elastic-after 1s infinite linear;\n          animation: dot-elastic-after 1s infinite linear;\n}\n\n@-webkit-keyframes dot-elastic-before {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(1, 1.5);\n  }\n  50% {\n    transform: scale(1, 0.67);\n  }\n  75% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n\n@keyframes dot-elastic-before {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(1, 1.5);\n  }\n  50% {\n    transform: scale(1, 0.67);\n  }\n  75% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n@-webkit-keyframes dot-elastic {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(1, 1);\n  }\n  50% {\n    transform: scale(1, 1.5);\n  }\n  75% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n@keyframes dot-elastic {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(1, 1);\n  }\n  50% {\n    transform: scale(1, 1.5);\n  }\n  75% {\n    transform: scale(1, 1);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n@-webkit-keyframes dot-elastic-after {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(1, 1);\n  }\n  50% {\n    transform: scale(1, 0.67);\n  }\n  75% {\n    transform: scale(1, 1.5);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n@keyframes dot-elastic-after {\n  0% {\n    transform: scale(1, 1);\n  }\n  25% {\n    transform: scale(1, 1);\n  }\n  50% {\n    transform: scale(1, 0.67);\n  }\n  75% {\n    transform: scale(1, 1.5);\n  }\n  100% {\n    transform: scale(1, 1);\n  }\n}\n/**\n * ==============================================\n * Dot Pulse\n * ==============================================\n */\n.dot-pulse {\n  position: relative;\n  left: -9999px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  box-shadow: 9999px 0 0 -5px;\n  -webkit-animation: dot-pulse 1.5s infinite linear;\n          animation: dot-pulse 1.5s infinite linear;\n  -webkit-animation-delay: 0.25s;\n          animation-delay: 0.25s;\n}\n.dot-pulse::before, .dot-pulse::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n}\n.dot-pulse::before {\n  box-shadow: 9900px 0 0 -5px;\n  -webkit-animation: dot-pulse-before 1.5s infinite linear;\n          animation: dot-pulse-before 1.5s infinite linear;\n  -webkit-animation-delay: 0s;\n          animation-delay: 0s;\n}\n.dot-pulse::after {\n  box-shadow: 10098px 0 0 -5px;\n  -webkit-animation: dot-pulse-after 1.5s infinite linear;\n          animation: dot-pulse-after 1.5s infinite linear;\n  -webkit-animation-delay: 0.5s;\n          animation-delay: 0.5s;\n}\n\n@-webkit-keyframes dot-pulse-before {\n  0% {\n    box-shadow: 9900px 0 0 -5px;\n  }\n  30% {\n    box-shadow: 9900px 0 0 2px;\n  }\n  60%, 100% {\n    box-shadow: 9900px 0 0 -5px;\n  }\n}\n\n@keyframes dot-pulse-before {\n  0% {\n    box-shadow: 9900px 0 0 -5px;\n  }\n  30% {\n    box-shadow: 9900px 0 0 2px;\n  }\n  60%, 100% {\n    box-shadow: 9900px 0 0 -5px;\n  }\n}\n@-webkit-keyframes dot-pulse {\n  0% {\n    box-shadow: 9999px 0 0 -5px;\n  }\n  30% {\n    box-shadow: 9999px 0 0 2px;\n  }\n  60%, 100% {\n    box-shadow: 9999px 0 0 -5px;\n  }\n}\n@keyframes dot-pulse {\n  0% {\n    box-shadow: 9999px 0 0 -5px;\n  }\n  30% {\n    box-shadow: 9999px 0 0 2px;\n  }\n  60%, 100% {\n    box-shadow: 9999px 0 0 -5px;\n  }\n}\n@-webkit-keyframes dot-pulse-after {\n  0% {\n    box-shadow: 10098px 0 0 -5px;\n  }\n  30% {\n    box-shadow: 10098px 0 0 2px;\n  }\n  60%, 100% {\n    box-shadow: 10098px 0 0 -5px;\n  }\n}\n@keyframes dot-pulse-after {\n  0% {\n    box-shadow: 10098px 0 0 -5px;\n  }\n  30% {\n    box-shadow: 10098px 0 0 2px;\n  }\n  60%, 100% {\n    box-shadow: 10098px 0 0 -5px;\n  }\n}\n/**\n * ==============================================\n * Dot Flashing\n * ==============================================\n */\n.dot-flashing {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-flashing 1s infinite linear alternate;\n          animation: dot-flashing 1s infinite linear alternate;\n  -webkit-animation-delay: 0.5s;\n          animation-delay: 0.5s;\n}\n.dot-flashing::before, .dot-flashing::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n}\n.dot-flashing::before {\n  left: -99px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-flashing 1s infinite alternate;\n          animation: dot-flashing 1s infinite alternate;\n  -webkit-animation-delay: 0s;\n          animation-delay: 0s;\n}\n.dot-flashing::after {\n  left: 99px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-flashing 1s infinite alternate;\n          animation: dot-flashing 1s infinite alternate;\n  -webkit-animation-delay: 1s;\n          animation-delay: 1s;\n}\n\n@-webkit-keyframes dot-flashing {\n  0% {\n    background-color: #41585f;\n  }\n  50%, 100% {\n    background-color: rgba(65, 88, 95, 0.2);\n  }\n}\n\n@keyframes dot-flashing {\n  0% {\n    background-color: #41585f;\n  }\n  50%, 100% {\n    background-color: rgba(65, 88, 95, 0.2);\n  }\n}\n/**\n * ==============================================\n * Dot Collision\n * ==============================================\n */\n.dot-collision {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n}\n.dot-collision::before, .dot-collision::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n}\n.dot-collision::before {\n  left: -55px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-collision-before 2s infinite ease-in;\n          animation: dot-collision-before 2s infinite ease-in;\n}\n.dot-collision::after {\n  left: 55px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-collision-after 2s infinite ease-in;\n          animation: dot-collision-after 2s infinite ease-in;\n  -webkit-animation-delay: 1s;\n          animation-delay: 1s;\n}\n\n@-webkit-keyframes dot-collision-before {\n  0%, 50%, 75%, 100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(-99px);\n  }\n}\n\n@keyframes dot-collision-before {\n  0%, 50%, 75%, 100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(-99px);\n  }\n}\n@-webkit-keyframes dot-collision-after {\n  0%, 50%, 75%, 100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(99px);\n  }\n}\n@keyframes dot-collision-after {\n  0%, 50%, 75%, 100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(99px);\n  }\n}\n/**\n * ==============================================\n * Dot Revolution\n * ==============================================\n */\n.dot-revolution {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n}\n.dot-revolution::before, .dot-revolution::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n}\n.dot-revolution::before {\n  left: 0;\n  top: -99px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  transform-origin: 27.5px 126.5px;\n  -webkit-animation: dot-revolution 1.4s linear infinite;\n          animation: dot-revolution 1.4s linear infinite;\n}\n.dot-revolution::after {\n  left: 0;\n  top: -198px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  transform-origin: 27.5px 225.5px;\n  -webkit-animation: dot-revolution 1s linear infinite;\n          animation: dot-revolution 1s linear infinite;\n}\n\n@-webkit-keyframes dot-revolution {\n  0% {\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\n  }\n  100% {\n    transform: rotateZ(360deg) translate3d(0, 0, 0);\n  }\n}\n\n@keyframes dot-revolution {\n  0% {\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\n  }\n  100% {\n    transform: rotateZ(360deg) translate3d(0, 0, 0);\n  }\n}\n/**\n * ==============================================\n * Dot Carousel\n * ==============================================\n */\n.dot-carousel {\n  position: relative;\n  left: -9999px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  -webkit-animation: dot-carousel 1.5s infinite linear;\n          animation: dot-carousel 1.5s infinite linear;\n}\n\n@-webkit-keyframes dot-carousel {\n  0% {\n    box-shadow: 9900px 0 0 -1px #41585f, 9999px 0 0 1px #41585f, 10098px 0 0 -1px #41585f;\n  }\n  50% {\n    box-shadow: 10098px 0 0 -1px #41585f, 9900px 0 0 -1px #41585f, 9999px 0 0 1px #41585f;\n  }\n  100% {\n    box-shadow: 9999px 0 0 1px #41585f, 10098px 0 0 -1px #41585f, 9900px 0 0 -1px #41585f;\n  }\n}\n\n@keyframes dot-carousel {\n  0% {\n    box-shadow: 9900px 0 0 -1px #41585f, 9999px 0 0 1px #41585f, 10098px 0 0 -1px #41585f;\n  }\n  50% {\n    box-shadow: 10098px 0 0 -1px #41585f, 9900px 0 0 -1px #41585f, 9999px 0 0 1px #41585f;\n  }\n  100% {\n    box-shadow: 9999px 0 0 1px #41585f, 10098px 0 0 -1px #41585f, 9900px 0 0 -1px #41585f;\n  }\n}\n/**\n * ==============================================\n * Dot Typing\n * ==============================================\n */\n.dot-typing {\n  position: relative;\n  left: -9999px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  -webkit-animation: dot-typing 1.5s infinite linear;\n          animation: dot-typing 1.5s infinite linear;\n}\n\n@-webkit-keyframes dot-typing {\n  0% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  16.667% {\n    box-shadow: 9900px -10px 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  33.333% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  50% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px -10px 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  66.667% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  83.333% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px -10px 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n}\n\n@keyframes dot-typing {\n  0% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  16.667% {\n    box-shadow: 9900px -10px 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  33.333% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  50% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px -10px 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  66.667% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n  83.333% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px -10px 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9900px 0 0 0 #41585f, 9999px 0 0 0 #41585f, 10098px 0 0 0 #41585f;\n  }\n}\n/**\n * ==============================================\n * Dot Windmill\n * ==============================================\n */\n.dot-windmill {\n  position: relative;\n  top: -10px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  transform-origin: 5px 15px;\n  -webkit-animation: dot-windmill 2s infinite linear;\n          animation: dot-windmill 2s infinite linear;\n}\n.dot-windmill::before, .dot-windmill::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n}\n.dot-windmill::before {\n  left: -8.66254px;\n  top: 15px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n}\n.dot-windmill::after {\n  left: 8.66254px;\n  top: 15px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n}\n\n@-webkit-keyframes dot-windmill {\n  0% {\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\n  }\n  100% {\n    transform: rotateZ(720deg) translate3d(0, 0, 0);\n  }\n}\n\n@keyframes dot-windmill {\n  0% {\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\n  }\n  100% {\n    transform: rotateZ(720deg) translate3d(0, 0, 0);\n  }\n}\n/**\n * ==============================================\n * Dot Bricks\n * ==============================================\n */\n.dot-bricks {\n  position: relative;\n  top: 30.5px;\n  left: -9999px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  -webkit-animation: dot-bricks 2s infinite ease;\n          animation: dot-bricks 2s infinite ease;\n}\n\n@-webkit-keyframes dot-bricks {\n  0% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n  8.333% {\n    box-shadow: 10029.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n  16.667% {\n    box-shadow: 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n  25% {\n    box-shadow: 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f;\n  }\n  33.333% {\n    box-shadow: 10029.5px 0 0 0 #41585f, 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f;\n  }\n  41.667% {\n    box-shadow: 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f;\n  }\n  50% {\n    box-shadow: 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f;\n  }\n  58.333% {\n    box-shadow: 9968.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f;\n  }\n  66.666% {\n    box-shadow: 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f, 9968.5px -61px 0 0 #41585f;\n  }\n  75% {\n    box-shadow: 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f;\n  }\n  83.333% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f;\n  }\n  91.667% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n}\n\n@keyframes dot-bricks {\n  0% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n  8.333% {\n    box-shadow: 10029.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n  16.667% {\n    box-shadow: 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n  25% {\n    box-shadow: 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f;\n  }\n  33.333% {\n    box-shadow: 10029.5px 0 0 0 #41585f, 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f;\n  }\n  41.667% {\n    box-shadow: 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f;\n  }\n  50% {\n    box-shadow: 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f;\n  }\n  58.333% {\n    box-shadow: 9968.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f, 9968.5px -61px 0 0 #41585f;\n  }\n  66.666% {\n    box-shadow: 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f, 9968.5px -61px 0 0 #41585f;\n  }\n  75% {\n    box-shadow: 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f;\n  }\n  83.333% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 10029.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f;\n  }\n  91.667% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px -61px 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9968.5px -61px 0 0 #41585f, 9968.5px 0 0 0 #41585f, 10029.5px 0 0 0 #41585f;\n  }\n}\n/**\n * ==============================================\n * Dot Floating\n * ==============================================\n */\n.dot-floating {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-floating 3s infinite cubic-bezier(0.15, 0.6, 0.9, 0.1);\n          animation: dot-floating 3s infinite cubic-bezier(0.15, 0.6, 0.9, 0.1);\n}\n.dot-floating::before, .dot-floating::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n}\n.dot-floating::before {\n  left: -12px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-floating-before 3s infinite ease-in-out;\n          animation: dot-floating-before 3s infinite ease-in-out;\n}\n.dot-floating::after {\n  left: -24px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-floating-after 3s infinite cubic-bezier(0.4, 0, 1, 1);\n          animation: dot-floating-after 3s infinite cubic-bezier(0.4, 0, 1, 1);\n}\n\n@-webkit-keyframes dot-floating {\n  0% {\n    left: calc(-50% - 27.5px);\n  }\n  75% {\n    left: calc(50% + 127.5px);\n  }\n  100% {\n    left: calc(50% + 127.5px);\n  }\n}\n\n@keyframes dot-floating {\n  0% {\n    left: calc(-50% - 27.5px);\n  }\n  75% {\n    left: calc(50% + 127.5px);\n  }\n  100% {\n    left: calc(50% + 127.5px);\n  }\n}\n@-webkit-keyframes dot-floating-before {\n  0% {\n    left: -50px;\n  }\n  50% {\n    left: -12px;\n  }\n  75% {\n    left: -50px;\n  }\n  100% {\n    left: -50px;\n  }\n}\n@keyframes dot-floating-before {\n  0% {\n    left: -50px;\n  }\n  50% {\n    left: -12px;\n  }\n  75% {\n    left: -50px;\n  }\n  100% {\n    left: -50px;\n  }\n}\n@-webkit-keyframes dot-floating-after {\n  0% {\n    left: -100px;\n  }\n  50% {\n    left: -24px;\n  }\n  75% {\n    left: -100px;\n  }\n  100% {\n    left: -100px;\n  }\n}\n@keyframes dot-floating-after {\n  0% {\n    left: -100px;\n  }\n  50% {\n    left: -24px;\n  }\n  75% {\n    left: -100px;\n  }\n  100% {\n    left: -100px;\n  }\n}\n/**\n * ==============================================\n * Dot Fire\n * ==============================================\n */\n.dot-fire {\n  position: relative;\n  left: -9999px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  box-shadow: 9999px 148.5px 0 -5px #41585f;\n  -webkit-animation: dot-fire 1.5s infinite linear;\n          animation: dot-fire 1.5s infinite linear;\n  -webkit-animation-delay: -0.85s;\n          animation-delay: -0.85s;\n}\n.dot-fire::before, .dot-fire::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n}\n.dot-fire::before {\n  box-shadow: 9999px 148.5px 0 -5px #41585f;\n  -webkit-animation: dot-fire 1.5s infinite linear;\n          animation: dot-fire 1.5s infinite linear;\n  -webkit-animation-delay: -1.85s;\n          animation-delay: -1.85s;\n}\n.dot-fire::after {\n  box-shadow: 9999px 148.5px 0 -5px #41585f;\n  -webkit-animation: dot-fire 1.5s infinite linear;\n          animation: dot-fire 1.5s infinite linear;\n  -webkit-animation-delay: -2.85s;\n          animation-delay: -2.85s;\n}\n\n@-webkit-keyframes dot-fire {\n  1% {\n    box-shadow: 9999px 148.5px 0 -5px #41585f;\n  }\n  50% {\n    box-shadow: 9999px -37.125px 0 2px #41585f;\n  }\n  100% {\n    box-shadow: 9999px -148.5px 0 -5px #41585f;\n  }\n}\n\n@keyframes dot-fire {\n  1% {\n    box-shadow: 9999px 148.5px 0 -5px #41585f;\n  }\n  50% {\n    box-shadow: 9999px -37.125px 0 2px #41585f;\n  }\n  100% {\n    box-shadow: 9999px -148.5px 0 -5px #41585f;\n  }\n}\n/**\n * ==============================================\n * Dot Spin\n * ==============================================\n */\n.dot-spin {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: transparent;\n  color: transparent;\n  box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 0 rgba(65, 88, 95, 0), 0 118.8px 0 0 rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 0 rgba(65, 88, 95, 0), -118.8px 0 0 0 rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 0 rgba(65, 88, 95, 0);\n  -webkit-animation: dot-spin 1.5s infinite linear;\n          animation: dot-spin 1.5s infinite linear;\n}\n\n@-webkit-keyframes dot-spin {\n  0%, 100% {\n    box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  12.5% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 0 #41585f, 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  25% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 0 #41585f, 0 118.8px 0 0 #41585f, -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  37.5% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 0 #41585f, 0 118.8px 0 0 #41585f, -84.0043116px 84.0043116px 0 0 #41585f, -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  50% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 0 #41585f, -84.0043116px 84.0043116px 0 0 #41585f, -118.8px 0 0 0 #41585f, -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  62.5% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 0 #41585f, -118.8px 0 0 0 #41585f, -84.0043116px -84.0043116px 0 0 #41585f;\n  }\n  75% {\n    box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 0 #41585f, -84.0043116px -84.0043116px 0 0 #41585f;\n  }\n  87.5% {\n    box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 0 #41585f;\n  }\n}\n\n@keyframes dot-spin {\n  0%, 100% {\n    box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  12.5% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 0 #41585f, 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  25% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 0 #41585f, 84.0043116px 84.0043116px 0 0 #41585f, 0 118.8px 0 0 #41585f, -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  37.5% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 0 #41585f, 0 118.8px 0 0 #41585f, -84.0043116px 84.0043116px 0 0 #41585f, -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  50% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 0 #41585f, -84.0043116px 84.0043116px 0 0 #41585f, -118.8px 0 0 0 #41585f, -84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0);\n  }\n  62.5% {\n    box-shadow: 0 -118.8px 0 -5px rgba(65, 88, 95, 0), 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 0 #41585f, -118.8px 0 0 0 #41585f, -84.0043116px -84.0043116px 0 0 #41585f;\n  }\n  75% {\n    box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 -5px rgba(65, 88, 95, 0), 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 0 #41585f, -84.0043116px -84.0043116px 0 0 #41585f;\n  }\n  87.5% {\n    box-shadow: 0 -118.8px 0 0 #41585f, 84.0043116px -84.0043116px 0 0 #41585f, 118.8px 0 0 -5px rgba(65, 88, 95, 0), 84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), 0 118.8px 0 -5px rgba(65, 88, 95, 0), -84.0043116px 84.0043116px 0 -5px rgba(65, 88, 95, 0), -118.8px 0 0 -5px rgba(65, 88, 95, 0), -84.0043116px -84.0043116px 0 0 #41585f;\n  }\n}\n/**\n * ==============================================\n * Dot Falling\n * ==============================================\n */\n.dot-falling {\n  position: relative;\n  left: -9999px;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  box-shadow: 9999px 0 0 0 #41585f;\n  -webkit-animation: dot-falling 1s infinite linear;\n          animation: dot-falling 1s infinite linear;\n  -webkit-animation-delay: 0.1s;\n          animation-delay: 0.1s;\n}\n.dot-falling::before, .dot-falling::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n}\n.dot-falling::before {\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-falling-before 1s infinite linear;\n          animation: dot-falling-before 1s infinite linear;\n  -webkit-animation-delay: 0s;\n          animation-delay: 0s;\n}\n.dot-falling::after {\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-falling-after 1s infinite linear;\n          animation: dot-falling-after 1s infinite linear;\n  -webkit-animation-delay: 0.2s;\n          animation-delay: 0.2s;\n}\n\n@-webkit-keyframes dot-falling {\n  0% {\n    box-shadow: 9999px -99px 0 0 rgba(65, 88, 95, 0);\n  }\n  25%, 50%, 75% {\n    box-shadow: 9999px 0 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9999px 99px 0 0 rgba(65, 88, 95, 0);\n  }\n}\n\n@keyframes dot-falling {\n  0% {\n    box-shadow: 9999px -99px 0 0 rgba(65, 88, 95, 0);\n  }\n  25%, 50%, 75% {\n    box-shadow: 9999px 0 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9999px 99px 0 0 rgba(65, 88, 95, 0);\n  }\n}\n@-webkit-keyframes dot-falling-before {\n  0% {\n    box-shadow: 9900px -99px 0 0 rgba(65, 88, 95, 0);\n  }\n  25%, 50%, 75% {\n    box-shadow: 9900px 0 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9900px 99px 0 0 rgba(65, 88, 95, 0);\n  }\n}\n@keyframes dot-falling-before {\n  0% {\n    box-shadow: 9900px -99px 0 0 rgba(65, 88, 95, 0);\n  }\n  25%, 50%, 75% {\n    box-shadow: 9900px 0 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 9900px 99px 0 0 rgba(65, 88, 95, 0);\n  }\n}\n@-webkit-keyframes dot-falling-after {\n  0% {\n    box-shadow: 10098px -99px 0 0 rgba(65, 88, 95, 0);\n  }\n  25%, 50%, 75% {\n    box-shadow: 10098px 0 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 10098px 99px 0 0 rgba(65, 88, 95, 0);\n  }\n}\n@keyframes dot-falling-after {\n  0% {\n    box-shadow: 10098px -99px 0 0 rgba(65, 88, 95, 0);\n  }\n  25%, 50%, 75% {\n    box-shadow: 10098px 0 0 0 #41585f;\n  }\n  100% {\n    box-shadow: 10098px 99px 0 0 rgba(65, 88, 95, 0);\n  }\n}\n/**\n * ==============================================\n * Dot Stretching\n * ==============================================\n */\n.dot-stretching {\n  position: relative;\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  transform: scale(1.25, 1.25);\n  -webkit-animation: dot-stretching 2s infinite ease-in;\n          animation: dot-stretching 2s infinite ease-in;\n}\n.dot-stretching::before, .dot-stretching::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n}\n.dot-stretching::before {\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-stretching-before 2s infinite ease-in;\n          animation: dot-stretching-before 2s infinite ease-in;\n}\n.dot-stretching::after {\n  width: 55px;\n  height: 55px;\n  border-radius: 33px;\n  background-color: #41585f;\n  color: #41585f;\n  -webkit-animation: dot-stretching-after 2s infinite ease-in;\n          animation: dot-stretching-after 2s infinite ease-in;\n}\n\n@-webkit-keyframes dot-stretching {\n  0% {\n    transform: scale(1.25, 1.25);\n  }\n  50%, 60% {\n    transform: scale(0.8, 0.8);\n  }\n  100% {\n    transform: scale(1.25, 1.25);\n  }\n}\n\n@keyframes dot-stretching {\n  0% {\n    transform: scale(1.25, 1.25);\n  }\n  50%, 60% {\n    transform: scale(0.8, 0.8);\n  }\n  100% {\n    transform: scale(1.25, 1.25);\n  }\n}\n@-webkit-keyframes dot-stretching-before {\n  0% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n  50%, 60% {\n    transform: translate(-20px) scale(1, 1);\n  }\n  100% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n}\n@keyframes dot-stretching-before {\n  0% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n  50%, 60% {\n    transform: translate(-20px) scale(1, 1);\n  }\n  100% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n}\n@-webkit-keyframes dot-stretching-after {\n  0% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n  50%, 60% {\n    transform: translate(20px) scale(1, 1);\n  }\n  100% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n}\n@keyframes dot-stretching-after {\n  0% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n  50%, 60% {\n    transform: translate(20px) scale(1, 1);\n  }\n  100% {\n    transform: translate(0) scale(0.7, 0.7);\n  }\n}\n/**\n * ==============================================\n * Experimental: Gooey Effect\n * Dot Gathering\n * ==============================================\n */\n.dot-gathering {\n  position: relative;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: hsl(0deg, 100%, 0%);\n  color: transparent;\n  margin: -1px 0;\n  filter: blur(2px);\n}\n.dot-gathering::before, .dot-gathering::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: -50px;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: hsl(0deg, 100%, 0%);\n  color: transparent;\n  opacity: 0;\n  filter: blur(2px);\n  -webkit-animation: dot-gathering 2s infinite ease-in;\n          animation: dot-gathering 2s infinite ease-in;\n}\n.dot-gathering::after {\n  -webkit-animation-delay: 0.5s;\n          animation-delay: 0.5s;\n}\n\n@-webkit-keyframes dot-gathering {\n  0% {\n    opacity: 0;\n    transform: translateX(0);\n  }\n  35%, 60% {\n    opacity: 1;\n    transform: translateX(50px);\n  }\n  100% {\n    opacity: 0;\n    transform: translateX(100px);\n  }\n}\n\n@keyframes dot-gathering {\n  0% {\n    opacity: 0;\n    transform: translateX(0);\n  }\n  35%, 60% {\n    opacity: 1;\n    transform: translateX(50px);\n  }\n  100% {\n    opacity: 0;\n    transform: translateX(100px);\n  }\n}\n/**\n * ==============================================\n * Experimental: Gooey Effect\n * Dot Hourglass\n * ==============================================\n */\n.dot-hourglass {\n  position: relative;\n  top: -99px;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: hsl(0deg, 100%, 0%);\n  color: transparent;\n  margin: -1px 0;\n  filter: blur(2px);\n  transform-origin: 27.5px 126.5px;\n  -webkit-animation: dot-hourglass 2.4s infinite ease-in-out;\n          animation: dot-hourglass 2.4s infinite ease-in-out;\n  -webkit-animation-delay: 0.6s;\n          animation-delay: 0.6s;\n}\n.dot-hourglass::before, .dot-hourglass::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: hsl(0deg, 100%, 0%);\n  color: transparent;\n  filter: blur(2px);\n}\n.dot-hourglass::before {\n  top: 198px;\n}\n.dot-hourglass::after {\n  -webkit-animation: dot-hourglass-after 2.4s infinite cubic-bezier(0.65, 0.05, 0.36, 1);\n          animation: dot-hourglass-after 2.4s infinite cubic-bezier(0.65, 0.05, 0.36, 1);\n}\n\n@-webkit-keyframes dot-hourglass {\n  0% {\n    transform: rotateZ(0deg);\n  }\n  25% {\n    transform: rotateZ(180deg);\n  }\n  50% {\n    transform: rotateZ(180deg);\n  }\n  75% {\n    transform: rotateZ(360deg);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n}\n\n@keyframes dot-hourglass {\n  0% {\n    transform: rotateZ(0deg);\n  }\n  25% {\n    transform: rotateZ(180deg);\n  }\n  50% {\n    transform: rotateZ(180deg);\n  }\n  75% {\n    transform: rotateZ(360deg);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n}\n@-webkit-keyframes dot-hourglass-after {\n  0% {\n    transform: translateY(0);\n  }\n  25% {\n    transform: translateY(198px);\n  }\n  50% {\n    transform: translateY(198px);\n  }\n  75% {\n    transform: translateY(0);\n  }\n  100% {\n    transform: translateY(0);\n  }\n}\n@keyframes dot-hourglass-after {\n  0% {\n    transform: translateY(0);\n  }\n  25% {\n    transform: translateY(198px);\n  }\n  50% {\n    transform: translateY(198px);\n  }\n  75% {\n    transform: translateY(0);\n  }\n  100% {\n    transform: translateY(0);\n  }\n}\n/**\n * ==============================================\n * Experimental: Gooey Effect\n * Dot Overtaking\n * ==============================================\n */\n.dot-overtaking {\n  position: relative;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: transparent;\n  color: hsl(0deg, 100%, 0%);\n  margin: -1px 0;\n  box-shadow: 0 -20px 0 0;\n  filter: blur(2px);\n  -webkit-animation: dot-overtaking 2s infinite cubic-bezier(0.2, 0.6, 0.8, 0.2);\n          animation: dot-overtaking 2s infinite cubic-bezier(0.2, 0.6, 0.8, 0.2);\n}\n.dot-overtaking::before, .dot-overtaking::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: transparent;\n  color: hsl(0deg, 100%, 0%);\n  box-shadow: 0 -20px 0 0;\n  filter: blur(2px);\n}\n.dot-overtaking::before {\n  -webkit-animation: dot-overtaking 2s infinite cubic-bezier(0.2, 0.6, 0.8, 0.2);\n          animation: dot-overtaking 2s infinite cubic-bezier(0.2, 0.6, 0.8, 0.2);\n  -webkit-animation-delay: 0.3s;\n          animation-delay: 0.3s;\n}\n.dot-overtaking::after {\n  -webkit-animation: dot-overtaking 1.5s infinite cubic-bezier(0.2, 0.6, 0.8, 0.2);\n          animation: dot-overtaking 1.5s infinite cubic-bezier(0.2, 0.6, 0.8, 0.2);\n  -webkit-animation-delay: 0.6s;\n          animation-delay: 0.6s;\n}\n\n@-webkit-keyframes dot-overtaking {\n  0% {\n    transform: rotateZ(0deg);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n}\n\n@keyframes dot-overtaking {\n  0% {\n    transform: rotateZ(0deg);\n  }\n  100% {\n    transform: rotateZ(360deg);\n  }\n}\n/**\n * ==============================================\n * Experimental: Gooey Effect\n * Dot Shuttle\n * ==============================================\n */\n.dot-shuttle {\n  position: relative;\n  left: -99px;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: hsl(0deg, 100%, 0%);\n  color: transparent;\n  margin: -1px 0;\n  filter: blur(2px);\n}\n.dot-shuttle::before, .dot-shuttle::after {\n  content: \"\";\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  width: 12px;\n  height: 12px;\n  border-radius: 6px;\n  background-color: hsl(0deg, 100%, 0%);\n  color: transparent;\n  filter: blur(2px);\n}\n.dot-shuttle::before {\n  left: 99px;\n  -webkit-animation: dot-shuttle 2s infinite ease-out;\n          animation: dot-shuttle 2s infinite ease-out;\n}\n.dot-shuttle::after {\n  left: 198px;\n}\n\n@-webkit-keyframes dot-shuttle {\n  0%, 50%, 100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(-297px);\n  }\n  75% {\n    transform: translateX(297px);\n  }\n}\n\n@keyframes dot-shuttle {\n  0%, 50%, 100% {\n    transform: translateX(0);\n  }\n  25% {\n    transform: translateX(-297px);\n  }\n  75% {\n    transform: translateX(297px);\n  }\n}\n/**\n * ==============================================\n * Experimental: Emoji\n * Dot Bouncing\n * ==============================================\n */\n.dot-bouncing {\n  position: relative;\n  height: 55px;\n  font-size: 10px;\n}\n.dot-bouncing::before {\n  content: \"⚽🏀🏐\";\n  display: inline-block;\n  position: relative;\n  -webkit-animation: dot-bouncing 1s infinite;\n          animation: dot-bouncing 1s infinite;\n}\n\n@-webkit-keyframes dot-bouncing {\n  0% {\n    top: -20px;\n    -webkit-animation-timing-function: ease-in;\n            animation-timing-function: ease-in;\n  }\n  34% {\n    transform: scale(1, 1);\n  }\n  35% {\n    top: 20px;\n    -webkit-animation-timing-function: ease-out;\n            animation-timing-function: ease-out;\n    transform: scale(1.5, 0.5);\n  }\n  45% {\n    transform: scale(1, 1);\n  }\n  90% {\n    top: -20px;\n  }\n  100% {\n    top: -20px;\n  }\n}\n\n@keyframes dot-bouncing {\n  0% {\n    top: -20px;\n    -webkit-animation-timing-function: ease-in;\n            animation-timing-function: ease-in;\n  }\n  34% {\n    transform: scale(1, 1);\n  }\n  35% {\n    top: 20px;\n    -webkit-animation-timing-function: ease-out;\n            animation-timing-function: ease-out;\n    transform: scale(1.5, 0.5);\n  }\n  45% {\n    transform: scale(1, 1);\n  }\n  90% {\n    top: -20px;\n  }\n  100% {\n    top: -20px;\n  }\n}\n/**\n * ==============================================\n * Experimental: Emoji\n * Dot Rolling\n * ==============================================\n */\n.dot-rolling {\n  position: relative;\n  height: 55px;\n  font-size: 10px;\n}\n.dot-rolling::before {\n  content: \"⚽\";\n  display: inline-block;\n  position: relative;\n  transform: translateX(-25px);\n  -webkit-animation: dot-rolling 3s infinite;\n          animation: dot-rolling 3s infinite;\n}\n\n@-webkit-keyframes dot-rolling {\n  0% {\n    content: \"⚽\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  16.667% {\n    content: \"⚽\";\n    transform: translateX(25px) rotateZ(720deg);\n  }\n  33.333% {\n    content: \"⚽\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  34.333% {\n    content: \"🏀\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  50% {\n    content: \"🏀\";\n    transform: translateX(25px) rotateZ(720deg);\n  }\n  66.667% {\n    content: \"🏀\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  67.667% {\n    content: \"🏐\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  83.333% {\n    content: \"🏐\";\n    transform: translateX(25px) rotateZ(720deg);\n  }\n  100% {\n    content: \"🏐\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n}\n\n@keyframes dot-rolling {\n  0% {\n    content: \"⚽\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  16.667% {\n    content: \"⚽\";\n    transform: translateX(25px) rotateZ(720deg);\n  }\n  33.333% {\n    content: \"⚽\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  34.333% {\n    content: \"🏀\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  50% {\n    content: \"🏀\";\n    transform: translateX(25px) rotateZ(720deg);\n  }\n  66.667% {\n    content: \"🏀\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  67.667% {\n    content: \"🏐\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n  83.333% {\n    content: \"🏐\";\n    transform: translateX(25px) rotateZ(720deg);\n  }\n  100% {\n    content: \"🏐\";\n    transform: translateX(-25px) rotateZ(0deg);\n  }\n}/*# sourceMappingURL=dots.css.map */", "",{"version":3,"sources":["webpack://./css/dots.css","webpack://./css/dot-loader/_dot-elastic.scss","webpack://./css/dot-loader/_mixins.scss","webpack://./css/dot-loader/_variables.scss","webpack://./css/dot-loader/_dot-pulse.scss","webpack://./css/dot-loader/_dot-flashing.scss","webpack://./css/dot-loader/_dot-collision.scss","webpack://./css/dot-loader/_dot-revolution.scss","webpack://./css/dot-loader/_dot-carousel.scss","webpack://./css/dot-loader/_dot-typing.scss","webpack://./css/dot-loader/_dot-windmill.scss","webpack://./css/dot-loader/_dot-bricks.scss","webpack://./css/dot-loader/_dot-floating.scss","webpack://./css/dot-loader/_dot-fire.scss","webpack://./css/dot-loader/_dot-spin.scss","webpack://./css/dot-loader/_dot-falling.scss","webpack://./css/dot-loader/_dot-stretching.scss","webpack://./css/dot-loader/_dot-gathering.scss","webpack://./css/dot-loader/_dot-hourglass.scss","webpack://./css/dot-loader/_dot-overtaking.scss","webpack://./css/dot-loader/_dot-shuttle.scss","webpack://./css/dot-loader/_dot-bouncing.scss","webpack://./css/dot-loader/_dot-rolling.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACAhB;;;;EAAA;AAMA;EACE,kBAAA;ECIA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EFGV,iDAAA;UAAA,yCAAA;ADGF;ACDE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;ADEJ;ACCE;EACE,WAAA;ECXF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EFkBR,wDAAA;UAAA,gDAAA;ADGJ;ACAE;EACE,UEjBU;EDFZ,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EF0BR,uDAAA;UAAA,+CAAA;ADIJ;;ACAA;EACE;IACE,sBAAA;EDGF;ECAA;IACE,wBAAA;EDEF;ECCA;IACE,yBAAA;EDCF;ECEA;IACE,sBAAA;EDAF;ECGA;IACE,sBAAA;EDDF;AACF;;AClBA;EACE;IACE,sBAAA;EDGF;ECAA;IACE,wBAAA;EDEF;ECCA;IACE,yBAAA;EDCF;ECEA;IACE,sBAAA;EDAF;ECGA;IACE,sBAAA;EDDF;AACF;ACIA;EACE;IACE,sBAAA;EDFF;ECKA;IACE,sBAAA;EDHF;ECMA;IACE,wBAAA;EDJF;ECOA;IACE,sBAAA;EDLF;ECQA;IACE,sBAAA;EDNF;AACF;ACbA;EACE;IACE,sBAAA;EDFF;ECKA;IACE,sBAAA;EDHF;ECMA;IACE,wBAAA;EDJF;ECOA;IACE,sBAAA;EDLF;ECQA;IACE,sBAAA;EDNF;AACF;ACSA;EACE;IACE,sBAAA;EDPF;ECUA;IACE,sBAAA;EDRF;ECWA;IACE,yBAAA;EDTF;ECYA;IACE,wBAAA;EDVF;ECaA;IACE,sBAAA;EDXF;AACF;ACRA;EACE;IACE,sBAAA;EDPF;ECUA;IACE,sBAAA;EDRF;ECWA;IACE,yBAAA;EDTF;ECYA;IACE,wBAAA;EDVF;ECaA;IACE,sBAAA;EDXF;AACF;AI1FA;;;;EAAA;AAWA;EACE,kBAAA;EACA,aAPS;EFKT,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;ECSV,2BAAA;EACA,iDAAA;UAAA,yCAAA;EACA,8BAAA;UAAA,sBAAA;AJwFF;AItFE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;EFfF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;AH8GZ;AIvFE;EACE,2BAAA;EACA,wDAAA;UAAA,gDAAA;EACA,2BAAA;UAAA,mBAAA;AJyFJ;AItFE;EACE,4BAAA;EACA,uDAAA;UAAA,+CAAA;EACA,6BAAA;UAAA,qBAAA;AJwFJ;;AIpFA;EACE;IACE,2BAAA;EJuFF;EIpFA;IACE,0BAAA;EJsFF;EInFA;IAEE,2BAAA;EJoFF;AACF;;AIhGA;EACE;IACE,2BAAA;EJuFF;EIpFA;IACE,0BAAA;EJsFF;EInFA;IAEE,2BAAA;EJoFF;AACF;AIjFA;EACE;IACE,2BAAA;EJmFF;EIhFA;IACE,0BAAA;EJkFF;EI/EA;IAEE,2BAAA;EJgFF;AACF;AI5FA;EACE;IACE,2BAAA;EJmFF;EIhFA;IACE,0BAAA;EJkFF;EI/EA;IAEE,2BAAA;EJgFF;AACF;AI7EA;EACE;IACE,4BAAA;EJ+EF;EI5EA;IACE,2BAAA;EJ8EF;EI3EA;IAEE,4BAAA;EJ4EF;AACF;AIxFA;EACE;IACE,4BAAA;EJ+EF;EI5EA;IACE,2BAAA;EJ8EF;EI3EA;IAEE,4BAAA;EJ4EF;AACF;AKlKA;;;;EAAA;AAMA;EACE,kBAAA;EHIA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EEGV,4DAAA;UAAA,oDAAA;EACA,6BAAA;UAAA,qBAAA;ALqKF;AKnKE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;ALoKJ;AKjKE;EACE,WAAA;EHZF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EEmBR,qDAAA;UAAA,6CAAA;EACA,2BAAA;UAAA,mBAAA;ALqKJ;AKlKE;EACE,UFnBU;EDFZ,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EE4BR,qDAAA;UAAA,6CAAA;EACA,2BAAA;UAAA,mBAAA;ALsKJ;;AKlKA;EACE;IACE,yBAAA;ELqKF;EKlKA;IAEE,uCAAA;ELmKF;AACF;;AK3KA;EACE;IACE,yBAAA;ELqKF;EKlKA;IAEE,uCAAA;ELmKF;AACF;AMpNA;;;;EAAA;AAMA;EACE,kBAAA;EJIA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;AHyNZ;AMtNE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;ANuNJ;AMpNE;EACE,WAAA;EJTF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EGgBR,2DAAA;UAAA,mDAAA;ANwNJ;AMrNE;EACE,UHxBQ;EDOV,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EGwBR,0DAAA;UAAA,kDAAA;EACA,2BAAA;UAAA,mBAAA;ANyNJ;;AMrNA;EACE;IAIE,wBAAA;ENqNF;EMlNA;IACE,4BAAA;ENoNF;AACF;;AM9NA;EACE;IAIE,wBAAA;ENqNF;EMlNA;IACE,4BAAA;ENoNF;AACF;AMjNA;EACE;IAIE,wBAAA;ENgNF;EM7MA;IACE,2BAAA;EN+MF;AACF;AMzNA;EACE;IAIE,wBAAA;ENgNF;EM7MA;IACE,2BAAA;EN+MF;AACF;AO3QA;;;;EAAA;AAMA;EACE,kBAAA;ELIA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;AHgRZ;AO7QE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;AP8QJ;AO3QE;EACE,OAAA;EACA,UAAA;ELTF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EIgBR,gCAAA;EACA,sDAAA;UAAA,8CAAA;AP+QJ;AO5QE;EACE,OAAA;EACA,WAAA;ELnBF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EI0BR,gCAAA;EACA,oDAAA;UAAA,4CAAA;APgRJ;;AO5QA;EACE;IACE,6CAAA;EP+QF;EO5QA;IACE,+CAAA;EP8QF;AACF;;AOrRA;EACE;IACE,6CAAA;EP+QF;EO5QA;IACE,+CAAA;EP8QF;AACF;AQ5TA;;;;EAAA;AAWA;EACE,kBAAA;EACA,aAPS;ENKT,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EKSV,6EACE;EAGF,oDAAA;UAAA,4CAAA;ARuTF;;AQpTA;EACE;IACE,qFACE;ERsTJ;EQjTA;IACE,qFACE;ERkTJ;EQ7SA;IACE,qFACE;ER8SJ;AACF;;AQhUA;EACE;IACE,qFACE;ERsTJ;EQjTA;IACE,qFACE;ERkTJ;EQ7SA;IACE,qFACE;ER8SJ;AACF;ASxVA;;;;EAAA;AAWA;EACE,kBAAA;EACA,aAPS;EPKT,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EMSV,6EACE;EAGF,kDAAA;UAAA,0CAAA;ATmVF;;AShVA;EACE;IACE,6EACE;ETkVJ;ES7UA;IACE,iFACE;ET8UJ;ESzUA;IACE,6EACE;ET0UJ;ESrUA;IACE,iFACE;ETsUJ;ESjUA;IACE,6EACE;ETkUJ;ES7TA;IACE,iFACE;ET8TJ;ESzTA;IACE,6EACE;ET0TJ;AACF;;ASxWA;EACE;IACE,6EACE;ETkVJ;ES7UA;IACE,iFACE;ET8UJ;ESzUA;IACE,6EACE;ET0UJ;ESrUA;IACE,iFACE;ETsUJ;ESjUA;IACE,6EACE;ETkUJ;ES7TA;IACE,iFACE;ET8TJ;ESzTA;IACE,6EACE;ET0TJ;AACF;AUhYA;;;;EAAA;AAUA;EACE,kBAAA;EACA,UAAA;ERDA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EOQV,0BAAA;EACA,kDAAA;UAAA,0CAAA;AV+XF;AU7XE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;AV8XJ;AU3XE;EACE,gBAAA;EACA,SAAA;ERjBF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;AHsZZ;AU7XE;EACE,eAAA;EACA,SAAA;ERxBF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;AH+ZZ;;AU9XA;EACE;IACE,6CAAA;EViYF;EU9XA;IACE,+CAAA;EVgYF;AACF;;AUvYA;EACE;IACE,6CAAA;EViYF;EU9XA;IACE,+CAAA;EVgYF;AACF;AWhbA;;;;EAAA;AAcA;EACE,kBAAA;EACA,WATQ;EAUR,aATS;ETGT,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EQaV,uFACE;EAGF,8CAAA;UAAA,sCAAA;AXwaF;;AWraA;EACE;IACE,uFACE;EXuaJ;EWlaA;IACE,wFACE;EXmaJ;EW9ZA;IACE,4FACE;EX+ZJ;EW1ZA;IACE,2FACE;EX2ZJ;EWtZA;IACE,uFACE;EXuZJ;EWlZA;IACE,wFACE;EXmZJ;EW9YA;IACE,4FACE;EX+YJ;EW1YA;IACE,2FACE;EX2YJ;EWtYA;IACE,uFACE;EXuYJ;EWlYA;IACE,wFACE;EXmYJ;EW9XA;IACE,4FACE;EX+XJ;EW1XA;IACE,2FACE;EX2XJ;EWtXA;IACE,uFACE;EXuXJ;AACF;;AW/cA;EACE;IACE,uFACE;EXuaJ;EWlaA;IACE,wFACE;EXmaJ;EW9ZA;IACE,4FACE;EX+ZJ;EW1ZA;IACE,2FACE;EX2ZJ;EWtZA;IACE,uFACE;EXuZJ;EWlZA;IACE,wFACE;EXmZJ;EW9YA;IACE,4FACE;EX+YJ;EW1YA;IACE,2FACE;EX2YJ;EWtYA;IACE,uFACE;EXuYJ;EWlYA;IACE,wFACE;EXmYJ;EW9XA;IACE,4FACE;EX+XJ;EW1XA;IACE,2FACE;EX2XJ;EWtXA;IACE,uFACE;EXuXJ;AACF;AY3eA;;;;EAAA;AASA;EACE,kBAAA;EVCA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;ESMV,6EAAA;UAAA,qEAAA;AZ2eF;AYzeE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;AZ0eJ;AYveE;EACE,WAAA;EVdF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;ESqBR,8DAAA;UAAA,sDAAA;AZ2eJ;AYxeE;EACE,WAAA;EVtBF,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;ES6BR,4EAAA;UAAA,oEAAA;AZ4eJ;;AYxeA;EACE;IACE,yBAAA;EZ2eF;EYxeA;IACE,yBAAA;EZ0eF;EYveA;IACE,yBAAA;EZyeF;AACF;;AYpfA;EACE;IACE,yBAAA;EZ2eF;EYxeA;IACE,y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CE,gDAAA;Ef0nBF;AACF;AevoBA;EACE;IACE,iDAAA;Ef8nBF;Ee3nBA;IAGE,iCAAA;Ef2nBF;EexnBA;IACE,gDAAA;Ef0nBF;AACF;AgBhuBA;;;;EAAA;AASA;EACE,kBAAA;EdCA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EaMV,4BAAA;EACA,qDAAA;UAAA,6CAAA;AhBguBF;AgB9tBE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;AhB+tBJ;AgB5tBE;EddA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;EaoBR,4DAAA;UAAA,oDAAA;AhBiuBJ;AgB9tBE;EdpBA,WCPU;EDQV,YCPW;EDQX,mBCPW;EDQX,yBCNU;EDOV,cCPU;Ea0BR,2DAAA;UAAA,mDAAA;AhBmuBJ;;AgB/tBA;EACE;IACE,4BAAA;EhBkuBF;EgB/tBA;IAEE,0BAAA;EhBguBF;EgB7tBA;IACE,4BAAA;EhB+tBF;AACF;;AgB3uBA;EACE;IACE,4BAAA;EhBkuBF;EgB/tBA;IAEE,0BAAA;EhBguBF;EgB7tBA;IACE,4BAAA;EhB+tBF;AACF;AgB5tBA;EACE;IACE,uCAAA;EhB8tBF;EgB3tBA;IAEE,uCAAA;EhB4tBF;EgBztBA;IACE,uCAAA;EhB2tBF;AACF;AgBvuBA;EACE;IACE,uCAAA;EhB8tBF;EgB3tBA;IAEE,uCAAA;EhB4tBF;EgBztBA;IACE,uCAAA;EhB2tBF;AACF;AgBxtBA;EACE;IACE,uCAAA;EhB0tBF;EgBvtBA;IAEE,sCAAA;EhBwtBF;EgBrtBA;IACE,uCAAA;EhButBF;AACF;AgBnuBA;EACE;IACE,uCAAA;EhB0tBF;EgBvtBA;IAEE,sCAAA;EhBwtBF;EgBrtBA;IACE,uCAAA;EhButBF;AACF;AiBvyBA;;;;;EAAA;AAWA;EACE,kBAAA;EfDA,WeIU;EfHV,YeIW;EfHX,kBeIW;EfHX,qCePc;EfQd,kBeIU;EAGV,cAAA;EACA,iBAAA;AjBgyBF;AiB9xBE;EAEE,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,MAAA;EACA,WAAA;EfpBF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","sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./css/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./css/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
// Imports



var ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! ../../../../../../../../../../images/contact_darkened-overlay_darker.jpg */ "./images/contact_darkened-overlay_darker.jpg"), __webpack_require__.b);
var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";\n:root {\n  --trans-main: rgba(10, 10, 10, .98);\n  --trans-black: rgb(39, 39, 39, .7);\n  --trans-black_alt: rgb(33, 33, 33, .85);\n  --off-white_trans: rgb(224, 224, 224, .4);\n  --blackish-brown_1: rgba(70, 62, 55);\n  --blackish-brown_1_trans: rgba(70, 62, 55, 0.95);\n  --blackish-brown_2_trans: rgba(49, 43, 39, 0.75);\n  --blackish-brown_2_trans_alt: rgba(51, 45, 40, 0.85);\n  --soft-brown: rgb(100, 92, 82);\n  --whitish-gold: rgb(255, 247, 212);\n  --muted-gold: rgb(199, 187, 156);\n  --bright-gold: rgb(197, 182, 116);\n  --off-white: rgb(224, 224, 224);\n  --off-black: rgb(31, 27, 21);\n  --header_color: var(--muted-gold);\n  --header_height: 4rem;\n  --header_background-color: var(--blackish-brown_1_trans);\n  --header_box-shadow_color: var(--blackish-brown_2_trans);\n  --nav-li_background-color: var(--blackish-brown_1);\n  --nav-li_box-shadow_color: var(--blackish-brown_2_trans);\n  --nav-li_border-bottom_color: var(--blackish-brown_2_trans_alt);\n  --nav-button_font-size: 1.8rem;\n  --nav-a_font-size: 1.2rem;\n  --nav-mobile_color: var(--whitish-gold);\n  --body_color: var(--whitish-gold);\n  --body_background-color: var(--soft-brown);\n  --interaction-prompt_background-color: var(--trans-main);\n  --page-links: var(--off-white);\n  --title-box_border_color: var(--muted-gold);\n  --dark-title-box_border_color: var(--muted-gold);\n  --dark-content_background-color: var(--off-black);\n  --dark-content_color: var(--off-white);\n  --news_border_color: var(--off-white_trans);\n  --pup_background-color: var(--blackish-brown_1_trans);\n  --pup-button_color: --off-white;\n  --form-error_color: red;\n  --form-button_color: var(--off-white);\n  --opening-container-color: var(--off-white);\n  --single-container_color: var(--off-white);\n  --single-container_background-color: var(--blackish-brown_2_trans_alt);\n  --single-container-button_color: var(--body_color);\n  --single-container-header_color: var(--muted-gold);\n  --section-tabs_color: var(--off-white);\n  --section-tabs_border-color: var(--muted-gold);\n  --section-tabs-active_color: var(--bright-gold);\n  --flc_background-color: var(--blackish-brown_1_trans);\n  --flc_box-shadow_color: var(--trans-black_alt);\n  --flc_border_color: rgba(212, 193, 130, .4);\n  --flc-button_inactive: red;\n  --flc-search_inactive: gray;\n  --tao_border_color: rgb(185, 158, 122);\n  --snc_border_color: rgb(180, 174, 164);\n  --pagination-holder_border_color: rgba(212, 193, 130, .4);\n  --mtc_background-color: var(--trans-main);\n  --mtc-button_color: var(--body_color);\n  --footer_height: 6.5rem;\n  --footer_color: var(--whitish-gold);\n  --footer_background-color: var(--trans-black);\n  --footer-symbols_color: var(--off-white);\n  --pagination_color: var(--muted-gold);\n  --a_selected: var(--bright-gold);\n  --media-reciever_background-color: var(--trans-main);\n  --media-reciever-category-link: var(--bright-gold);\n  --media-reciever-information_color: var(--off-white);\n  --media-reciever-close: var(--whitish-gold);\n  --current-media_width: 99vw;\n  --play-button_color: rgba(99, 100, 179, .8);\n  --play-button-inner_color: rgb(125, 150, 168);\n}\n@media (min-width: 1200px) {\n  :root {\n    --footer_height: 4.5rem;\n  }\n}\n\n.tabletLandscape, .tabletPortrait {\n  --h1_font-size: 3rem;\n  --header_height: 4.5rem;\n  --nav-button_font-size: 1.6rem;\n  --nav-a_font-size: 1.3rem;\n  --opening-container-p_font-size: 1.7rem;\n  --all-news-container_height: 40rem;\n  --display-inner-container_grid-template-areas:\"titleAndTextBox contentBox pagination\";\n  --display-inner-container_grid-template-columns: 22% 71% 1fr;\n  --inner-container_grid-template-areas: \"titleAndTextBox contentBox\";\n  --inner-container_grid-template-columns: 20% 1fr;\n  --inner-container_height: calc(100% - var(--header_height));\n  --all-news-inner-container_grid-template-areas: var(--inner-container_grid-template-areas);\n  --all-news-inner-container_grid-template-columns: var(--inner-container_grid-template-columns);\n  --all-news-inner-container_grid-template-rows: 100%;\n  --contact-inner-container_grid-template-columns: var(--inner-container_grid-template-columns);\n  --contact-inner-container_grid-template-areas: var(--inner-container_grid-template-areas);\n  --titleAndTextBox_display: grid;\n  --title-box_padding: 6%;\n  --title-box-p_text-size: 1.3rem;\n  --title-box-h2_text-size: 1.6rem;\n  --display-content-box_grid-template-columns: repeat(3, 33%);\n  --content-box-h3_padding-top: 0;\n  --content-box-h3_font-size: 1.8rem;\n  --all-news-content-box_height: 100%;\n  --all-news-content-box_display: grid;\n  --all-news-content-box_grid-template-columns: repeat(2, 50%);\n  --all-news-content-box_grid-template-rows: 100%;\n  --news-type-tabs_display: none;\n  --news-column_height: 100%;\n  --contact-content-box_height: calc(100vh - var(--header_height) - var(--footer_height));\n  --pagination-container_display: flex;\n  --pagination_flex-direction: column;\n  --pagination_position: sticky;\n  --form_grid-template-areas:\"contactName contactEmail\"\n                              \"contactPhone contactSubject\"\n                              \"contactMessage contactMessage\"\n                              \"submit ...\";\n  --textarea_height: 9rem;\n  --overall-squares_width: 80%;\n  --section_margin-top: 0rem;\n  --mainImageAndStats_grid-template-areas:\"img ul\";\n  --mainImageAndStats_grid-template-rows: initial;\n  --mainImageAndStats_grid-template-columns: repeat(2, 50%);\n  --mainImageAndStats-img_height: initial;\n  --single-info_grid-template-rows: initial;\n  --single-info_grid-template-areas: \"info media\";\n  --prop-info_margin-top: 0;\n  --media-card_font-size: 1.5rem;\n  --media-card_column-gap: 0;\n  --media-card_row-gap: .7rem;\n  --media-card_flex-direction: column;\n  --thumb_width: 8rem;\n  --updates-col-h3_font-size: 1.8rem;\n  --updates-col-img_width: 52%;\n  --current-media_width: 70vw;\n  --footer_height: 3rem;\n  --footer-p_font-size: 1.1rem;\n  --footer-symbols_font-size: 1.5rem;\n  --footer_grid-template-areas:\"copyright creator social\";\n}\n\n.phonePortrait {\n  --current-media_width: 99vw;\n}\n\nhtml {\n  overflow-x: hidden;\n  margin: 0;\n}\n@media (min-width: 1200px) {\n  html {\n    font-size: 1.85vh;\n  }\n}\nhtml.freeze {\n  overflow: hidden;\n}\n\nbody {\n  margin: 0;\n  color: var(--body_color);\n  height: 100%;\n  background-color: var(--body_background-color);\n}\n\nh1 {\n  margin: 0;\n  margin-bottom: 3rem;\n  font-size: 4rem;\n}\n\nh2 {\n  font-size: 2.5rem;\n  margin: 0;\n}\n@media (min-width: 1200px) {\n  h2 {\n    font-size: 2.15rem;\n  }\n}\nh2 a {\n  font-size: 1.9rem;\n}\n\nh3 {\n  font-size: 3rem;\n  margin: 0;\n}\n@media (min-width: 1200px) {\n  h3 {\n    font-size: 2.5rem;\n  }\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n  cursor: pointer;\n}\n\na:hover {\n  filter: brightness(70%);\n}\n\na.selectedPage {\n  pointer-events: none;\n  color: var(--a_selected);\n}\n\n*.selected {\n  filter: contrast(27%);\n  pointer-events: none;\n}\n\n*.hidden {\n  display: none;\n  pointer-events: none;\n}\n\ndiv, button {\n  box-sizing: border-box;\n}\n\na.hidden {\n  opacity: 0;\n}\n\nbutton {\n  border: none;\n  background: transparent;\n  cursor: pointer;\n}\n\nli {\n  list-style-type: none;\n}\n\nh1 {\n  font-weight: 700;\n}\n\nh2 {\n  font-weight: 400;\n}\n\nh1, h2, h3, h4 {\n  font-family: \"Libre Caslon Text\", serif;\n}\n\n.content-pages {\n  color: var(--off-white);\n}\n\n.textBox p, #relationship-link, #single-link {\n  font-family: \"Libre Caslon Display\", serif;\n}\n\n.display-text, #welcomeContainer p, .titleBox p, .contentContainer h3 {\n  font-family: \"Cormorant SC\", serif;\n}\n\nbody, input, button, .read-more, .news li a, header li a, #realtimeFiltersAndSorting button,\n#search-filters button, #reset-all, .news p, .see-more-link, #section-tabs button, .content-pages a, #news-type-tabs > div button {\n  font-family: \"Lora\", serif;\n}\n\n.required {\n  color: rgb(250, 48, 48);\n}\n\nheader {\n  color: var(--muted-gold);\n  display: grid;\n  grid-template-columns: [logos] auto [additionalButtons] 1fr [navigation] auto;\n  grid-template-areas: \"logos additionalButtons navigation\";\n  background-color: var(--header_background-color);\n  box-shadow: 0.2rem 0.2rem 1rem 0.4rem inset var(--header_box-shadow_color);\n  width: 100%;\n  height: var(--header_height);\n  position: fixed;\n  top: 0;\n  z-index: 9999;\n}\n@media (min-width: 767px) {\n  header {\n    grid-template-columns: [logoSymbol] 10% [logoText] 29% [additionalButtons] 36% [navigation] 1fr;\n    grid-template-areas: \"logoSymbol logoText additionalButtons navigation\";\n  }\n}\n@media (min-width: 1200px) {\n  header {\n    grid-template-columns: [logoSymbol] 5% [logoText] 25% [additionalButtons] 25% [navigation] 1fr;\n    grid-template-areas: \"logoSymbol logoText additionalButtons navigation\";\n  }\n}\n@media (min-width: 1200px) {\n  header {\n    height: 4rem;\n  }\n}\nheader.hidden {\n  display: none;\n}\nheader button {\n  font-size: 1.5rem;\n  cursor: pointer;\n}\n@media (min-width: 767px) {\n  header button {\n    font-size: 1.8rem;\n    font-size: var(--nav-button_font-size);\n  }\n}\nheader button i {\n  display: inline;\n}\nheader #logos-container {\n  padding-left: 0.4rem;\n  display: flex;\n  align-items: center;\n  -moz-column-gap: 0.3rem;\n       column-gap: 0.3rem;\n  grid-area: logos;\n  height: var(--header_height);\n}\nheader #logos-container #logo-symbol, header #logos-container #logo-text {\n  height: calc(var(--header_height) * 0.65);\n}\nheader #logos-container #logo-symbol {\n  grid-area: logoSymbol;\n  margin-top: 0.3rem;\n}\nheader #logos-container #logo-text {\n  grid-area: logoText;\n  margin-top: 0.6rem;\n}\n@media (min-width: 767px) {\n  header #logos-container #logo-text {\n    padding-left: 2.8rem;\n  }\n}\nheader img {\n  height: 100%;\n}\nheader p, header nav {\n  margin: 0;\n}\nheader nav {\n  position: relative;\n  justify-self: end;\n  overflow: hidden;\n}\n@media (min-width: 1200px) {\n  header nav {\n    grid-area: navigation;\n    background-color: transparent;\n    overflow: visible;\n    justify-self: unset;\n    margin-right: 2rem;\n  }\n}\nheader nav ul {\n  overflow: hidden;\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  align-items: center;\n}\n@media (min-width: 1200px) {\n  header nav ul {\n    flex-direction: row;\n    gap: 1.5rem;\n    height: 100%;\n    justify-content: initial;\n  }\n}\nheader nav ul li {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  background-color: var(--nav-li_background-color);\n  box-shadow: 0.2rem 0.2rem 1rem 0.6rem inset var(--nav-li_box-shadow_color);\n  border-bottom: 0.3rem solid var(--nav-li_border-bottom_color);\n  border-radius: 5%;\n}\n@media (min-width: 1200px) {\n  header nav ul li {\n    box-shadow: none;\n    width: initial;\n    height: initial;\n    background-color: transparent;\n    border-radius: initial;\n    border: none;\n  }\n}\nheader nav ul li a {\n  padding: 0.5rem 0.5rem;\n  font-size: 1.15rem;\n}\n@media (min-width: 767px) {\n  header nav ul li a {\n    padding: 0.5rem 1rem;\n    font-size: var(--nav-a_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  header nav ul li a {\n    padding: 0;\n  }\n}\nheader nav ul #return-home,\nheader nav ul #mobile-nav-caller {\n  height: var(--header_height);\n  box-shadow: none;\n  border: none;\n  background: transparent;\n}\n@media (min-width: 1200px) {\n  header nav ul #return-home,\nheader nav ul #mobile-nav-caller {\n    height: 4rem;\n  }\n}\n@media (min-width: 1200px) {\n  header nav ul #return-home,\nheader nav ul #mobile-nav-caller {\n    display: none;\n  }\n}\nheader nav ul #return-home button,\nheader nav ul #mobile-nav-caller button {\n  color: var(--nav-mobile_color);\n}\nheader nav.opened {\n  overflow: visible;\n}\n\n#footerContainer {\n  height: var(--footer_height);\n  color: var(--footer_color);\n  background-color: var(--footer_background-color);\n  margin: 0;\n  display: grid;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n  grid-template-areas: \"additionalButtons additionalButtons\" \"copyright social\" \"creator creator\";\n  justify-items: center;\n  align-items: center;\n}\n@media (min-width: 767px) {\n  #footerContainer {\n    grid-template-areas: var(--footer_grid-template-areas);\n  }\n}\n@media (min-width: 1200px) {\n  #footerContainer {\n    grid-template-areas: \"copyright social\" \"creator creator\";\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-right: 2rem;\n    padding-left: 2rem;\n  }\n}\n#footerContainer p {\n  margin: 0;\n}\n#footerContainer #additional-buttons-alt button {\n  color: var(--footer_color);\n}\n#footerContainer .credit, #footerContainer #additional-buttons-alt button {\n  font-size: 1rem;\n}\n@media (min-width: 767px) {\n  #footerContainer .credit, #footerContainer #additional-buttons-alt button {\n    font-size: var(--footer-p_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  #footerContainer .credit, #footerContainer #additional-buttons-alt button {\n    font-size: 1.2rem;\n  }\n}\n#footerContainer #credit-copyright {\n  grid-area: copyright;\n}\n#footerContainer #credit-creator {\n  grid-area: creator;\n}\n#footerContainer #social-container {\n  grid-area: social;\n  color: var(--footer-symbols_color);\n}\n#footerContainer #social-container a {\n  font-size: 1.4rem;\n  margin: 1rem;\n}\n@media (min-width: 767px) {\n  #footerContainer #social-container a {\n    font-size: var(--footer-symbols_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  #footerContainer #social-container a {\n    font-size: 1.3rem;\n    margin: 0.65rem;\n  }\n}\n\n#overallContainer {\n  position: relative;\n  top: 0;\n}\n#overallContainer.faded {\n  filter: opacity(40%);\n}\n\n#openingContainer {\n  position: relative;\n  color: var(--opening-container-color);\n  display: flex;\n  justify-content: center;\n}\n#openingContainer h1 {\n  font-size: 2.2rem;\n}\n@media (min-width: 767px) {\n  #openingContainer h1 {\n    font-size: var(--h1_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  #openingContainer h1 {\n    font-size: 6.5rem;\n  }\n}\n#openingContainer p {\n  font-size: 1.2rem;\n  font-weight: 600;\n}\n@media (min-width: 767px) {\n  #openingContainer p {\n    font-size: var(--opening-container-p_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  #openingContainer p {\n    font-size: 2.7rem;\n  }\n}\n#openingContainer #pageImage {\n  position: relative;\n  margin-top: var(--header_height);\n  height: calc(100vh - var(--header_height) - var(--footer_height));\n  width: 100vw;\n}\n#openingContainer #pageImage img {\n  height: 100%;\n  width: 100%;\n  filter: blur(0.2rem) grayscale(55%) brightness(75%);\n}\n\n.media-card button {\n  color: var(--whitish-gold);\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n@media (min-width: 767px) {\n  .media-card button {\n    font-size: var(--media-card_font-size);\n  }\n}\n\n.media-card:hover img, .property-media-card:hover img, .media-card:focus img, .property-media-card:focus img {\n  filter: brightness(50%);\n  cursor: pointer;\n}\n.media-card:hover #thumbnail-column img, .property-media-card:hover #thumbnail-column img, .media-card:focus #thumbnail-column img, .property-media-card:focus #thumbnail-column img {\n  filter: none;\n  cursor: initial;\n}\n.media-card:hover h3, .media-card:hover p, .property-media-card:hover h3, .property-media-card:hover p, .media-card:focus h3, .media-card:focus p, .property-media-card:focus h3, .property-media-card:focus p {\n  filter: contrast(40%);\n  cursor: pointer;\n}\n\n.content-loader {\n  background-color: transparent;\n  height: 50%;\n  position: absolute;\n}\n.content-loader .ball {\n  width: 1.2rem;\n  height: 1.2rem;\n  background-color: rgb(47, 163, 56);\n  border-radius: 50%;\n  position: absolute;\n  top: 50%;\n  -webkit-animation: moveBarPingPong2 0.7s linear infinite alternate, moveBarPingPongColorShift2 0.8s ease-in-out infinite alternate;\n          animation: moveBarPingPong2 0.7s linear infinite alternate, moveBarPingPongColorShift2 0.8s ease-in-out infinite alternate;\n}\n.content-loader.loader[data-text]::before {\n  position: absolute;\n}\n.content-loader.loader.is-active::before {\n  position: absolute;\n  width: 50%;\n  left: 25%;\n  top: 39%;\n  font-size: 2.7rem;\n  color: rgb(195, 168, 126);\n  background-color: transparent;\n}\n.content-loader.loader-bar-ping-pong::after {\n  width: 1.2rem;\n  height: 1.2rem;\n  background-color: rgb(101, 148, 187);\n  -webkit-animation: moveBarPingPong 0.7s linear infinite alternate, moveBarPingPongColorShift 0.8s ease-in-out infinite alternate;\n          animation: moveBarPingPong 0.7s linear infinite alternate, moveBarPingPongColorShift 0.8s ease-in-out infinite alternate;\n}\n.content-loader.loader.is-active {\n  height: 97%;\n  z-index: 0;\n  background-color: rgba(51, 49, 56, 0.7490196078);\n  -webkit-animation: blink 1.8s linear infinite alternate;\n          animation: blink 1.8s linear infinite alternate;\n}\n\n@-webkit-keyframes blink {\n  0% {\n    opacity: 0.5;\n  }\n  50% {\n    opacity: 0.75;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n@keyframes blink {\n  0% {\n    opacity: 0.5;\n  }\n  50% {\n    opacity: 0.75;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes moveBarPingPong {\n  0% {\n    left: 40%;\n  }\n  100% {\n    left: 60%;\n  }\n}\n@keyframes moveBarPingPong {\n  0% {\n    left: 40%;\n  }\n  100% {\n    left: 60%;\n  }\n}\n@-webkit-keyframes moveBarPingPongColorShift {\n  0% {\n    background-color: rgba(72, 68, 82, 0.75);\n  }\n  50% {\n    background-color: rgba(102, 78, 122, 0.75);\n  }\n  100% {\n    background-color: rgba(149, 93, 168, 0.75);\n  }\n}\n@keyframes moveBarPingPongColorShift {\n  0% {\n    background-color: rgba(72, 68, 82, 0.75);\n  }\n  50% {\n    background-color: rgba(102, 78, 122, 0.75);\n  }\n  100% {\n    background-color: rgba(149, 93, 168, 0.75);\n  }\n}\n@-webkit-keyframes moveBarPingPong2 {\n  0% {\n    left: 43%;\n  }\n  100% {\n    left: 63%;\n  }\n}\n@keyframes moveBarPingPong2 {\n  0% {\n    left: 43%;\n  }\n  100% {\n    left: 63%;\n  }\n}\n@-webkit-keyframes moveBarPingPongColorShift2 {\n  0% {\n    background-color: rgb(47, 163, 56);\n  }\n  50% {\n    background-color: rgb(87, 143, 56);\n  }\n  100% {\n    background-color: rgb(126, 131, 58);\n  }\n}\n@keyframes moveBarPingPongColorShift2 {\n  0% {\n    background-color: rgb(47, 163, 56);\n  }\n  50% {\n    background-color: rgb(87, 143, 56);\n  }\n  100% {\n    background-color: rgb(126, 131, 58);\n  }\n}\n.dot-pulse {\n  top: 20%;\n  left: 35%;\n}\n\n#media-reciever {\n  display: none;\n  position: fixed;\n  background-color: var(--media-reciever_background-color);\n  top: var(--header_height);\n  width: 100%;\n  height: calc(100vh - var(--header_height));\n  z-index: 1;\n  grid-template-areas: \"media\" \"interface\";\n  grid-template-rows: auto minmax(0, 1fr);\n}\n#media-reciever #current-media {\n  grid-area: media;\n  display: grid;\n  grid-template-areas: \"media\" \"info\";\n  grid-template-rows: calc(var(--current-media_width) / 1.77) 1fr;\n}\n@media (min-width: 1200px) {\n  #media-reciever #current-media {\n    top: 4rem;\n    margin-left: 8rem;\n    width: 64rem;\n    height: 36rem;\n  }\n}\n#media-reciever #current-media #media-information {\n  grid-area: info;\n}\n#media-reciever #current-media #media-information #toggle-desc {\n  color: antiquewhite;\n  cursor: pointer;\n}\n#media-reciever #current-media #media-information #media-full-desc {\n  overflow: auto;\n  max-height: 15vh;\n}\n#media-reciever #current-media #media-information #title-and-options {\n  display: flex;\n  justify-content: space-between;\n  width: 100vw;\n  padding: 0 0.5rem;\n}\n#media-reciever #current-media iframe, #media-reciever #current-media img {\n  grid-area: media;\n  width: var(--current-media_width);\n  height: calc(var(--current-media_width) / 1.77);\n  margin-left: calc((100vw - var(--current-media_width)) / 2);\n}\n#media-reciever #current-media #play-button-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: var(--current-media_width);\n  height: calc(var(--current-media_width) / 1.77);\n  margin-left: calc((100vw - var(--current-media_width)) / 2);\n}\n#media-reciever #current-media #play-button-container #play-button {\n  height: 3rem;\n  width: 4.5rem;\n  background-color: var(--play-button_color);\n  position: absolute;\n  border-radius: 35%;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: opacity 0.2s ease;\n}\n@media (min-width: 1200px) {\n  #media-reciever #current-media #play-button-container #play-button {\n    height: 6rem;\n    width: 9rem;\n  }\n}\n#media-reciever #current-media #play-button-container #play-button div {\n  border-left: 1.5rem solid var(--play-button-inner_color);\n  border-top: 0.85rem solid transparent;\n  border-bottom: 0.85rem solid transparent;\n}\n@media (min-width: 1200px) {\n  #media-reciever #current-media #play-button-container #play-button div {\n    border-left: 3rem solid var(--play-button-inner_color);\n    border-top: 1.7rem solid transparent;\n    border-bottom: 1.7rem solid transparent;\n  }\n}\n#media-reciever #current-media #play-button-container #play-button:hover {\n  opacity: 0.7;\n}\n#media-reciever #media-selection-interface {\n  grid-area: interface;\n  display: grid;\n  grid-template-areas: \"col\" \"pagination\";\n  grid-template-rows: 88% 1fr;\n}\n@media (min-width: 1200px) {\n  #media-reciever #media-selection-interface {\n    flex-direction: column;\n  }\n}\n#media-reciever #media-selection-interface #media-menu {\n  grid-area: menu;\n  font-size: 1.1rem;\n}\n#media-reciever #media-selection-interface #media-menu a {\n  color: var(--media-reciever-category-link);\n  margin-left: 2rem;\n  cursor: pointer;\n}\n#media-reciever #media-selection-interface #media-menu a:hover, #media-reciever #media-selection-interface #media-menu a:focus {\n  filter: contrast(200%);\n}\n#media-reciever #media-selection-interface #media-menu a.active {\n  filter: brightness(50%);\n  pointer-events: none;\n}\n#media-reciever #media-selection-interface #media-column {\n  grid-area: col;\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  padding-left: 0.5rem;\n  width: 100vw;\n  overflow: auto;\n}\n@media (min-width: 1200px) {\n  #media-reciever #media-selection-interface #media-column {\n    width: 75%;\n    max-width: 380px;\n    flex-direction: column;\n  }\n}\n#media-reciever #media-selection-interface #media-column .media-selection {\n  display: flex;\n  -moz-column-gap: 0.5rem;\n       column-gap: 0.5rem;\n  margin-top: 1rem;\n}\n#media-reciever #media-selection-interface #media-column .media-selection .media-thumb {\n  width: 50%;\n  cursor: pointer;\n}\n@media (min-width: 767px) {\n  #media-reciever #media-selection-interface #media-column .media-selection .media-thumb {\n    width: 35%;\n  }\n}\n#media-reciever #media-selection-interface #media-column .media-selection .media-thumb.selected {\n  filter: contrast(42%);\n  pointer-events: none;\n}\n#media-reciever #media-selection-interface #media-column .media-selection .media-thumb:hover {\n  filter: brightness(130%);\n}\n#media-reciever #media-selection-interface #media-column .media-selection .media-information {\n  display: flex;\n  flex-direction: column;\n  width: 55%;\n}\n@media (min-width: 1200px) {\n  #media-reciever #media-selection-interface #media-column .media-selection .media-information {\n    margin-left: 1rem;\n  }\n}\n#media-reciever #media-selection-interface #media-column .media-selection .media-information p {\n  margin: 0;\n  color: var(--media-reciever-information_color);\n}\n#media-reciever #media-selection-interface #media-column .media-selection .media-information p:nth-of-type(2) {\n  margin-top: 1rem;\n}\n#media-reciever #media-selection-interface #media-pagination {\n  grid-area: pagination;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n#media-reciever #media-selection-interface #media-pagination a {\n  font-size: 1.2rem;\n  margin-left: 1rem;\n}\n#media-reciever #media-selection-interface.has-menu {\n  grid-template-areas: \"menu\" \"col\" \"pagination\";\n  grid-template-rows: 2.8rem 72% 1fr;\n}\n\n.media-close {\n  color: var(--media-reciever-close);\n  cursor: pointer;\n}\n\n#media-close {\n  position: absolute;\n  font-size: 3.5rem;\n  left: 1.5rem;\n  top: 1.5rem;\n  display: none;\n}\n@media (min-width: 1200px) {\n  #media-close {\n    left: 3.5rem;\n    top: 3.5rem;\n    display: block;\n  }\n}\n\n#media-close-alt {\n  display: none;\n}\n\n#additional-buttons, #additional-buttons-alt {\n  grid-area: additionalButtons;\n}\n#additional-buttons .togglable.hidden, #additional-buttons-alt .togglable.hidden {\n  display: none;\n  pointer-events: none;\n}\n\n#additional-buttons {\n  justify-content: center;\n  height: var(--header_height);\n  display: flex;\n}\n\n#additional-buttons-alt {\n  display: flex;\n}\n@media (min-width: 767px) {\n  #additional-buttons-alt {\n    display: none;\n  }\n}\n\n#welcomeContainer {\n  position: absolute;\n  text-align: center;\n  align-items: center;\n  margin-top: calc(var(--header_height) / 2);\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n}\n@media (min-width: 1200px) {\n  #welcomeContainer {\n    margin-top: 2%;\n  }\n}\n#welcomeContainer img {\n  height: 6rem;\n}\n#welcomeContainer div {\n  text-shadow: 1px 1px black;\n  width: 80%;\n}\n@media (min-width: 1200px) {\n  #welcomeContainer div {\n    width: 90%;\n  }\n}\n@media (min-width: 1200px) {\n  #welcomeContainer div {\n    width: 70%;\n  }\n}\n\n.contentContainer {\n  width: 100%;\n  margin: 0;\n  padding-top: var(--header_height);\n  margin-top: var(--footer_height);\n}\n.contentContainer > div {\n  display: grid;\n}\n@media (min-width: 1200px) {\n  .contentContainer > div {\n    width: 85%;\n  }\n}\n.contentContainer > div .titleAndTextBox, .contentContainer > div .contentBox {\n  position: relative;\n}\n.contentContainer > div .titleAndTextBox {\n  grid-area: titleAndTextBox;\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .titleAndTextBox {\n    margin-right: 5%;\n  }\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .titleAndTextBox .titleBox, .contentContainer > div .titleAndTextBox .textBox {\n    height: 50%;\n    width: 18rem;\n  }\n}\n.contentContainer > div .titleAndTextBox .titleBox {\n  border: 0.2rem solid var(--dark-title-box_border_color);\n  padding: 0 5%;\n  background: transparent;\n}\n@media (min-width: 767px) {\n  .contentContainer > div .titleAndTextBox .titleBox {\n    padding: var(--title-box_padding);\n  }\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .titleAndTextBox .titleBox {\n    padding: 10%;\n  }\n}\n.contentContainer > div .titleAndTextBox .titleBox h2, .contentContainer > div .titleAndTextBox .titleBox h2 a {\n  font-size: 1.5rem;\n}\n@media (min-width: 767px) {\n  .contentContainer > div .titleAndTextBox .titleBox h2, .contentContainer > div .titleAndTextBox .titleBox h2 a {\n    font-size: var(--title-box-h2_text-size);\n  }\n}\n.contentContainer > div .titleAndTextBox .titleBox p {\n  font-size: 1.15rem;\n}\n@media (min-width: 767px) {\n  .contentContainer > div .titleAndTextBox .titleBox p {\n    font-size: var(--title-box-p_text-size);\n  }\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .titleAndTextBox .titleBox p {\n    font-size: 1.7rem;\n  }\n}\n.contentContainer > div .titleAndTextBox .titleBox > * {\n  height: 50%;\n  width: 100%;\n  margin: 0;\n}\n.contentContainer > div .titleAndTextBox .titleBox > :nth-child(2) {\n  display: flex;\n}\n.contentContainer > div .titleAndTextBox .titleBox > :nth-child(2) h2 {\n  align-self: flex-end;\n  padding-bottom: 15%;\n}\n.contentContainer > div .titleAndTextBox .textBox p {\n  margin: 0.5rem;\n}\n@media (min-width: 767px) {\n  .contentContainer > div .titleAndTextBox .textBox p {\n    font-size: 1.2rem;\n  }\n}\n.contentContainer > div .titleAndTextBox .textBox .content-pages p {\n  margin: 0.6rem 0;\n  font-size: 1.7rem;\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .titleAndTextBox .textBox .content-pages p {\n    font-size: 1.5rem;\n  }\n}\n.contentContainer > div .titleAndTextBox .textBox .content-pages a {\n  font-size: 1.75rem;\n}\n.contentContainer > div .contentBox {\n  grid-area: contentBox;\n  width: 100%;\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .contentBox {\n    height: 100%;\n  }\n}\n.contentContainer > div .content-pages {\n  grid-area: pagination;\n}\n@media (min-width: 767px) {\n  .contentContainer > div .content-pages {\n    display: var(--pagination-container_display);\n    flex-direction: column;\n    justify-content: center;\n  }\n}\n.contentContainer > div .content-pages-sub {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 30%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n@media (min-width: 767px) {\n  .contentContainer > div .content-pages-sub {\n    position: var(--pagination_position);\n    flex-direction: var(--pagination_flex-direction);\n  }\n}\n.contentContainer > div .content-pages-sub p {\n  margin: 0.6rem 0;\n  font-size: 1.7rem;\n}\n@media (min-width: 1200px) {\n  .contentContainer > div .content-pages-sub p {\n    font-size: 1.5rem;\n  }\n}\n.contentContainer > div .content-pages-sub a {\n  font-size: 1.3rem;\n}\n\n@media (min-width: 1200px) {\n  #propertiesContainer, #membersContainer {\n    height: 50rem;\n    min-height: initial;\n  }\n}\n#propertiesContainer > div, #membersContainer > div {\n  grid-template-areas: \"titleAndTextBox titleAndTextBox\" \"contentBox pagination\";\n  grid-template-columns: 83% 1fr;\n}\n@media (min-width: 767px) {\n  #propertiesContainer > div, #membersContainer > div {\n    grid-template-areas: var(--display-inner-container_grid-template-areas);\n    grid-template-columns: var(--display-inner-container_grid-template-columns);\n  }\n}\n@media (min-width: 767px) {\n  #propertiesContainer > div .titleAndTextBox, #membersContainer > div .titleAndTextBox {\n    display: var(--titleAndTextBox_display);\n  }\n}\n#propertiesContainer > div .contentBox, #membersContainer > div .contentBox {\n  display: grid;\n  grid-template-columns: repeat(2, 50%);\n  justify-items: center;\n  row-gap: 0.35rem;\n}\n@media (min-width: 767px) {\n  #propertiesContainer > div .contentBox, #membersContainer > div .contentBox {\n    grid-template-columns: var(--display-content-box_grid-template-columns);\n  }\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox, #membersContainer > div .contentBox {\n    grid-template-columns: repeat(4, 25%);\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares, #membersContainer > div .contentBox .overall-squares {\n  width: 90%;\n}\n@media (min-width: 767px) {\n  #propertiesContainer > div .contentBox .overall-squares, #membersContainer > div .contentBox .overall-squares {\n    width: var(--overall-squares_width);\n  }\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox .overall-squares, #membersContainer > div .contentBox .overall-squares {\n    width: 13rem;\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares, #membersContainer > div .contentBox .overall-squares .displaySquares {\n  box-sizing: initial;\n  position: relative;\n  text-align: center;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt, #membersContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt {\n  position: absolute;\n  background-color: var(--interaction-prompt_background-color);\n  padding: 0.2rem 0.2rem;\n  border-radius: 30%;\n  height: 2.5rem;\n  opacity: 0.7;\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt .touch-prompt, #membersContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt .touch-prompt {\n    display: none;\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt .hover-prompt, #membersContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt .hover-prompt {\n  display: none;\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt .hover-prompt, #membersContainer > div .contentBox .overall-squares .displaySquares .interaction-prompt .hover-prompt {\n    display: block;\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks {\n  position: absolute;\n  display: none;\n  flex-direction: column;\n  width: 100%;\n  text-align: center;\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks *, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks * {\n  color: var(--whitish-gold);\n  cursor: pointer;\n  font-size: 0.9rem;\n  margin-top: 0.7rem;\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks *, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks * {\n    font-size: 1.3rem;\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks .fa-search-plus, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks .fa-search-plus {\n  font-size: 1.4rem;\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks .fa-search-plus, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks .fa-search-plus {\n    font-size: 1.4rem;\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks *:hover, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks *:hover {\n  transform: scale(110%);\n  filter: brightness(200%);\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares-pageLinks i, #membersContainer > div .contentBox .overall-squares .displaySquares-pageLinks i {\n  font-size: 1.4rem;\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares .displaySquares-pageLinks__visible, #membersContainer > div .contentBox .overall-squares .displaySquares .displaySquares-pageLinks__visible {\n  display: flex;\n}\n#propertiesContainer > div .contentBox .overall-squares .displaySquares div p, #propertiesContainer > div .contentBox .overall-squares .displaySquares div a, #membersContainer > div .contentBox .overall-squares .displaySquares div p, #membersContainer > div .contentBox .overall-squares .displaySquares div a {\n  margin: 2%;\n}\n#propertiesContainer > div .contentBox .overall-squares .display-text, #membersContainer > div .contentBox .overall-squares .display-text {\n  margin-top: -0.3rem;\n  text-align: center;\n  font-size: 1.05rem;\n  display: flex;\n  flex-direction: column;\n  gap: 0.2rem;\n}\n@media (min-width: 1200px) {\n  #propertiesContainer > div .contentBox .overall-squares .display-text, #membersContainer > div .contentBox .overall-squares .display-text {\n    font-size: 1.2rem;\n  }\n}\n#propertiesContainer > div .contentBox .overall-squares .display-text p, #membersContainer > div .contentBox .overall-squares .display-text p {\n  margin: 0;\n}\n#propertiesContainer > div .contentBox .overall-squares .display-text p:nth-of-type(2), #membersContainer > div .contentBox .overall-squares .display-text p:nth-of-type(2) {\n  font-weight: 700;\n}\n#propertiesContainer img, #membersContainer img {\n  width: 100%;\n  height: 100%;\n  margin-bottom: 1rem;\n}\n#propertiesContainer img.pageLinks__visible, #membersContainer img.pageLinks__visible {\n  filter: brightness(27%);\n}\n\n#allNewsContainer, #contactContainer {\n  background-color: var(--dark-content_background-color);\n  color: var(--dark-content_color);\n}\n#allNewsContainer > div .contentBox, #contactContainer > div .contentBox {\n  display: flex;\n  font-size: 1rem;\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox, #contactContainer > div .contentBox {\n    font-size: 1.3rem;\n  }\n}\n#allNewsContainer > div .contentBox h3, #contactContainer > div .contentBox h3 {\n  font-size: 1.5rem;\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div .contentBox h3, #contactContainer > div .contentBox h3 {\n    font-size: var(--content-box-h3_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox > div, #contactContainer > div .contentBox > div {\n    height: 100%;\n    flex-basis: 50%;\n  }\n}\n#allNewsContainer > div .contentBox > div > div, #contactContainer > div .contentBox > div > div {\n  overflow: auto;\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox > div > div, #contactContainer > div .contentBox > div > div {\n    height: 92%;\n  }\n}\n#allNewsContainer > div .contentBox .form-message, #contactContainer > div .contentBox .form-message {\n  height: auto;\n}\n#allNewsContainer > div .contentBox h3, #contactContainer > div .contentBox h3 {\n  text-align: center;\n  height: auto;\n  padding: 1rem 0;\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div .contentBox h3, #contactContainer > div .contentBox h3 {\n    padding-top: var(--content-box-h3_padding-top);\n  }\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox h3, #contactContainer > div .contentBox h3 {\n    height: 8%;\n  }\n}\n#allNewsContainer > div .contentBox ul, #contactContainer > div .contentBox ul {\n  padding: 0;\n}\n#allNewsContainer > div .contentBox ul li, #contactContainer > div .contentBox ul li {\n  display: inline;\n}\n#allNewsContainer > div .contentBox .news, #contactContainer > div .contentBox .news {\n  margin: 0 1%;\n  padding-top: 5%;\n  height: auto;\n  border: 0.1rem solid var(--news_border_color);\n}\n#allNewsContainer > div .contentBox .news .related-links, #contactContainer > div .contentBox .news .related-links {\n  display: flex;\n  margin-bottom: 0.7rem;\n}\n#allNewsContainer > div .contentBox .news .related-links ul, #contactContainer > div .contentBox .news .related-links ul {\n  margin: 0;\n  margin-left: 0.4rem;\n}\n#allNewsContainer > div .contentBox .news .related-links .related-link, #contactContainer > div .contentBox .news .related-links .related-link {\n  text-decoration: underline;\n  color: var(--whitish-gold);\n  font-size: 1.1rem;\n}\n#allNewsContainer > div .contentBox .news::after, #contactContainer > div .contentBox .news::after {\n  content: \" \";\n  display: block;\n  height: 1rem;\n  clear: both;\n}\n#allNewsContainer > div .contentBox .news p, #contactContainer > div .contentBox .news p {\n  font-weight: 300;\n}\n#allNewsContainer > div .contentBox .news img, #contactContainer > div .contentBox .news img {\n  width: 9rem;\n  float: left;\n  margin-right: 2%;\n  cursor: pointer;\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox .news img, #contactContainer > div .contentBox .news img {\n    width: 13rem;\n    margin-right: 2.5%;\n  }\n}\n#allNewsContainer > div .contentBox .news p, #contactContainer > div .contentBox .news p {\n  font-size: 1.1rem;\n  line-height: 1.2rem;\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox .news p, #contactContainer > div .contentBox .news p {\n    font-size: 1.15rem;\n    line-height: 1.1rem;\n  }\n}\n#allNewsContainer > div .contentBox .news, #allNewsContainer > div .contentBox form, #contactContainer > div .contentBox .news, #contactContainer > div .contentBox form {\n  padding: 0 1.5%;\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox .news, #allNewsContainer > div .contentBox form, #contactContainer > div .contentBox .news, #contactContainer > div .contentBox form {\n    padding: 0 5%;\n  }\n}\n#allNewsContainer > div .contentBox form, #contactContainer > div .contentBox form {\n  display: grid;\n  padding: 0;\n  padding-bottom: 2rem;\n  -moz-column-gap: 1.2rem;\n       column-gap: 1.2rem;\n  grid-template-areas: \"contactName\" \"contactEmail\" \"contactPhone\" \"contactSubject\" \"contactMessage\" \"submit\";\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div .contentBox form, #contactContainer > div .contentBox form {\n    grid-template-areas: var(--form_grid-template-areas);\n  }\n}\n@media (min-width: 1200px) {\n  #allNewsContainer > div .contentBox form, #contactContainer > div .contentBox form {\n    grid-template-areas: \"contactName contactEmail\" \"contactPhone contactSubject\" \"contactMessage contactMessage\" \"submit ...\";\n  }\n}\n#allNewsContainer > div .contentBox form #contact-name, #contactContainer > div .contentBox form #contact-name {\n  grid-area: contactName;\n}\n#allNewsContainer > div .contentBox form #contact-email, #contactContainer > div .contentBox form #contact-email {\n  grid-area: contactEmail;\n}\n#allNewsContainer > div .contentBox form #contact-phone, #contactContainer > div .contentBox form #contact-phone {\n  grid-area: contactPhone;\n}\n#allNewsContainer > div .contentBox form #contact-subject, #contactContainer > div .contentBox form #contact-subject {\n  grid-area: contactSubject;\n}\n#allNewsContainer > div .contentBox form #contact-message, #contactContainer > div .contentBox form #contact-message {\n  grid-area: contactMessage;\n}\n\n@media (min-width: 767px) {\n  #allNewsContainer {\n    height: var(--all-news-container_height);\n  }\n}\n@media (min-width: 1200px) {\n  #allNewsContainer {\n    height: 50.5rem;\n  }\n}\n#allNewsContainer > div {\n  grid-template-areas: \"titleAndTextBox titleAndTextBox\" \"contentBox tabs\";\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div {\n    height: var(--inner-container_height);\n    grid-template-areas: var(--all-news-inner-container_grid-template-areas);\n    grid-template-columns: var(--all-news-inner-container_grid-template-columns);\n    grid-template-rows: var(--all-news-inner-container_grid-template-rows);\n  }\n}\n#allNewsContainer > div .contentBox {\n  height: 40rem;\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div .contentBox {\n    height: var(--all-news-content-box_height);\n    display: var(--all-news-content-box_display);\n    grid-template-columns: var(--all-news-content-box_grid-template-columns);\n    grid-template-rows: var(--all-news-content-box_grid-template-rows);\n  }\n}\n#allNewsContainer > div .contentBox > div.hidden {\n  display: none;\n}\n#allNewsContainer > div .contentBox .section > div {\n  height: calc(96.5% - var(--header_height));\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div .contentBox .section > div {\n    height: var(--news-column_height);\n  }\n}\n#allNewsContainer > div #news-type-tabs {\n  grid-area: tabs;\n}\n@media (min-width: 767px) {\n  #allNewsContainer > div #news-type-tabs {\n    display: var(--news-type-tabs_display);\n  }\n}\n#allNewsContainer > div #news-type-tabs > div {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 30%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n#allNewsContainer > div #news-type-tabs > div button {\n  color: var(--section-tabs_color);\n  font-size: 1.1rem;\n}\n#allNewsContainer > div #news-type-tabs > div button.activated {\n  pointer-events: none;\n  color: var(--section-tabs-active_color);\n}\n\n#contactContainer {\n  background-image: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\n  margin-bottom: var(--footer_height);\n}\n@media (min-width: 1200px) {\n  #contactContainer {\n    height: 50.5rem;\n  }\n}\n#contactContainer > div {\n  grid-template-areas: \"titleAndTextBox\" \"contentBox\";\n}\n@media (min-width: 767px) {\n  #contactContainer > div {\n    grid-template-areas: var(--contact-inner-container_grid-template-areas);\n    grid-template-columns: var(--contact-inner-container_grid-template-columns);\n  }\n}\n\n#contactContainer .contentBox {\n  padding: 0 1rem;\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox {\n    width: 70%;\n  }\n}\n#contactContainer .contentBox img {\n  display: none;\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox img {\n    display: initial;\n    width: 50%;\n    margin-left: 0;\n  }\n}\n#contactContainer .contentBox label.error {\n  font-size: 1.5rem;\n  font-weight: 700;\n  color: var(--form-error_color);\n}\n#contactContainer .contentBox form > div {\n  margin: 5% 0;\n  margin-top: 0;\n}\n#contactContainer .contentBox form label {\n  font-size: 1.2rem;\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox form label {\n    font-size: 1.4rem;\n  }\n}\n#contactContainer .contentBox form [type=radio] {\n  width: 10%;\n  display: initial;\n}\n#contactContainer .contentBox form ul {\n  padding: 0;\n}\n#contactContainer .contentBox form input, #contactContainer .contentBox form select, #contactContainer .contentBox form textarea {\n  margin-top: 0.6rem;\n  font-size: 1.1rem;\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox form input, #contactContainer .contentBox form select, #contactContainer .contentBox form textarea {\n    font-size: 1.2rem;\n  }\n}\n#contactContainer .contentBox form input, #contactContainer .contentBox form select {\n  display: block;\n  margin-top: 2%;\n}\n#contactContainer .contentBox form input {\n  width: 100%;\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox form input {\n    height: 1.6rem;\n  }\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox form select {\n    height: 2rem;\n  }\n}\n#contactContainer .contentBox form textarea {\n  width: 100%;\n  height: 10rem;\n}\n@media (min-width: 767px) {\n  #contactContainer .contentBox form textarea {\n    height: var(--textarea_height);\n  }\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox form textarea {\n    height: 16rem;\n  }\n}\n#contactContainer .contentBox form button {\n  grid-area: submit;\n  font-size: 1.2rem;\n  color: var(--muted-gold);\n  box-shadow: 0.2rem 0.2rem 1rem 0.6rem inset var(--nav-li_box-shadow_color);\n  border: 0.25rem solid var(--nav-li_border-bottom_color);\n  background-color: transparent;\n  border-radius: 8%;\n  padding: 0.9rem 0.7rem;\n  justify-self: center;\n  text-align: left;\n}\n@media (min-width: 767px) {\n  #contactContainer .contentBox form button {\n    padding: 0.6rem 0.35rem;\n  }\n}\n@media (min-width: 1200px) {\n  #contactContainer .contentBox form button {\n    font-size: 1.3rem;\n  }\n}\n#contactContainer .contentBox form button:hover {\n  text-shadow: 0.1rem 0.1rem black;\n  background-color: var(--trans-black);\n  border: 0.25rem solid transparent;\n  box-shadow: 0.4rem 0.4rem 0.2rem inset var(--nav-li_box-shadow_color), -0.4rem -0.4rem 0.2rem inset var(--nav-li_box-shadow_color), 0.3rem 0rem 0.5rem var(--muted-gold), -0.3rem 0rem 0.5rem var(--muted-gold);\n}\n\n#pop-up-display-box {\n  background-color: var(--pup_background-color);\n  top: var(--header_height);\n  padding-top: 0.6rem;\n  width: 100%;\n  height: calc(100vh - var(--header_height) - var(--footer_height));\n  overflow: auto;\n  z-index: 110;\n  position: fixed;\n  display: grid;\n  grid-template-areas: \"img img img\" \"prev more next\";\n  justify-items: center;\n  align-items: center;\n}\n#pop-up-display-box img {\n  width: 100%;\n}\n@media (min-width: 1200px) {\n  #pop-up-display-box img {\n    width: 29rem;\n  }\n}\n#pop-up-display-box #image-holder {\n  width: 17rem;\n  grid-area: img;\n}\n#pop-up-display-box #prev-image {\n  grid-area: prev;\n}\n#pop-up-display-box #next-image {\n  grid-area: next;\n}\n#pop-up-display-box .more-info-link {\n  grid-area: more;\n}\n#pop-up-display-box a, #pop-up-display-box button {\n  align-self: baseline;\n  font-size: 1.1rem;\n}\n#pop-up-display-box #closeMagnify {\n  position: absolute;\n  right: 0.3rem;\n  padding: 0;\n  font-size: 3rem;\n}\n#pop-up-display-box button {\n  color: var(--pup-button_color);\n  cursor: pointer;\n}\n#pop-up-display-box button:hover, #pop-up-display-box a:hover {\n  filter: brightness(60%);\n}\n\n#pop-up-display-box.hidden {\n  display: none;\n}\n\n#singleContainer {\n  height: calc(100vh - var(--header_height) - var(--footer_height));\n  width: 100%;\n  top: var(--header_height);\n  display: grid;\n  grid-template-areas: \"tabs\" \"section\";\n  grid-template-rows: [tabs] 13% [section] 1fr;\n  justify-items: center;\n  position: absolute;\n  z-index: 1;\n  background-color: var(--single-container_background-color);\n}\n@media (min-width: 1200px) {\n  #singleContainer {\n    grid-template-areas: \"updates main desc\";\n    grid-template-rows: 100%;\n    padding: 1.5rem 1rem;\n    padding-bottom: 1rem;\n  }\n}\n#singleContainer h4 {\n  font-size: 1.3rem;\n}\n@media (min-width: 767px) {\n  #singleContainer h4 {\n    font-size: 1.6rem;\n  }\n}\n#singleContainer h3, #singleContainer h4, #singleContainer .related-link {\n  color: var(--single-container-header_color);\n}\n#singleContainer .section {\n  grid-area: section;\n  overflow: auto;\n  margin-top: 0.2rem;\n}\n@media (min-width: 767px) {\n  #singleContainer .section {\n    margin-top: 1rem;\n    margin-top: var(--section_margin-top);\n  }\n}\n@media (min-width: 1200px) {\n  #singleContainer .section {\n    grid-area: initial;\n  }\n}\n#singleContainer #mainImageAndStats.hidden, #singleContainer #updates-col.hidden, #singleContainer #singleInfo.hidden {\n  display: none;\n}\n#singleContainer .section-tabs {\n  grid-area: tabs;\n  margin: 1rem 0;\n  width: 100%;\n  display: grid;\n  grid-template-areas: \"stats desc updates\";\n}\n@media (min-width: 1200px) {\n  #singleContainer .section-tabs {\n    display: none;\n  }\n}\n#singleContainer .section-tabs button {\n  padding: 0.5rem 0;\n  cursor: pointer;\n  color: var(--section-tabs_color);\n  font-size: 1.2rem;\n  border: 0.17rem solid var(--section-tabs_border-color);\n}\n#singleContainer .section-tabs button:hover {\n  filter: brightness(60%);\n}\n#singleContainer .section-tabs button.activated {\n  pointer-events: none;\n  color: var(--section-tabs-active_color);\n}\n#singleContainer .section-tabs #mainImageAndStats-tab {\n  grid-area: stats;\n}\n#singleContainer .section-tabs #singleInfo-tab {\n  grid-area: desc;\n}\n#singleContainer .section-tabs #updates-col-tab {\n  grid-area: updates;\n}\n#singleContainer #mainImageAndStats {\n  display: grid;\n  grid-template-areas: \"img\" \"ul\";\n  grid-template-rows: [img] 40% [ul] 1fr;\n  justify-items: center;\n}\n@media (min-width: 767px) {\n  #singleContainer #mainImageAndStats {\n    grid-template-areas: var(--mainImageAndStats_grid-template-areas);\n    grid-template-rows: var(--mainImageAndStats_grid-template-rows);\n    grid-template-columns: var(--mainImageAndStats_grid-template-columns);\n  }\n}\n@media (min-width: 1200px) {\n  #singleContainer #mainImageAndStats {\n    grid-area: main;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n}\n#singleContainer #mainImageAndStats img {\n  grid-area: img;\n  height: 100%;\n}\n@media (min-width: 767px) {\n  #singleContainer #mainImageAndStats img {\n    height: var(--mainImageAndStats-img_height);\n  }\n}\n@media (min-width: 1200px) {\n  #singleContainer #mainImageAndStats img {\n    height: 42%;\n  }\n}\n#singleContainer #mainImageAndStats ul {\n  grid-area: ul;\n  padding-left: 20%;\n  font-size: 1.4rem;\n  text-align: left;\n  margin-top: 1rem;\n}\n@media (min-width: 1200px) {\n  #singleContainer #mainImageAndStats ul {\n    font-size: 1.5rem;\n  }\n}\n#singleContainer #mainImageAndStats ul li {\n  margin-top: 0.6rem;\n  list-style-type: square;\n}\n#singleContainer #mainImageAndStats ul li a {\n  filter: brightness(115%);\n}\n#singleContainer #singleInfo {\n  width: 100%;\n  display: grid;\n  grid-template-areas: \"media\" \"info\";\n}\n@media (min-width: 1200px) {\n  #singleContainer #singleInfo {\n    grid-area: desc;\n  }\n}\n@media (min-width: 767px) {\n  #singleContainer #singleInfo {\n    grid-template-areas: var(--single-info_grid-template-areas);\n    grid-template-rows: var(--single-info_grid-template-rows);\n  }\n}\n#singleContainer #singleInfo p {\n  font-size: 1.1rem;\n  height: 99%;\n}\n@media (min-width: 1200px) {\n  #singleContainer #singleInfo p {\n    font-size: 1.7rem;\n  }\n}\n#singleContainer #singleInfo .prop-info {\n  padding: 0 1rem;\n}\n#singleContainer #singleInfo .prop-info {\n  grid-area: info;\n  margin: 0.7rem 0;\n  overflow: auto;\n}\n@media (min-width: 767px) {\n  #singleContainer #singleInfo .prop-info {\n    margin-top: var(--prop-info_margin-top);\n  }\n}\n#singleContainer #singleInfo .media-card {\n  margin: 0 1rem;\n  grid-area: media;\n  display: flex;\n  -moz-column-gap: 0.5rem;\n       column-gap: 0.5rem;\n}\n@media (min-width: 767px) {\n  #singleContainer #singleInfo .media-card {\n    flex-direction: var(--media-card_flex-direction);\n    row-gap: var(--media-card_row-gap);\n    -moz-column-gap: var(--media-card_column-gap);\n         column-gap: var(--media-card_column-gap);\n  }\n}\n#singleContainer #singleInfo .media-card button, #singleContainer #singleInfo .media-card #thumbnail-column {\n  padding: 0.5rem;\n}\n#singleContainer #singleInfo .media-card button {\n  background-color: var(--blackish-brown_1);\n  box-shadow: 0.2rem 0.2rem 0.3rem inset rgba(22, 22, 22, 0.75), -0.2rem -0.2rem 0.3rem inset rgba(22, 22, 22, 0.75);\n}\n#singleContainer #singleInfo .media-card button:hover, #singleContainer #singleInfo .media-card button:focus {\n  color: var(--bright-gold);\n  filter: none;\n  background-color: var(--soft-brown);\n}\n#singleContainer #singleInfo .media-card #thumbnail-column {\n  display: flex;\n  -moz-column-gap: 0.5rem;\n       column-gap: 0.5rem;\n}\n@media (min-width: 767px) {\n  #singleContainer #singleInfo .media-card #thumbnail-column {\n    flex-direction: var(--media-card_flex-direction);\n    row-gap: var(--media-card_row-gap);\n    -moz-column-gap: var(--media-card_column-gap);\n         column-gap: var(--media-card_column-gap);\n  }\n}\n#singleContainer #singleInfo .media-card #additional-count {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.6rem;\n  letter-spacing: 0.45rem;\n  font-weight: bold;\n}\n#singleContainer #singleInfo .media-card img {\n  height: 3rem;\n  box-shadow: 0.2rem 0.2rem 0.3rem inset rgb(151, 151, 151), -0.2rem -0.2rem 0.3rem inset rgb(151, 151, 151);\n  padding: 0.5rem;\n  border: 0.1rem solid var(--section-tabs_border-color);\n}\n@media (min-width: 767px) {\n  #singleContainer #singleInfo .media-card img {\n    height: initial;\n    width: var(--thumb_width);\n  }\n}\n#singleContainer #vidAndImgCol {\n  height: 100%;\n  overflow: auto;\n  overflow-x: hidden;\n  text-align: center;\n}\n#singleContainer #vidAndImgCol h3 {\n  font-size: 1.9rem;\n  margin: 1rem 0;\n}\n#singleContainer #updates-col {\n  position: relative;\n  overflow: auto;\n  padding-left: 1rem;\n  display: grid;\n  grid-template-areas: \"title\" \"newsInfo\" \"news\" \"pagination\";\n  grid-template-rows: 8% auto 1fr 6.5%;\n}\n@media (min-width: 767px) {\n  #singleContainer #updates-col {\n    grid-template-rows: 8% 12% 1fr 4%;\n  }\n}\n@media (min-width: 1200px) {\n  #singleContainer #updates-col {\n    grid-area: updates;\n    padding: 0 1rem;\n  }\n}\n#singleContainer #updates-col h3 {\n  grid-area: title;\n  font-size: 1.4rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n@media (min-width: 767px) {\n  #singleContainer #updates-col h3 {\n    font-size: var(--updates-col-h3_font-size);\n  }\n}\n@media (min-width: 1200px) {\n  #singleContainer #updates-col h3 {\n    font-size: 2rem;\n  }\n}\n#singleContainer #updates-col h3 a {\n  font-size: 1.5rem;\n  text-decoration: underline;\n}\n#singleContainer #updates-col h3 a:hover, #singleContainer #updates-col h3 a:focus {\n  color: var(--bright-gold);\n  filter: brightness(130%);\n  text-decoration: none;\n  -webkit-text-decoration: 1px 1px solid black;\n          text-decoration: 1px 1px solid black;\n}\n#singleContainer #updates-col #news-info-reciever {\n  grid-area: newsInfo;\n  margin-top: 1rem;\n}\n#singleContainer #updates-col #news-info-reciever h4 {\n  margin: 0;\n}\n#singleContainer #updates-col #news-info-reciever p {\n  margin-top: 0.5rem;\n}\n@media (min-width: 767px) {\n  #singleContainer #updates-col #news-info-reciever p {\n    margin-bottom: 0;\n  }\n}\n#singleContainer #updates-col #news-reciever {\n  grid-area: news;\n  overflow: auto;\n}\n@media (min-width: 767px) {\n  #singleContainer #updates-col #news-reciever {\n    margin-top: 1.3rem;\n  }\n}\n#singleContainer #updates-col #news-reciever p {\n  font-size: 1.1rem;\n  padding-right: 1rem;\n}\n@media (min-width: 767px) {\n  #singleContainer #updates-col #news-reciever p {\n    font-size: 1.4rem;\n    margin-top: 0;\n  }\n}\n#singleContainer #updates-col #news-reciever img {\n  width: 85%;\n}\n@media (min-width: 767px) {\n  #singleContainer #updates-col #news-reciever img {\n    float: left;\n    margin-right: 0.8rem;\n    width: var(--updates-col-img_width);\n  }\n}\n#singleContainer #updates-col #pagination-holder {\n  grid-area: pagination;\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  font-size: 1.3rem;\n  display: flex;\n  justify-content: center;\n}\n\n#all-news-container {\n  top: var(--header_height);\n  width: 100%;\n  height: calc(100vh - var(--header_height) - var(--footer_height));\n  background-color: var(--single-container_background-color);\n  position: absolute;\n  display: grid;\n  grid-auto-flow: row;\n  grid-template-columns: 100%;\n  color: var(--single-container_color);\n}\n@media (min-width: 1200px) {\n  #all-news-container {\n    height: 78%;\n    top: 7.3rem;\n  }\n}\n@media (min-width: 1200px) {\n  #all-news-container {\n    grid-template-columns: 66% 34%;\n  }\n}\n#all-news-container #filter-sort-toggle {\n  display: block;\n}\n@media (min-width: 1200px) {\n  #all-news-container #filter-sort-toggle {\n    display: none;\n  }\n}\n#all-news-container button {\n  color: var(--single-container-button_color);\n}\n#all-news-container #media-container, #all-news-container #filters-and-sorting-container, #all-news-container #selected-news-container {\n  position: relative;\n}\n#all-news-container #filters-and-sorting-container.fade-in, #all-news-container #filters-and-sorting-container.fade-out {\n  display: grid;\n  grid-template-areas: \"section section section\" \"... resetAll ...\";\n  grid-template-rows: 90% 1fr;\n  background-color: var(--flc_background-color);\n  border-radius: 2%;\n  box-shadow: 0.2rem 0.2rem 1rem 0.4rem inset var(--flc_box-shadow_color);\n  position: fixed;\n  width: 100%;\n  height: calc(100% - var(--header_height) - var(--footer_height));\n}\n@media (min-width: 767px) {\n  #all-news-container #filters-and-sorting-container.fade-in, #all-news-container #filters-and-sorting-container.fade-out {\n    grid-template-rows: 43% 43% 1fr;\n    grid-template-areas: \"realtimeFiltersAndSorting realtimeFiltersAndSorting realtimeFiltersAndSorting\" \"searchFilters searchFilters searchFilters\" \"... resetAll ...\";\n  }\n}\n#all-news-container #filters-and-sorting-container.fade-in #filters-and-sorting-tabs, #all-news-container #filters-and-sorting-container.fade-out #filters-and-sorting-tabs {\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  right: 5%;\n  top: 25%;\n}\n#all-news-container #filters-and-sorting-container.fade-in #filters-and-sorting-tabs button.activated, #all-news-container #filters-and-sorting-container.fade-out #filters-and-sorting-tabs button.activated {\n  pointer-events: none;\n}\n@media (min-width: 767px) {\n  #all-news-container #filters-and-sorting-container.fade-in #filters-and-sorting-tabs, #all-news-container #filters-and-sorting-container.fade-out #filters-and-sorting-tabs {\n    display: none;\n  }\n}\n#all-news-container #filters-and-sorting-container.fade-in {\n  -webkit-animation: fadeOptionsIn 0.5s ease-in-out;\n          animation: fadeOptionsIn 0.5s ease-in-out;\n}\n#all-news-container #filters-and-sorting-container.fade-out {\n  -webkit-animation: fadeOptionsOut 0.5s ease-in-out;\n          animation: fadeOptionsOut 0.5s ease-in-out;\n}\n@-webkit-keyframes fadeOptionsIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes fadeOptionsIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@-webkit-keyframes fadeOptionsOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n@keyframes fadeOptionsOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n#all-news-container #filters-and-sorting-container {\n  display: none;\n  padding-left: 1.5rem;\n}\n@media (min-width: 1200px) {\n  #all-news-container #filters-and-sorting-container {\n    position: relative;\n    display: grid;\n    grid-template-areas: \"realtimeFiltersAndSorting realtimeFiltersAndSorting realtimeFiltersAndSorting\" \"searchFilters searchFilters searchFilters\" \"... resetAll ...\";\n    border: 0.2rem solid var(--flc_border_color);\n    border-left: none;\n  }\n}\n#all-news-container #filters-and-sorting-container h2 {\n  font-size: 1.25rem;\n  text-shadow: 0.1rem 0.1rem black;\n}\n#all-news-container #filters-and-sorting-container h3 {\n  font-size: 1.1rem;\n  display: flex;\n  justify-content: flex-start;\n  text-shadow: 0.1rem 0.1rem black;\n}\n#all-news-container #filters-and-sorting-container button:not(.options-switch) {\n  padding: 0.2rem;\n  box-shadow: 0.2rem 0.2rem 1rem 0.6rem var(--nav-li_box-shadow_color);\n  border: 0.2rem solid var(--nav-li_border-bottom_color);\n  background-color: var(--blackish-brown_2_trans_alt);\n  border-radius: 8%;\n}\n#all-news-container #filters-and-sorting-container button.activated {\n  filter: none;\n  text-shadow: 0.1rem 0.1rem black;\n  color: var(--bright-gold);\n  background-color: var(--trans-black_alt);\n  box-shadow: 0.2rem 0.2rem 0.2rem inset var(--nav-li_box-shadow_color), -0.2rem -0.2rem 0.2rem inset var(--nav-li_box-shadow_color);\n  border: 0.2rem solid transparent;\n}\n#all-news-container #filters-and-sorting-container button:not(.activated):focus:not(:focus-visible):not(:hover) {\n  filter: none;\n  color: var(--single-container-button_color);\n  box-shadow: 0.2rem 0.2rem 1rem 0.6rem var(--nav-li_box-shadow_color);\n  border: 0.2rem solid var(--nav-li_border-bottom_color);\n  background-color: var(--blackish-brown_2_trans_alt);\n}\n#all-news-container #filters-and-sorting-container button:hover:not(.options-switch), #all-news-container #filters-and-sorting-container button:focus:not(.options-switch) {\n  color: var(--muted-gold);\n  text-shadow: 0.1rem 0.1rem black;\n  background-color: var(--soft-brown);\n  border: 0.2rem solid transparent;\n  box-shadow: 0.2rem 0.2rem 0.2rem inset var(--nav-li_box-shadow_color), -0.2rem -0.2rem 0.2rem inset var(--nav-li_box-shadow_color);\n}\n#all-news-container #filters-and-sorting-container button.activated:focus:not(:focus-visible):not(:hover) {\n  filter: none;\n  text-shadow: 0.1rem 0.1rem black;\n  color: var(--bright-gold);\n  background-color: var(--trans-black_alt);\n  box-shadow: 0.2rem 0.2rem 0.2rem inset var(--nav-li_box-shadow_color), -0.2rem -0.2rem 0.2rem inset var(--nav-li_box-shadow_color);\n  border: 0.2rem solid transparent;\n}\n#all-news-container #filters-and-sorting-container #word-start-only.inactive, #all-news-container #filters-and-sorting-container button.inactive {\n  pointer-events: none;\n  background-color: var(--blackish-brown_2_trans);\n  box-shadow: none;\n  border: 0.1rem solid rgba(0, 0, 0, 0.05);\n  box-shadow: 0.1rem 0.1rem 0.15rem inset var(--trans-black);\n  border-radius: 0;\n}\n#all-news-container #filters-and-sorting-container #word-start-only.inactive span, #all-news-container #filters-and-sorting-container button.inactive span {\n  color: var(--flc-button_inactive);\n}\n#all-news-container #filters-and-sorting-container .options-switch {\n  position: absolute;\n  right: 2rem;\n  top: 1.5rem;\n  font-size: 2.4rem;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting, #all-news-container #filters-and-sorting-container #search-filters {\n  margin-top: 0.5rem;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting {\n  grid-area: section;\n  display: grid;\n  row-gap: 1rem;\n  grid-template-areas: \"headingRFS\" \"orderBy\" \"toggleType\" \"filterDate\";\n  width: 100%;\n}\n@media (min-width: 767px) {\n  #all-news-container #filters-and-sorting-container #realtime-filters-and-sorting {\n    grid-area: realtimeFiltersAndSorting;\n    grid-template-areas: \"headingRFS headingRFS\" \"orderBy toggleType\" \"filterDate filterDate\";\n  }\n}\n@media (min-width: 1200px) {\n  #all-news-container #filters-and-sorting-container #realtime-filters-and-sorting {\n    grid-area: realtimeFiltersAndSorting;\n    grid-template-areas: \"headingRFS headingRFS\" \"orderBy toggleType\" \"filterDate filterDate\";\n  }\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting h2 {\n  grid-area: headingRFS;\n  font-size: 1.25rem;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting #order-by {\n  grid-area: orderBy;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting #toggle-type {\n  grid-area: toggleType;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting #filter-date {\n  grid-area: filterDate;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting #filter-date div ul {\n  display: flex;\n  gap: 3rem;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting ul {\n  padding-left: 0.3rem;\n}\n#all-news-container #filters-and-sorting-container #realtime-filters-and-sorting ul li {\n  margin-top: 0.5rem;\n}\n#all-news-container #filters-and-sorting-container #search-filters {\n  grid-area: section;\n  display: grid;\n  grid-template-areas: \"headingSF headingSF headingSF\" \"newsSearch newsSearch newsSearch\" \"caseSensitive caseSensitive ...\" \"fullWordOnly wordStartOnly wordStartOnly\" \"includeTitle includeDescription ...\";\n  justify-items: baseline;\n}\n@media (min-width: 767px) {\n  #all-news-container #filters-and-sorting-container #search-filters {\n    grid-area: searchFilters;\n    align-content: space-around;\n  }\n}\n@media (min-width: 1200px) {\n  #all-news-container #filters-and-sorting-container #search-filters {\n    grid-area: searchFilters;\n  }\n}\n#all-news-container #filters-and-sorting-container #search-filters h2 {\n  grid-area: headingSF;\n}\n#all-news-container #filters-and-sorting-container #search-filters button {\n  height: 50%;\n}\n@media (min-width: 767px) {\n  #all-news-container #filters-and-sorting-container #search-filters button {\n    height: initial;\n  }\n}\n#all-news-container #filters-and-sorting-container #search-filters #news-search-container {\n  grid-area: newsSearch;\n  display: flex;\n  flex-direction: column;\n  row-gap: 0.5rem;\n}\n#all-news-container #filters-and-sorting-container #search-filters #news-search-container #news-search.inactive {\n  pointer-events: none;\n  background-color: var(--flc-search_inactive);\n}\n#all-news-container #filters-and-sorting-container #search-filters #full-word-only {\n  grid-area: fullWordOnly;\n}\n#all-news-container #filters-and-sorting-container #search-filters #word-start-only {\n  grid-area: wordStartOnly;\n}\n#all-news-container #filters-and-sorting-container #search-filters #case-sensitive {\n  grid-area: caseSensitive;\n}\n#all-news-container #filters-and-sorting-container #search-filters #include-title {\n  grid-area: includeTitle;\n}\n#all-news-container #filters-and-sorting-container #search-filters #include-description {\n  grid-area: includeDescription;\n}\n#all-news-container #filters-and-sorting-container #search-filters.hidden, #all-news-container #filters-and-sorting-container #realtime-filters-and-sorting.hidden {\n  display: none;\n}\n#all-news-container #filters-and-sorting-container button, #all-news-container #filters-and-sorting-container select, #all-news-container #filters-and-sorting-container label {\n  font-size: 1rem;\n}\n@media (min-width: 1200px) {\n  #all-news-container #filters-and-sorting-container button, #all-news-container #filters-and-sorting-container select, #all-news-container #filters-and-sorting-container label {\n    font-size: 1.15rem;\n  }\n}\n#all-news-container #filters-and-sorting-container select {\n  margin-top: 0.7rem;\n}\n#all-news-container #filters-and-sorting-container label {\n  margin-right: 0.5rem;\n}\n#all-news-container #filters-and-sorting-container #reset-container {\n  grid-area: resetAll;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n}\n#all-news-container #filters-and-sorting-container #reset-container #reset-all {\n  font-size: 1.25rem;\n}\n@media (min-width: 767px) {\n  #all-news-container #filters-and-sorting-container #reset-container #reset-all {\n    font-size: 1.35rem;\n    padding: 0.35rem;\n  }\n}\n@media (min-width: 1200px) {\n  #all-news-container #filters-and-sorting-container #reset-container #reset-all {\n    font-size: 1.4rem;\n  }\n}\n#all-news-container #filters-and-sorting-container button {\n  cursor: pointer;\n}\n#all-news-container #selected-news-container {\n  overflow: auto;\n  display: grid;\n  grid-template-rows: 14% 80% 1fr;\n  grid-template-areas: \"tao\" \"snr\" \"ph\";\n  grid-template-columns: 100%;\n  border: 0.2rem solid var(--snc_border_color);\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container {\n    grid-template-rows: 10% 84% 6%;\n    grid-template-areas: \"tao\" \"snr\" \"ph\";\n    grid-template-columns: 100%;\n  }\n}\n#all-news-container #selected-news-container #titleAndOptions {\n  grid-area: tao;\n  display: grid;\n  grid-template-columns: [mh] 75% [os-ds] 1fr;\n  grid-template-areas: \"mh os-ds\";\n  border-bottom: 0.3rem solid var(--tao_border_color);\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container #titleAndOptions {\n    grid-template-columns: [mh] 90% [ds] 1fr;\n    grid-template-areas: \"mh ds\";\n  }\n}\n#all-news-container #selected-news-container #titleAndOptions #main-header-container {\n  grid-area: mh;\n  display: flex;\n  justify-content: center;\n}\n#all-news-container #selected-news-container #titleAndOptions #main-header-container #main-header {\n  font-size: 1.2rem;\n  display: flex;\n  align-items: center;\n}\n#all-news-container #selected-news-container #titleAndOptions #main-header-container button {\n  cursor: pointer;\n  font-size: 1.2rem;\n}\n@media (min-width: 767px) {\n  #all-news-container #selected-news-container #titleAndOptions #main-header-container button {\n    font-size: 1.7rem;\n  }\n}\n#all-news-container #selected-news-container #titleAndOptions #main-header-container button.dismissed {\n  pointer-events: none;\n  display: none;\n}\n#all-news-container #selected-news-container #titleAndOptions #mobile-options-dismiss {\n  grid-area: os-ds;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  border: 0.2rem solid var(--snc_border_color);\n  border-bottom: none;\n  border-top: none;\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container #titleAndOptions #mobile-options-dismiss {\n    border: none;\n  }\n}\n#all-news-container #selected-news-container #titleAndOptions .options-switch, #all-news-container #selected-news-container #titleAndOptions #dismiss-selection {\n  height: 50%;\n  font-size: 1.2rem;\n  box-shadow: 0.4rem 0.4rem 0.45rem 0.1rem inset var(--trans-black);\n  background-color: var(--blackish-brown_1_trans);\n  cursor: pointer;\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container #titleAndOptions .options-switch, #all-news-container #selected-news-container #titleAndOptions #dismiss-selection {\n    font-size: 1.2rem;\n    border: 0.2rem solid var(--snc_border_color);\n    border-bottom: none;\n    border-top: none;\n  }\n}\n#all-news-container #selected-news-container #titleAndOptions .options-switch:hover, #all-news-container #selected-news-container #titleAndOptions #dismiss-selection:hover, #all-news-container #selected-news-container #titleAndOptions .options-switch:focus, #all-news-container #selected-news-container #titleAndOptions #dismiss-selection:focus {\n  filter: brightness(70%);\n}\n#all-news-container #selected-news-container #titleAndOptions .options-switch:not(.inactive), #all-news-container #selected-news-container #titleAndOptions #dismiss-selection:not(.dismissed) {\n  text-shadow: 0.15rem 0.15rem black;\n}\n#all-news-container #selected-news-container #titleAndOptions .options-switch {\n  grid-area: os;\n  border-bottom: 0.1rem solid var(--snc_border_color);\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container #titleAndOptions .options-switch {\n    display: none;\n  }\n}\n#all-news-container #selected-news-container #titleAndOptions .options-switch.inactive {\n  opacity: 0;\n  pointer-events: none;\n}\n#all-news-container #selected-news-container #titleAndOptions #dismiss-selection {\n  grid-area: ds;\n  border-top: 0.1rem solid var(--snc_border_color);\n}\n#all-news-container #selected-news-container #titleAndOptions #dismiss-selection.dismissed {\n  opacity: 0;\n  pointer-events: none;\n}\n#all-news-container #selected-news-container #selected-news-reciever {\n  grid-area: snr;\n  margin-bottom: 0.5rem;\n  overflow: auto;\n}\n#all-news-container #selected-news-container #selected-news-reciever ul {\n  padding: 0 1.5rem;\n}\n#all-news-container #selected-news-container #main-display.dismissed, #all-news-container #selected-news-container #full-display-container.dismissed {\n  display: none;\n  pointer-events: none;\n}\n#all-news-container #selected-news-container #main-display .news, #all-news-container #selected-news-container #full-display-container .news {\n  font-size: 1.15rem;\n  padding-top: 0;\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container #main-display .news, #all-news-container #selected-news-container #full-display-container .news {\n    font-size: 1.2rem;\n  }\n}\n#all-news-container #selected-news-container #main-display .news::after, #all-news-container #selected-news-container #full-display-container .news::after {\n  content: \" \";\n  display: block;\n  height: 1rem;\n  clear: both;\n}\n#all-news-container #selected-news-container #main-display .news img, #all-news-container #selected-news-container #main-display .news iframe, #all-news-container #selected-news-container #full-display-container .news img, #all-news-container #selected-news-container #full-display-container .news iframe {\n  float: left;\n  margin-right: 3%;\n  width: 10rem;\n}\n#all-news-container #selected-news-container #main-display .news p, #all-news-container #selected-news-container #full-display-container .news p {\n  line-height: 1.6rem;\n}\n@media (min-width: 1200px) {\n  #all-news-container #selected-news-container #main-display .news p, #all-news-container #selected-news-container #full-display-container .news p {\n    line-height: 1.2rem;\n  }\n}\n#all-news-container #selected-news-container #main-display .news iframe, #all-news-container #selected-news-container #full-display-container .news iframe {\n  width: 150px;\n  height: 100px;\n}\n#all-news-container #selected-news-container #main-display ul li, #all-news-container #selected-news-container #full-display-container ul li {\n  list-style-type: circle;\n}\n#all-news-container #selected-news-container #main-display ul li .see-more-link, #all-news-container #selected-news-container #full-display-container ul li .see-more-link {\n  text-decoration: underline;\n}\n@media (min-width: 767px) {\n  #all-news-container #selected-news-container #main-display ul li .see-more-link, #all-news-container #selected-news-container #full-display-container ul li .see-more-link {\n    font-size: 1.05rem;\n  }\n}\n#all-news-container #selected-news-container #main-display ul li .see-more-link:hover, #all-news-container #selected-news-container #main-display ul li .see-more-link:focus, #all-news-container #selected-news-container #full-display-container ul li .see-more-link:hover, #all-news-container #selected-news-container #full-display-container ul li .see-more-link:focus {\n  text-decoration: none;\n  filter: brightness(70%);\n}\n#all-news-container #selected-news-container #main-display ul li .see-more-link, #all-news-container #selected-news-container #main-display ul li .relationship-link, #all-news-container #selected-news-container #full-display-container ul li .see-more-link, #all-news-container #selected-news-container #full-display-container ul li .relationship-link {\n  cursor: pointer;\n}\n#all-news-container #selected-news-container #main-display ul li .see-more-link.dismissed, #all-news-container #selected-news-container #main-display ul li .relationship-link.dismissed, #all-news-container #selected-news-container #full-display-container ul li .see-more-link.dismissed, #all-news-container #selected-news-container #full-display-container ul li .relationship-link.dismissed {\n  display: none;\n}\n#all-news-container #filters-and-sorting-container {\n  padding-top: 1rem;\n}\n#all-news-container #pagination-holder {\n  grid-area: ph;\n  border-left: 0.2rem solid var(--pagination-holder_border_color);\n  display: block;\n  width: 100%;\n  border: none;\n}\n#all-news-container #pagination-holder.dismissed {\n  display: none;\n  pointer-events: none;\n}\n#all-news-container #pagination-holder .content-pages {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n}\n#all-news-container #pagination-holder .content-pages a {\n  cursor: pointer;\n  font-size: 1.3rem;\n  margin-left: 0.5rem;\n}\n#all-news-container #pagination-holder .content-pages a.hidden, #all-news-container #pagination-holder .content-pages a.selectedPage {\n  pointer-events: none;\n}\n#all-news-container #pagination-holder .content-pages a.hidden {\n  opacity: 0;\n}\n\n#mobile-typing-container {\n  display: none;\n  justify-content: center;\n  align-items: flex-end;\n  background-color: var(--mtc_background-color);\n  height: calc(100vh - var(--header_height) - var(--footer_height));\n  margin-top: var(--header_height);\n  width: 100%;\n  position: fixed;\n  top: 0;\n}\n#mobile-typing-container div {\n  width: 50%;\n  display: flex;\n  justify-content: center;\n  -moz-column-gap: 1rem;\n       column-gap: 1rem;\n  align-items: center;\n  margin-bottom: 0.5rem;\n}\n#mobile-typing-container div button, #mobile-typing-container div label {\n  font-size: 1.2rem;\n}\n#mobile-typing-container div button {\n  cursor: pointer;\n  color: var(--mtc-button_color);\n}\n\n#mobile-typing-container.opened {\n  display: flex;\n}\n\n@media (min-width: 1200px) {\n  .options-switch {\n    display: none;\n  }\n}\n\n.news-search-field {\n  font-size: 1rem;\n  height: 1.7rem;\n  width: 10rem;\n}\n@media (min-width: 767px) {\n  .news-search-field {\n    font-size: 1.15rem;\n    height: 2.3rem;\n    width: 15rem;\n  }\n}\n@media (min-width: 1200px) {\n  .news-search-field {\n    font-size: 1.15rem;\n    height: 2.3rem;\n    width: 18rem;\n  }\n}\n\nlabel {\n  text-shadow: 0.1rem 0.1rem black;\n}\n\n.loader {\n  color: #fff;\n  position: fixed;\n  box-sizing: border-box;\n  left: -9999px;\n  top: -9999px;\n  width: 0;\n  height: 0;\n  overflow: hidden;\n  z-index: 999999;\n}\n\n.loader:after, .loader:before {\n  box-sizing: border-box;\n  display: none;\n}\n\n.loader.is-active {\n  background-color: rgba(0, 0, 0, 0.85);\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n}\n\n.loader.is-active:after, .loader.is-active:before {\n  display: block;\n}\n\n@-webkit-keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n}\n\n@keyframes rotation {\n  0% {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n}\n@keyframes blink {\n  0% {\n    opacity: 0.5;\n  }\n  to {\n    opacity: 1;\n  }\n}\n.loader[data-text]:before {\n  position: fixed;\n  left: 0;\n  top: 50%;\n  color: currentColor;\n  font-family: Helvetica, Arial, sans-serif;\n  text-align: center;\n  width: 100%;\n  font-size: 14px;\n}\n\n.loader[data-text=\"\"]:before {\n  content: \"Loading\";\n}\n\n.loader[data-text]:not([data-text=\"\"]):before {\n  content: attr(data-text);\n}\n\n.loader[data-text][data-blink]:before {\n  -webkit-animation: blink 1s linear infinite alternate;\n          animation: blink 1s linear infinite alternate;\n}\n\n.loader-default[data-text]:before {\n  top: calc(50% - 63px);\n}\n\n.loader-default:after {\n  content: \"\";\n  position: fixed;\n  width: 48px;\n  height: 48px;\n  border: 8px solid #fff;\n  border-left-color: transparent;\n  border-radius: 50%;\n  top: calc(50% - 24px);\n  left: calc(50% - 24px);\n  -webkit-animation: rotation 1s linear infinite;\n          animation: rotation 1s linear infinite;\n}\n\n.loader-default[data-half]:after {\n  border-right-color: transparent;\n}\n\n.loader-default[data-inverse]:after {\n  animation-direction: reverse;\n}\n\n.loader-double:after, .loader-double:before {\n  content: \"\";\n  position: fixed;\n  border-radius: 50%;\n  border: 8px solid;\n  -webkit-animation: rotation 1s linear infinite;\n          animation: rotation 1s linear infinite;\n}\n\n.loader-double:after {\n  width: 48px;\n  height: 48px;\n  border-color: #fff;\n  border-left-color: transparent;\n  top: calc(50% - 24px);\n  left: calc(50% - 24px);\n}\n\n.loader-double:before {\n  width: 64px;\n  height: 64px;\n  border-color: #eb974e;\n  border-right-color: transparent;\n  -webkit-animation-duration: 2s;\n          animation-duration: 2s;\n  top: calc(50% - 32px);\n  left: calc(50% - 32px);\n}\n\n.loader-bar[data-text]:before {\n  top: calc(50% - 40px);\n  color: #fff;\n}\n\n.loader-bar:after {\n  content: \"\";\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  width: 200px;\n  height: 20px;\n  transform: translate(-50%, -50%);\n  background: linear-gradient(-45deg, #4183d7 25%, #52b3d9 0, #52b3d9 50%, #4183d7 0, #4183d7 75%, #52b3d9 0, #52b3d9);\n  background-size: 20px 20px;\n  box-shadow: inset 0 10px 0 hsla(0, 0%, 100%, 0.2), 0 0 0 5px rgba(0, 0, 0, 0.2);\n  animation: moveBar 1.5s linear infinite reverse;\n}\n\n.loader-bar[data-rounded]:after {\n  border-radius: 15px;\n}\n\n.loader-bar[data-inverse]:after {\n  -webkit-animation-direction: normal;\n          animation-direction: normal;\n}\n\n@-webkit-keyframes moveBar {\n  0% {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 20px 20px;\n  }\n}\n\n@keyframes moveBar {\n  0% {\n    background-position: 0 0;\n  }\n  to {\n    background-position: 20px 20px;\n  }\n}\n.loader-bar-ping-pong:before {\n  width: 200px;\n  background-color: #000;\n}\n\n.loader-bar-ping-pong:after, .loader-bar-ping-pong:before {\n  content: \"\";\n  height: 20px;\n  position: absolute;\n  top: calc(50% - 10px);\n  left: calc(50% - 100px);\n}\n\n.loader-bar-ping-pong:after {\n  width: 50px;\n  background-color: #f19;\n  -webkit-animation: moveBarPingPong 0.5s linear infinite alternate;\n          animation: moveBarPingPong 0.5s linear infinite alternate;\n}\n\n.loader-bar-ping-pong[data-rounded]:before {\n  border-radius: 10px;\n}\n\n.loader-bar-ping-pong[data-rounded]:after {\n  border-radius: 50%;\n  width: 20px;\n  -webkit-animation-name: moveBarPingPongRounded;\n          animation-name: moveBarPingPongRounded;\n}\n\n@keyframes moveBarPingPong {\n  0% {\n    left: calc(50% - 100px);\n  }\n  to {\n    left: calc(50% + 50px);\n  }\n}\n@-webkit-keyframes moveBarPingPongRounded {\n  0% {\n    left: calc(50% - 100px);\n  }\n  to {\n    left: calc(50% + 80px);\n  }\n}\n@keyframes moveBarPingPongRounded {\n  0% {\n    left: calc(50% - 100px);\n  }\n  to {\n    left: calc(50% + 80px);\n  }\n}\n@-webkit-keyframes corners {\n  6% {\n    width: 60px;\n    height: 15px;\n  }\n  25% {\n    width: 15px;\n    height: 15px;\n    left: calc(100% - 15px);\n    top: 0;\n  }\n  31% {\n    height: 60px;\n  }\n  50% {\n    height: 15px;\n    top: calc(100% - 15px);\n    left: calc(100% - 15px);\n  }\n  56% {\n    width: 60px;\n  }\n  75% {\n    width: 15px;\n    left: 0;\n    top: calc(100% - 15px);\n  }\n  81% {\n    height: 60px;\n  }\n}\n@keyframes corners {\n  6% {\n    width: 60px;\n    height: 15px;\n  }\n  25% {\n    width: 15px;\n    height: 15px;\n    left: calc(100% - 15px);\n    top: 0;\n  }\n  31% {\n    height: 60px;\n  }\n  50% {\n    height: 15px;\n    top: calc(100% - 15px);\n    left: calc(100% - 15px);\n  }\n  56% {\n    width: 60px;\n  }\n  75% {\n    width: 15px;\n    left: 0;\n    top: calc(100% - 15px);\n  }\n  81% {\n    height: 60px;\n  }\n}\n.loader-border[data-text]:before {\n  color: #fff;\n}\n\n.loader-border:after {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 15px;\n  height: 15px;\n  background-color: #ff0;\n  -webkit-animation: corners 3s ease both infinite;\n          animation: corners 3s ease both infinite;\n}\n\n.loader-ball:before {\n  content: \"\";\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  top: 50%;\n  left: 50%;\n  margin: -25px 0 0 -25px;\n  background-color: #fff;\n  border-radius: 50%;\n  z-index: 1;\n  -webkit-animation: kickBall 1s infinite alternate ease-in both;\n          animation: kickBall 1s infinite alternate ease-in both;\n}\n\n.loader-ball[data-shadow]:before {\n  box-shadow: inset -5px -5px 10px 0 rgba(0, 0, 0, 0.5);\n}\n\n.loader-ball:after {\n  content: \"\";\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 50%;\n  width: 45px;\n  height: 20px;\n  top: calc(50% + 10px);\n  left: 50%;\n  margin: 0 0 0 -22.5px;\n  z-index: 0;\n  -webkit-animation: shadow 1s infinite alternate ease-out both;\n          animation: shadow 1s infinite alternate ease-out both;\n}\n\n@-webkit-keyframes shadow {\n  0% {\n    background-color: transparent;\n    transform: scale(0);\n  }\n  40% {\n    background-color: transparent;\n    transform: scale(0);\n  }\n  95% {\n    background-color: rgba(0, 0, 0, 0.75);\n    transform: scale(1);\n  }\n  to {\n    background-color: rgba(0, 0, 0, 0.75);\n    transform: scale(1);\n  }\n}\n\n@keyframes shadow {\n  0% {\n    background-color: transparent;\n    transform: scale(0);\n  }\n  40% {\n    background-color: transparent;\n    transform: scale(0);\n  }\n  95% {\n    background-color: rgba(0, 0, 0, 0.75);\n    transform: scale(1);\n  }\n  to {\n    background-color: rgba(0, 0, 0, 0.75);\n    transform: scale(1);\n  }\n}\n@-webkit-keyframes kickBall {\n  0% {\n    transform: translateY(-80px) scaleX(0.95);\n  }\n  90% {\n    border-radius: 50%;\n  }\n  to {\n    transform: translateY(0) scaleX(1);\n    border-radius: 50% 50% 20% 20%;\n  }\n}\n@keyframes kickBall {\n  0% {\n    transform: translateY(-80px) scaleX(0.95);\n  }\n  90% {\n    border-radius: 50%;\n  }\n  to {\n    transform: translateY(0) scaleX(1);\n    border-radius: 50% 50% 20% 20%;\n  }\n}\n.loader-smartphone:after {\n  content: \"\";\n  color: #fff;\n  font-size: 12px;\n  font-family: Helvetica, Arial, sans-serif;\n  text-align: center;\n  line-height: 120px;\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  width: 70px;\n  height: 130px;\n  margin: -65px 0 0 -35px;\n  border: 5px solid #fd0;\n  border-radius: 10px;\n  box-shadow: inset 0 5px 0 0 #fd0;\n  background: radial-gradient(circle at 50% 90%, rgba(0, 0, 0, 0.5) 6px, transparent 0), linear-gradient(0deg, #fd0 22px, transparent 0), linear-gradient(0deg, rgba(0, 0, 0, 0.5) 22px, rgba(0, 0, 0, 0.5));\n  -webkit-animation: shake 2s cubic-bezier(0.36, 0.07, 0.19, 0.97) both infinite;\n          animation: shake 2s cubic-bezier(0.36, 0.07, 0.19, 0.97) both infinite;\n}\n\n.loader-smartphone[data-screen=\"\"]:after {\n  content: \"Loading\";\n}\n\n.loader-smartphone:not([data-screen=\"\"]):after {\n  content: attr(data-screen);\n}\n\n@-webkit-keyframes shake {\n  5% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  10% {\n    transform: translate3d(1px, 0, 0);\n  }\n  15% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  20% {\n    transform: translate3d(1px, 0, 0);\n  }\n  25% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  30% {\n    transform: translate3d(1px, 0, 0);\n  }\n  35% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  40% {\n    transform: translate3d(1px, 0, 0);\n  }\n  45% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  50% {\n    transform: translate3d(1px, 0, 0);\n  }\n  55% {\n    transform: translate3d(-1px, 0, 0);\n  }\n}\n\n@keyframes shake {\n  5% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  10% {\n    transform: translate3d(1px, 0, 0);\n  }\n  15% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  20% {\n    transform: translate3d(1px, 0, 0);\n  }\n  25% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  30% {\n    transform: translate3d(1px, 0, 0);\n  }\n  35% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  40% {\n    transform: translate3d(1px, 0, 0);\n  }\n  45% {\n    transform: translate3d(-1px, 0, 0);\n  }\n  50% {\n    transform: translate3d(1px, 0, 0);\n  }\n  55% {\n    transform: translate3d(-1px, 0, 0);\n  }\n}\n.loader-clock:before {\n  width: 120px;\n  height: 120px;\n  border-radius: 50%;\n  margin: -60px 0 0 -60px;\n  background: linear-gradient(180deg, transparent 50%, #f5f5f5 0), linear-gradient(90deg, transparent 55px, #2ecc71 0, #2ecc71 65px, transparent 0), linear-gradient(180deg, #f5f5f5 50%, #f5f5f5 0);\n  box-shadow: inset 0 0 0 10px #f5f5f5, 0 0 0 5px #555, 0 0 0 10px #7b7b7b;\n  -webkit-animation: rotation infinite 2s linear;\n          animation: rotation infinite 2s linear;\n}\n\n.loader-clock:after, .loader-clock:before {\n  content: \"\";\n  position: fixed;\n  left: 50%;\n  top: 50%;\n  overflow: hidden;\n}\n\n.loader-clock:after {\n  width: 60px;\n  height: 40px;\n  margin: -20px 0 0 -15px;\n  border-radius: 20px 0 0 20px;\n  background: radial-gradient(circle at 14px 20px, #25a25a 10px, transparent 0), radial-gradient(circle at 14px 20px, #1b7943 14px, transparent 0), linear-gradient(180deg, transparent 15px, #2ecc71 0, #2ecc71 25px, transparent 0);\n  -webkit-animation: rotation infinite 24s linear;\n          animation: rotation infinite 24s linear;\n  transform-origin: 15px center;\n}\n\n.loader-curtain:after, .loader-curtain:before {\n  position: fixed;\n  width: 100%;\n  top: 50%;\n  margin-top: -35px;\n  font-size: 70px;\n  text-align: center;\n  font-family: Helvetica, Arial, sans-serif;\n  overflow: hidden;\n  line-height: 1.2;\n  content: \"Loading\";\n}\n\n.loader-curtain:before {\n  color: #666;\n}\n\n.loader-curtain:after {\n  color: #fff;\n  height: 0;\n  -webkit-animation: curtain 1s linear infinite alternate both;\n          animation: curtain 1s linear infinite alternate both;\n}\n\n.loader-curtain[data-curtain-text]:not([data-curtain-text=\"\"]):after, .loader-curtain[data-curtain-text]:not([data-curtain-text=\"\"]):before {\n  content: attr(data-curtain-text);\n}\n\n.loader-curtain[data-brazilian]:before {\n  color: #f1c40f;\n}\n\n.loader-curtain[data-brazilian]:after {\n  color: #2ecc71;\n}\n\n.loader-curtain[data-colorful]:before {\n  -webkit-animation: maskColorful 2s linear infinite alternate both;\n          animation: maskColorful 2s linear infinite alternate both;\n}\n\n.loader-curtain[data-colorful]:after {\n  -webkit-animation: curtain 1s linear infinite alternate both, maskColorful-front 2s 1s linear infinite alternate both;\n          animation: curtain 1s linear infinite alternate both, maskColorful-front 2s 1s linear infinite alternate both;\n  color: #000;\n}\n\n@-webkit-keyframes maskColorful {\n  0% {\n    color: #3498db;\n  }\n  49.5% {\n    color: #3498db;\n  }\n  50.5% {\n    color: #e74c3c;\n  }\n  to {\n    color: #e74c3c;\n  }\n}\n\n@keyframes maskColorful {\n  0% {\n    color: #3498db;\n  }\n  49.5% {\n    color: #3498db;\n  }\n  50.5% {\n    color: #e74c3c;\n  }\n  to {\n    color: #e74c3c;\n  }\n}\n@-webkit-keyframes maskColorful-front {\n  0% {\n    color: #2ecc71;\n  }\n  49.5% {\n    color: #2ecc71;\n  }\n  50.5% {\n    color: #f1c40f;\n  }\n  to {\n    color: #f1c40f;\n  }\n}\n@keyframes maskColorful-front {\n  0% {\n    color: #2ecc71;\n  }\n  49.5% {\n    color: #2ecc71;\n  }\n  50.5% {\n    color: #f1c40f;\n  }\n  to {\n    color: #f1c40f;\n  }\n}\n@-webkit-keyframes curtain {\n  0% {\n    height: 0;\n  }\n  to {\n    height: 84px;\n  }\n}\n@keyframes curtain {\n  0% {\n    height: 0;\n  }\n  to {\n    height: 84px;\n  }\n}\n.loader-music:after, .loader-music:before {\n  content: \"\";\n  position: fixed;\n  width: 240px;\n  height: 240px;\n  top: 50%;\n  left: 50%;\n  margin: -120px 0 0 -120px;\n  border-radius: 50%;\n  text-align: center;\n  line-height: 240px;\n  color: #fff;\n  font-size: 40px;\n  font-family: Helvetica, Arial, sans-serif;\n  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);\n  letter-spacing: -1px;\n}\n\n.loader-music:after {\n  -webkit-backface-visibility: hidden;\n          backface-visibility: hidden;\n}\n\n.loader-music[data-hey-oh]:after, .loader-music[data-hey-oh]:before {\n  box-shadow: 0 0 0 10px;\n}\n\n.loader-music[data-hey-oh]:before {\n  background-color: #fff;\n  color: #000;\n  -webkit-animation: coinBack 2.5s linear infinite, oh 5s 1.25s linear infinite both;\n          animation: coinBack 2.5s linear infinite, oh 5s 1.25s linear infinite both;\n}\n\n.loader-music[data-hey-oh]:after {\n  background-color: #000;\n  -webkit-animation: coin 2.5s linear infinite, hey 5s linear infinite both;\n          animation: coin 2.5s linear infinite, hey 5s linear infinite both;\n}\n\n.loader-music[data-no-cry]:after, .loader-music[data-no-cry]:before {\n  background: linear-gradient(45deg, #009b3a 50%, #fed100 51%);\n  box-shadow: 0 0 0 10px #000;\n}\n\n.loader-music[data-no-cry]:before {\n  -webkit-animation: coinBack 2.5s linear infinite, cry 5s 1.25s linear infinite both;\n          animation: coinBack 2.5s linear infinite, cry 5s 1.25s linear infinite both;\n}\n\n.loader-music[data-no-cry]:after {\n  -webkit-animation: coin 2.5s linear infinite, no 5s linear infinite both;\n          animation: coin 2.5s linear infinite, no 5s linear infinite both;\n}\n\n.loader-music[data-we-are]:before {\n  -webkit-animation: coinBack 2.5s linear infinite, theWorld 5s 1.25s linear infinite both;\n          animation: coinBack 2.5s linear infinite, theWorld 5s 1.25s linear infinite both;\n  background: radial-gradient(ellipse at center, #4ecdc4 0, #556270);\n}\n\n.loader-music[data-we-are]:after {\n  -webkit-animation: coin 2.5s linear infinite, weAre 5s linear infinite both;\n          animation: coin 2.5s linear infinite, weAre 5s linear infinite both;\n  background: radial-gradient(ellipse at center, #26d0ce 0, #1a2980);\n}\n\n.loader-music[data-rock-you]:before {\n  -webkit-animation: coinBack 2.5s linear infinite, rockYou 5s 1.25s linear infinite both;\n          animation: coinBack 2.5s linear infinite, rockYou 5s 1.25s linear infinite both;\n  background: #444;\n}\n\n.loader-music[data-rock-you]:after {\n  -webkit-animation: coin 2.5s linear infinite, weWill 5s linear infinite both;\n          animation: coin 2.5s linear infinite, weWill 5s linear infinite both;\n  background: #96281b;\n}\n\n@-webkit-keyframes coin {\n  to {\n    transform: rotateY(359deg);\n  }\n}\n\n@keyframes coin {\n  to {\n    transform: rotateY(359deg);\n  }\n}\n@-webkit-keyframes coinBack {\n  0% {\n    transform: rotateY(180deg);\n  }\n  50% {\n    transform: rotateY(1turn);\n  }\n  to {\n    transform: rotateY(180deg);\n  }\n}\n@keyframes coinBack {\n  0% {\n    transform: rotateY(180deg);\n  }\n  50% {\n    transform: rotateY(1turn);\n  }\n  to {\n    transform: rotateY(180deg);\n  }\n}\n@-webkit-keyframes hey {\n  0% {\n    content: \"Hey!\";\n  }\n  50% {\n    content: \"Let's!\";\n  }\n  to {\n    content: \"Hey!\";\n  }\n}\n@keyframes hey {\n  0% {\n    content: \"Hey!\";\n  }\n  50% {\n    content: \"Let's!\";\n  }\n  to {\n    content: \"Hey!\";\n  }\n}\n@-webkit-keyframes oh {\n  0% {\n    content: \"Oh!\";\n  }\n  50% {\n    content: \"Go!\";\n  }\n  to {\n    content: \"Oh!\";\n  }\n}\n@keyframes oh {\n  0% {\n    content: \"Oh!\";\n  }\n  50% {\n    content: \"Go!\";\n  }\n  to {\n    content: \"Oh!\";\n  }\n}\n@-webkit-keyframes no {\n  0% {\n    content: \"No...\";\n  }\n  50% {\n    content: \"no\";\n  }\n  to {\n    content: \"No...\";\n  }\n}\n@keyframes no {\n  0% {\n    content: \"No...\";\n  }\n  50% {\n    content: \"no\";\n  }\n  to {\n    content: \"No...\";\n  }\n}\n@-webkit-keyframes cry {\n  0% {\n    content: \"woman\";\n  }\n  50% {\n    content: \"cry!\";\n  }\n  to {\n    content: \"woman\";\n  }\n}\n@keyframes cry {\n  0% {\n    content: \"woman\";\n  }\n  50% {\n    content: \"cry!\";\n  }\n  to {\n    content: \"woman\";\n  }\n}\n@-webkit-keyframes weAre {\n  0% {\n    content: \"We are\";\n  }\n  50% {\n    content: \"we are\";\n  }\n  to {\n    content: \"We are\";\n  }\n}\n@keyframes weAre {\n  0% {\n    content: \"We are\";\n  }\n  50% {\n    content: \"we are\";\n  }\n  to {\n    content: \"We are\";\n  }\n}\n@-webkit-keyframes theWorld {\n  0% {\n    content: \"the world,\";\n  }\n  50% {\n    content: \"the children!\";\n  }\n  to {\n    content: \"the world,\";\n  }\n}\n@keyframes theWorld {\n  0% {\n    content: \"the world,\";\n  }\n  50% {\n    content: \"the children!\";\n  }\n  to {\n    content: \"the world,\";\n  }\n}\n@-webkit-keyframes weWill {\n  0% {\n    content: \"We will,\";\n  }\n  50% {\n    content: \"rock you!\";\n  }\n  to {\n    content: \"We will,\";\n  }\n}\n@keyframes weWill {\n  0% {\n    content: \"We will,\";\n  }\n  50% {\n    content: \"rock you!\";\n  }\n  to {\n    content: \"We will,\";\n  }\n}\n@-webkit-keyframes rockYou {\n  0% {\n    content: \"we will\";\n  }\n  50% {\n    content: \"🤘\";\n  }\n  to {\n    content: \"we will\";\n  }\n}\n@keyframes rockYou {\n  0% {\n    content: \"we will\";\n  }\n  50% {\n    content: \"🤘\";\n  }\n  to {\n    content: \"we will\";\n  }\n}\n.loader-pokeball:before {\n  content: \"\";\n  position: absolute;\n  width: 100px;\n  height: 100px;\n  top: 50%;\n  left: 50%;\n  margin: -50px 0 0 -50px;\n  background: linear-gradient(180deg, red 42%, #000 0, #000 58%, #fff 0);\n  background-repeat: no-repeat;\n  background-color: #fff;\n  border-radius: 50%;\n  z-index: 1;\n  -webkit-animation: movePokeball 1s linear infinite both;\n          animation: movePokeball 1s linear infinite both;\n}\n\n.loader-pokeball:after {\n  content: \"\";\n  position: absolute;\n  width: 24px;\n  height: 24px;\n  top: 50%;\n  left: 50%;\n  margin: -12px 0 0 -12px;\n  background-color: #fff;\n  border-radius: 50%;\n  z-index: 2;\n  -webkit-animation: movePokeball 1s linear infinite both, flashPokeball 0.5s infinite alternate;\n          animation: movePokeball 1s linear infinite both, flashPokeball 0.5s infinite alternate;\n  border: 2px solid #000;\n  box-shadow: 0 0 0 5px #fff, 0 0 0 10px #000;\n}\n\n@-webkit-keyframes movePokeball {\n  0% {\n    transform: translateX(0) rotate(0);\n  }\n  15% {\n    transform: translatex(-10px) rotate(-5deg);\n  }\n  30% {\n    transform: translateX(10px) rotate(5deg);\n  }\n  45% {\n    transform: translatex(0) rotate(0);\n  }\n}\n\n@keyframes movePokeball {\n  0% {\n    transform: translateX(0) rotate(0);\n  }\n  15% {\n    transform: translatex(-10px) rotate(-5deg);\n  }\n  30% {\n    transform: translateX(10px) rotate(5deg);\n  }\n  45% {\n    transform: translatex(0) rotate(0);\n  }\n}\n@-webkit-keyframes flashPokeball {\n  0% {\n    background-color: #fff;\n  }\n  to {\n    background-color: #fd0;\n  }\n}\n@keyframes flashPokeball {\n  0% {\n    background-color: #fff;\n  }\n  to {\n    background-color: #fd0;\n  }\n}\n.loader-bouncing:after, .loader-bouncing:before {\n  content: \"\";\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  top: calc(50% - 10px);\n  left: calc(50% - 10px);\n  border-radius: 50%;\n  background-color: #fff;\n  -webkit-animation: kick 0.6s infinite alternate;\n          animation: kick 0.6s infinite alternate;\n}\n\n.loader-bouncing:after {\n  margin-left: -30px;\n  -webkit-animation: kick 0.6s infinite alternate;\n          animation: kick 0.6s infinite alternate;\n}\n\n.loader-bouncing:before {\n  -webkit-animation-delay: 0.2s;\n          animation-delay: 0.2s;\n}\n\n@-webkit-keyframes kick {\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0.3;\n    transform: translateY(-1rem);\n  }\n}\n\n@keyframes kick {\n  0% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0.3;\n    transform: translateY(-1rem);\n  }\n}\n.sbl-circ-ripple {\n  height: 48px;\n  width: 48px;\n  color: #48659b;\n  border-radius: 50%;\n  position: relative;\n  display: inline-block;\n  top: 20%;\n  left: 40%;\n}\n\n.sbl-circ-ripple::after, .sbl-circ-ripple::before {\n  content: \"\";\n  height: 0;\n  width: 0;\n  border: inherit;\n  border: 5px solid;\n  border-radius: inherit;\n  position: absolute;\n  left: 40%;\n  top: 40%;\n  -webkit-animation: circle-ripple 1s linear infinite;\n          animation: circle-ripple 1s linear infinite;\n}\n\n.sbl-circ-ripple::before {\n  -webkit-animation-delay: -0.6s;\n          animation-delay: -0.6s;\n}\n\n@-webkit-keyframes circle-ripple {\n  0% {\n    height: 0;\n    width: 0;\n    left: 1.6rem;\n    top: 1.6rem;\n  }\n  100% {\n    height: 5rem;\n    width: 5rem;\n    left: -1rem;\n    top: -1rem;\n    opacity: 0;\n  }\n}\n\n@keyframes circle-ripple {\n  0% {\n    height: 0;\n    width: 0;\n    left: 1.6rem;\n    top: 1.6rem;\n  }\n  100% {\n    height: 5rem;\n    width: 5rem;\n    left: -1rem;\n    top: -1rem;\n    opacity: 0;\n  }\n}/*# sourceMappingURL=style.css.map */", "",{"version":3,"sources":["webpack://./css/style.css","webpack://./css/base/_customBase.scss","webpack://./css/base/_mixins.scss","webpack://./css/constants/_header.scss","webpack://./css/constants/_footer.scss","webpack://./css/constants/_universal-container.scss","webpack://./css/constants/_images.scss","webpack://./css/constants/_loaders.scss","webpack://./css/constants/_shadow-box.scss","webpack://./css/constants/_more-options.scss","webpack://./css/modules/_front-page.scss","webpack://./css/modules/_single.scss","webpack://./css/modules/_all-news.scss","webpack://./css/downloads/css-loader.css","webpack://./css/downloads/sbl-circ-ripple.css"],"names":[],"mappings":"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","sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";

      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }

      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }

      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }

      content += cssWithMappingToString(item);

      if (needLayer) {
        content += "}";
      }

      if (item[2]) {
        content += "}";
      }

      if (item[4]) {
        content += "}";
      }

      return content;
    }).join("");
  }; // import a list of modules into the list


  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }

      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }

      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }

      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    options = {};
  }

  if (!url) {
    return url;
  }

  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them

  if (/^['"].*['"]$/.test(url)) {
    url = url.slice(1, -1);
  }

  if (options.hash) {
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./css/dots.css":
/*!**********************!*\
  !*** ./css/dots.css ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_dots_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./dots.css */ "./node_modules/css-loader/dist/cjs.js!./css/dots.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_dots_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_dots_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_dots_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_dots_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./css/style.css":
/*!***********************!*\
  !*** ./css/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ "./node_modules/style-loader/dist/runtime/styleDomAPI.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ "./node_modules/style-loader/dist/runtime/insertBySelector.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ "./node_modules/style-loader/dist/runtime/insertStyleElement.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ "./node_modules/style-loader/dist/runtime/styleTagTransform.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ "./node_modules/css-loader/dist/cjs.js!./css/style.css");

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());
options.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());

      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, "head");
    
options.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());
options.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"], options);




       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__["default"].locals : undefined);


/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";


var stylesInDOM = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };

    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);

  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }

      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };

  return updater;
}

module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();

        stylesInDOM.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";


var memo = {};
/* istanbul ignore next  */

function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }

    memo[target] = styleTarget;
  }

  return memo[target];
}
/* istanbul ignore next  */


function insertBySelector(insert, style) {
  var target = getTarget(insert);

  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }

  target.appendChild(style);
}

module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}

module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;

  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}

module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";

  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }

  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }

  var needLayer = typeof obj.layer !== "undefined";

  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }

  css += obj.css;

  if (needLayer) {
    css += "}";
  }

  if (obj.media) {
    css += "}";
  }

  if (obj.supports) {
    css += "}";
  }

  var sourceMap = obj.sourceMap;

  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  options.styleTagTransform(css, styleElement, options.options);
}

function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }

  styleElement.parentNode.removeChild(styleElement);
}
/* istanbul ignore next  */


function domAPI(options) {
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}

module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }

    styleElement.appendChild(document.createTextNode(css));
  }
}

module.exports = styleTagTransform;

/***/ }),

/***/ "./src/modules/all-news.js":
/*!*********************************!*\
  !*** ./src/modules/all-news.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shadowBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shadowBox */ "./src/modules/shadowBox.js");
//Continue to work on making this more efficient and readable

//First and foremost, get everything sorted out in the code at large(see above), before addressing the following:
//Keep current associated functionality. It is flawed, but that's okay. It should be implemented as a dropdown of filters, than putting text in the search box
//there will be a dropdown for props and mems, respectively, with id's associated with 'data-' that is used as the filter
//Exterior calls will select it
//Also, might want to move reset-all when on tab and below



class News {
    constructor(){
        // this.closeMediaButton = document.querySelector('#media-close');
    if(document.querySelector('#all-news-container')){
        // this.viewPortHeight = window.innerHeight
        this.returnHome = document.querySelector('#return-home');
                 //Later, find way to make this not cause errors on other pages
        this.mainContainer = document.querySelector('#all-news-container');
        this.newsReciever = document.querySelector('#main-display');
        this.paginationHolder = document.querySelector('#pagination-holder')
        this.relationshipLinks;
        this.seeMore;
        this.allOptions = document.querySelector('#filters-and-sorting-container')
        this.optionsButton = document.querySelectorAll('.options-switch');
        this.allOptionsVisible = false;
        this.dismissButton = document.querySelector('#dismiss-selection');

        this.contentPageOptions;

        this.initialTitle = "All News";
        this.storedTitle;
        this.fullDisplayContent = [];
        this.calledIds = [];
        this.externalCall = false;
        this.backgroundCall = false;
        this.origin;

        this.currentPages = 0;
        this.storedPages = 0;
        this.contentLoaded = false;

        this.mainHeader = document.querySelector('#main-header');

        this.newsSearch = document.querySelector("#news-search")
        this.newsDelivery = '';
        this.isSpinnerVisible = false
        this.previousValue = "";
        this.typingTimer;
        this.clearSearch = document.querySelector('#clear-search')
        this.cleared = false;

        this.newsSearchCloneContainer = document.querySelector('#mobile-typing-container');
        this.newsSearchClone = this.newsSearchCloneContainer.querySelector('input');
        this.closeNewsSearchClone = document.querySelector('#close-mobile-news-search');

        this.currentReport;      
        this.fullDisplayContainer = document.querySelector('#full-display-container');    
        this.fullDisplay = false;

        this.resetAll = document.getElementById('reset-all');

        this.toggleOptions = document.querySelectorAll('.toggle-options');

        //After get everything working, put the setting in here, rarer than just a ref
        //nvm. Need to do it now
        
        this.reorderByDate = document.querySelector('#order-by-date');
        this.reorderByAlpha = document.querySelector('#order-by-alpha');

        this.fullWordSwitch = document.querySelector('#full-word-only');

        this.wordSearchPosition = document.querySelector('#word-start-only');

        this.caseSensitiveSwitch = document.querySelector('#case-sensitive');

        this.includeTitle = document.querySelector('#include-title');
        this.includeDescription = document.querySelector('#include-description');

        this.includePropertyUpdates = document.querySelector('#include-property-updates');
        this.includeGeneralNews = document.querySelector('#include-general-news');

        this.toggableSettings = {
            dateOrder:{
                ref: 'order-by-date',
                directive: 'desc',
                isOn: true
            },
            alphaOrder:{
                ref: 'order-by-alpha',
                directive: 'desc',
                isOn: false
            },
            includeTitle: {
                ref: 'include-title',
                directive: 'include',
                isOn: true
            },
            includeDescription: {
                ref: 'include-description',
                directive: 'include',
                isOn: true
            },
            update: {
                ref: 'include-property-updates',
                directive: 'include',
                isOn: true
            },
            news: {
                ref: 'include-general-news',
                directive: 'include',
                isOn: true
            },
            fullWord: {
                ref: 'full-word-only',
                directive: 'full-word-only',
                isOn: false
            },
            wordStartOnly: {
                ref: 'word-start-only',
                directive: 'word-start-only',
                isOn: false
            },
            isCaseSensitive: {
                ref: 'case-sensitive',
                directive: 'case-sensitive',
                isOn: false
            }
        }
        // this.filterBydate = document.querySelector('#filter-by-date')
        // this.isDateFilterOn = true;

        this.dateFilters = document.querySelector('#date-filters');
        this.dateFilterOptions = this.dateFilters.querySelectorAll('select');
        

        //range makes the previous two null, effectively canceling they out and shutting off their if logic
        //button will make options appear and make isFilterOn = true, but if no option is selected, they dissapear and false is restored 
        this.dateFilterSetUp = {
            month: null,
            year: null,
            // range: {
            //     start: null,
            //     end: null
            // }
        }

        this.yearOptions = document.querySelector('#by-year');
        this.monthOptions = document.querySelector('#by-month');

        
        this.yearList = {}
        this.months = [];

        let target = this.toggableSettings;
        
        // this.allOptionsPosition = this.allOptionsPosition.bind(this);
        this.events(target);
    }
    }

    events(target){

        window.addEventListener('resize', ()=>{
            setTimeout(()=>{
                if(window.innerWidth >= 1200){
                    this.allOptionsVisible = false;
                    this.allOptions.classList.remove('fade-in');
                    this.allOptions.classList.remove('fade-out');
                    this.closeClone()
                }
            }, 300)
            this.allOptionsPosition();
        })
        let defaultSwitchSettings = JSON.parse(JSON.stringify(this.toggableSettings))

        this.gatherNews();

        this.populateDateFilters();

        this.resetAll.onclick = ()=>{
            this.toggleText(defaultSwitchSettings);
            this.toggableSettings = JSON.parse(JSON.stringify(defaultSwitchSettings));
            target = this.toggableSettings; 
            console.log(this.toggableSettings.dateOrder, target.dateOrder)
            this.wordSearchPosition.classList.remove('inactive');
            // console.log(defaultSwitchSettings.isCaseSensitive)
            // this.mainHeader.innerHTML = `${this.initialTitle}`;
            this.currentReport = '';
            this.contentLoaded = false;
            this.newsReciever.innerHTML = '<div class="spinner-loader"></div>';
            this.isSpinnerVisible = true;
            this.newsSearch.value = '';
            this.newsDelivery = '';
            this.dismissSelection();
            this.fullDisplay = false;
            // this.mediaContainer.innerHTML = '';
            this.gatherNews();
            this.yearOptions.value = ''
            this.monthOptions.value = ''
            this.yearOptions.dispatchEvent(new Event('change'));
            this.monthOptions.dispatchEvent(new Event('change'));
            this.clearSearch.classList.add('dismissed');
            // console.log(year.options[year.selectedIndex].value)
        }
        //desc date not working
        this.reorderByDate.onclick = ()=>{
            console.log(this.toggableSettings.dateOrder)
            target.alphaOrder.isOn = false
            target.alphaOrder.directive = 'desc'
            
            target.dateOrder.isOn = true

            if(target.dateOrder.directive === 'desc'){
                target.dateOrder.directive = 'asc'
            }else(
                target.dateOrder.directive = 'desc'
            )
            this.gatherNews();
        };
//iniate toggle through these, using lets to handle both changes based on the .directive value, 
//and maybe even setting intial hiding this way too 
        this.reorderByAlpha.onclick = ()=>{
            target.dateOrder.isOn = false
            target.dateOrder.directive = 'desc'
            
            target.alphaOrder.isOn = true

            if(target.alphaOrder.directive === 'desc'){
                target.alphaOrder.directive = 'asc'
            }else(
                target.alphaOrder.directive = 'desc'
            )
            this.gatherNews();
        };

        this.includePropertyUpdates.onclick = ()=>{
            if(target.update.isOn === true){
                target.update.isOn = false;
            }else{
                target.update.isOn = true;
            }  
            this.contentLoaded = false;
            this.gatherNews()
        };

        this.includeGeneralNews.onclick = ()=>{
            if(target.news.isOn === true){
                target.news.isOn = false;
            }else{
                target.news.isOn = true;
            } 
            this.contentLoaded = false;
            this.gatherNews()
        };

        this.fullWordSwitch.onclick = ()=>{

            if(target.fullWord.isOn){
                target.fullWord.isOn = false;
                this.wordSearchPosition.classList.remove('inactive');
            }else{            
                target.fullWord.isOn = true;
                target.wordStartOnly.isOn = false;
                this.wordSearchPosition.classList.add('inactive');
            } 
            console.log(`word start only is: ${target.wordStartOnly.isOn}`)
            console.log(`full word only is: ${target.fullWord.isOn}`)
        }

        this.wordSearchPosition.onclick = ()=>{
            if(target.wordStartOnly.isOn){
                target.wordStartOnly.isOn = false;
            }else{
                target.wordStartOnly.isOn = true;
            } 
            console.log(`word start only is: ${target.wordStartOnly.isOn}`)
        }

        this.caseSensitiveSwitch.addEventListener('click', e=>{
            if(target.isCaseSensitive.isOn){
                target.isCaseSensitive.isOn = false;
                // e.currentTarget.classList.remove('activated');
            }else{
                target.isCaseSensitive.isOn = true;
                // e.currentTarget.classList.add('activated');
            } 
            console.log(`case sensitive is: ${target.isCaseSensitive.isOn}`)
        });

        this.includeTitle.addEventListener('click', e=>{
            if(target.includeTitle.isOn){
                target.includeTitle.isOn = false;
                // e.currentTarget.classList.remove('activated');
            }else{
                target.includeTitle.isOn = true;
                // e.currentTarget.classList.add('activated');
            } 
        });

        this.includeDescription.addEventListener('click', e=>{
            if(target.includeDescription.isOn){
                target.includeDescription.isOn = false;
                // e.currentTarget.classList.remove('activated');
            }else{
                target.includeDescription.isOn = true;
                // e.currentTarget.classList.add('activated');
            } 
        });

        // this.includeRelationship.onclick = ()=>{
        //     if(this.searchableFields.relationships){
        //         this.searchableFields.relationships = false;
        //     }else{
        //         this.searchableFields.relationships = true;
        //     }  
        // };

        // this.filterBydate.onclick = ()=>{
        //     this.dateFilters.classList.remove('dismissed');
        //     this.isDateFilterOn = true;
        //     console.log(this.isDateFilterOn)
        // }

        this.dateFilterOptions.forEach(e =>{
            e.addEventListener('change', (option)=>{
                let currentMonth = this.monthOptions.value;

                if(e.id === 'by-year'){
                    
                        if(this.yearOptions.value !== ''){
                            this.monthOptions.innerHTML = `
                            <option value="">Any</option>
                            ${this.yearList[this.yearOptions.value].map(month=> `<option value="${month}">${month}</option>`).join('')}
                            `;
                        }else{
                            this.monthOptions.innerHTML = `
                                <option value="">Any</option>
                                ${this.months.map(month=> `<option value="${month}">${month}</option>`).join('')}
                            `
                        }

                        if(this.monthOptions.querySelector(`option[value='${currentMonth}']`)){
                            this.monthOptions.value = currentMonth;
                            this.monthOptions.dispatchEvent(new Event('change'));
                        }else{
                            this.monthOptions.value = ''
                            this.monthOptions.dispatchEvent(new Event('change'));
                        }
                }
                let value = option.target.id.slice(3);
                this.dateFilterSetUp[value] = option.target.value;
                // console.log(this.dateFilterSetUp)

                this.contentLoaded = false;
               
                this.gatherNews()
            })
        })

        this.newsSearch.addEventListener('keyup', () => this.typingLogic())
        this.optionsButton.forEach(e=>{e.addEventListener('click', () => this.toggleAllOptions())})
        this.dismissButton.addEventListener('click', () => this.dismissSelection())

        document.addEventListener("keydown", e => this.keyPressDispatcher(e))
        this.newsSearchClone.addEventListener('keyup', () => this.simuTyping());
        //considering change layout of options as alt to clone
        this.allOptionsPosition();
        this.closeNewsSearchClone.addEventListener('click', ()=> this.closeClone());

        this.toggleText(target);
        this.toggleOptions.forEach(e=>{e.addEventListener('click', ()=> this.toggleText(target))})
        
        this.clearSearch.addEventListener('click', e=>{
            this.newsSearch.value = '';
            this.newsSearchClone.value = '';
            this.cleared = true;   
            this.typingLogic();
            e.currentTarget.classList.add('dismissed');
        })
    }

    allOptionsPosition(){
        if(window.innerWidth < 1200){
            this.newsSearch.addEventListener('focusin', this.openClone);
            this.newsSearchClone.value = this.newsSearch.value; 
        }else{
            this.newsSearch.removeEventListener('focusin', this.openClone);
        }
    }
//Add 'isOn' to excludes, with include having class off and exclude having class of *value?
    toggleText(target){
        let filterKeys = Object.keys(target)
        filterKeys.forEach(e=>{
            document.querySelectorAll(`#${target[e].ref} span`).forEach(i=>i.classList.add('hidden'))
            if(target[e].isOn){
                // console.log(`#${target[e].ref}`)
                document.querySelector(`#${target[e].ref}`).classList.add('activated');
                document.querySelector(`#${target[e].ref} .${target[e].directive}`).classList.remove('hidden');
            }else{
                document.querySelector(`#${target[e].ref}`).classList.remove('activated');
                document.querySelector(`#${target[e].ref} .off`).classList.remove('hidden');
            }
        })
    }

    //Redo pagination, but will need to have setup work for getting rid through each reload
    
    //check pagination throughout each add

    //establish default search behavior. As in, does it look at title, bio, 
    //and caption partials at the start?(in if statements use contains on strings?)
    //in gatherNews() have if statements that work through the data after it's gotten, before the insertions
    //When click on news, use bigger picture. Also put in dummy, 
    //related sites on the right, and maybe even related members and properties(title over and with links)
    //Also list other news related to it, like if all about same building or member(can use cmmon relation for that but 
    //need to add a new field for types of relationships)
    //Give titles to other sections, with the right being divided into related links and search modifications
    //Remember functionality for other parts linking to here
    typingLogic() {
        //Automatically dismiss single or have this and other buttons frozen and/or hidden until dismissed
        //Leaning towards the latter, as far less complicated
        if (this.newsSearch.value !== this.previousValue) {
            this.fullDisplay = false;
            this.dismissSelection();
            this.contentLoaded = false;
            clearTimeout(this.typingTimer)
    
          if(this.newsSearch.value) {
              if(!this.newsSearch.value.startsWith('#')){
                this.storedPages = 0;
              }else{
                this.clearSearch.classList.remove('dismissed');
              }
            if (!this.isSpinnerVisible) {
              this.newsReciever.innerHTML = '<div class="spinner-loader"></div>'
              this.isSpinnerVisible = true
            }
            this.newsDelivery = this.newsSearch.value;
            this.mainHeader.innerHTML = `Showing Results for: ${this.newsDelivery}`;
            this.currentPages = 0;
            this.typingTimer = setTimeout(this.gatherNews.bind(this), 750);
          } else {
            this.newsDelivery = "";
            this.clearSearch.classList.add('dismissed');
            this.mainHeader.innerHTML = `${this.initialTitle}`;
            this.isSpinnerVisible = false;

            this.gatherNews()
          }
        }
    
        this.previousValue = this.newsSearch.value
      }

      openClone(){
        //necessary to remove the event listener
        const newsSearchCloneContainer = document.querySelector('#mobile-typing-container');
        const newsSearchClone = newsSearchCloneContainer.querySelector('input');
        newsSearchCloneContainer.classList.add('opened');
        newsSearchClone.focus();
      }

      closeClone(){
        this.newsSearchCloneContainer.classList.remove('opened');
      }

      simuTyping(){
        this.newsSearch.value = this.newsSearchClone.value;
        this.typingLogic()
      }

      keyPressDispatcher(e) {
          if(window.innerWidth < 1200){
            if (e.keyCode == 83 && !this.allOptionsVisible) {
                this.toggleAllOptions();
            }

            if(e.keyCode === 27 && this.allOptionsVisible){
                this.toggleAllOptions();
            }
          }
        }

      async populateDateFilters(){
        try{
            //Is it better just to use seperate url routes? 
            const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(siteData.root_url + '/wp-json/cah/v1/all-news?news'); 
            const results = response.data;

            const dates = [];
            const splitDates = [];
            // const years = [];

            console.log(results)

            results.updatesAndNews.forEach(news=>{
                if (!dates.includes(new Date(news.date).toLocaleDateString('en-us', {month: 'long', year: 'numeric'}))) {
                    dates.push(new Date(news.date).toLocaleDateString('en-us', {month: 'long', year: 'numeric'}));
                }
            })
            // console.log(dates)

            dates.forEach(e=>{
                splitDates.push(e.split(' '))
            })

            console.log(splitDates)

            splitDates.forEach(date=>{

                if(!this.months.includes(date[0])){
                    this.months.push(date[0]);
                }
                
                // if(!years.includes(date[1])){
                    // years.push(date[1])
                    this.yearList[date[1]] = [];
                // }

            })

            const years = Object.keys(this.yearList)

            years.forEach(year=>{
                splitDates.forEach(date=>{
                    if(year === date[1]){
                        this.yearList[year].push(date[0]);
                    }
                })
            })
            
            console.log(this.yearList)

            let allMonths = ['January','February','March', 'April','May','June','July','August','September','October','November','December'];

            this.months.sort(function(a,b){
                return allMonths.indexOf(a) > allMonths.indexOf(b);
            });
            years.sort();

            this.yearOptions.innerHTML = `
                <option value="">Any</option>
                ${years.map(year=> `<option value="${year}">${year}</option>`).join('')}
            `;

            this.monthOptions.innerHTML = `
                <option value="">Any</option>
                ${this.months.map(month=> `<option value="${month}">${month}</option>`).join('')}
            `;

            }catch(e){
                console.log(e);
            }
        }
    
    async gatherNews(){
        let target = this.toggableSettings
        //Put results in var copy, just like in the shadowbox
    
        //Maybe, to solve certain issues of 'undefined', allow pagination even when only 1 page, as I think next and prev will be hidden 
        try{
            //Is it better just to use seperate url routes? 
            const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(siteData.root_url + '/wp-json/cah/v1/all-news?news=' + this.newsDelivery); 
            const results = response.data; 
            
            // console.log(results)
        
            //maybe allowing a one on the pagination would solve the errors

            //For field exclusion, could have code processed with matches() or indexOf on the fields that aren't banned
            //Take out those that produce a false result

            let allNews = results.updatesAndNews;

            let relatedPosts = results.propertiesAndMembers;

            let postRelationships = [];
            
            allNews.map(news=>{
                news.relationships.forEach(post=>{
                    // console.log(`${news.title}: ${post.ID}`)
                    for(let i=0; i < relatedPosts.length; i++){
                        if(post.ID === relatedPosts[i].id){
                            postRelationships.push(relatedPosts[i]);
                            // console.log(postRelationships)
                        }
                        news.relationships = postRelationships;

                    }

                })
                postRelationships = [];
            })
            
            let n = window.location.href;
            if(n.indexOf('#') > -1){
                n = n.split(/[/-]+/)
                if(n[4].length){
                    if(n[5].indexOf('news') > -1){
                        // this.singleCall = true;
                        this.fullDisplay = true; 
                    }else{
                        this.newsSearch.value = `${n[4]}`; 
                        this.newsDelivery = `${n[4]}`; 
                    }
                    this.origin = n[6];                
                    this.currentReport = n[4].slice(1); 
                    window.history.replaceState('', '', `/${n[2]}-${n[3]}`);
                    // history.go(-1);
                    this.externalCall = true;
                }
            }

            let newsTypes = ['news', 'update'];

            let dataCount = 0;
            const newsOutput = 2;
            let pageCount = 0;
            let newsPage = [];
            let newsPages = [];
            let contentShown;

            // //if symbol entered as only thing, it'll my logic, sometimes. Remedy this.
            
            if(!this.fullDisplay || this.backgroundCall){
                //Do start vs anywhere in the word
                //Start only is standard and auto true when whole word is turned on(?) or simply buried in partial if
                //it should at least be inacessible on the frontend with visual cue

                //Do a more thorough test of those later after rel and 'dislay-quality' articles created 

                //Do basic month and year and range picking, before looking into pop-up and figuring out how to get info from what is selected on it
                let fullList = [];
                let titles = [];
                let desc = [];
                let rel = [];

                if(this.newsDelivery !== ''){
                    console.log('red')

                    if(this.newsDelivery.startsWith('#')){
                        let requestedId = this.newsDelivery.replace('#', '')
                        let associatedNews = [];
                        let name;
                        allNews.forEach(news =>{
                            news.relationships.forEach(r=>{
                                if(r.id === parseInt(requestedId)){
                                    associatedNews.push(news);
                                    name = r.title;
                                    console.log(associatedNews)
                                }
                            })
                        })
                        allNews = associatedNews;

                        if(this.externalCall){
                            console.log(this.origin)
                            this.externalCall = false;
                            this.previousValue = this.newsSearch.value;
                            this.gatherNews();
                            this.returnHome.href=`${siteData.root_url}/#${this.origin}Container`; 
                            this.mainHeader.innerHTML = `Showing Results for: ${name}`;
                            this.storedTitle = `Showing Results for: ${name}`;
                            this.clearSearch.classList.remove('dismissed');
                        }
                    }else{    
                        if(target.includeTitle.isOn){
                            if(target.fullWord.isOn){
                                titles = allNews.filter((news) => {
                                    if (news.title.toLowerCase().split(" ").includes(this.newsDelivery.toLowerCase())) {
                                        return news;
                                    }                              
                                        return null;
                                });
                            }else if(!target.fullWord.isOn && target.wordStartOnly.isOn){
                                allNews.forEach(news=> {
                                    if(news.title.toLowerCase().indexOf(this.newsDelivery.toLowerCase()) !== -1) {
                                        let newsSplit = news.title.toLowerCase().split(" ");
                                        for(let e of newsSplit){
                                            if(e.startsWith(this.newsDelivery.toLowerCase())){
                                                titles.push(news)
                                                // break;
                                                // return news;
                                            }
                                            // return null; 
                                        }
                                    }
                                })
                            }else{
                                titles = allNews.filter(news=> news.title.toLowerCase().indexOf(this.newsDelivery.toLowerCase()) !== -1)
                            }

                            if(target.isCaseSensitive.isOn){
                                titles = titles.filter(news=> news.title.indexOf(this.newsDelivery) !== -1);
                            }
                        }

                        if(target.includeDescription.isOn){
                            if(target.fullWord.isOn){
                                desc = allNews.filter((news) => {
                                    if (news.fullDescription.toLowerCase().split(" ").includes(this.newsDelivery.toLowerCase())) {
                                        return news;
                                    }                               
                                        return null;
                                });
                                console.log('if fired!')
                            }else if(!target.fullWord.isOn && target.wordStartOnly.isOn){
                                allNews.forEach(news=> {
                                    if(news.fullDescription.toLowerCase().indexOf(this.newsDelivery.toLowerCase()) !== -1) {
                                        let newsSplit = news.fullDescription.toLowerCase().split(" ");
                                        for(let e of newsSplit){
                                            if(e.startsWith(this.newsDelivery.toLowerCase())){
                                                desc.push(news)
                                            }
                                        }
                                    }
                                })
                            }else{
                                desc = allNews.filter(news=> news.fullDescription.toLowerCase().indexOf(this.newsDelivery.toLowerCase()) !== -1)
                            }
  
                            if(target.isCaseSensitive.isOn){
                                desc = desc.filter(news=> news.fullDescription.indexOf(this.newsDelivery) !== -1);
                            }
                        }

                        let searchedNews = fullList.concat(titles, desc, rel);
                        
                        allNews = []; 
    
                        searchedNews.forEach((news)=>{
                            if (!allNews.includes(news)) {
                                allNews.push(news);
                            }
                        })
                    }
                }

                
                //Dates belong to a seperate logic thread, and as such should noyt be linked to typing. They ae closer to the sorts in that 
                //they can be after the typing, before, or even be used without it
                
                //After I finish the core logic, add in functionality that has any as option for 'year', with selection of specific 
                //limiting the 'month' values and selecting the earliest one as the default filter for 'month' or 'any'
                //Filter by date will be a boolean with dropdown defaults of any for both

                 let dateFiltersSet = Object.keys(this.dateFilterSetUp);
                //  console.log(`contentLoaded = ${this.contentLoaded}`)

                 for(let filter of dateFiltersSet){
                     if(this.dateFilterSetUp[filter]){                         
                         allNews = allNews.filter((news) => {
                            if (new Date(news.date).toLocaleDateString('en-us', {month: 'long', year: 'numeric'}).includes(this.dateFilterSetUp[filter])) {
                              return news;
                            }
                          
                            return null;
                          });
                     }
   
                 }

                if(this.toggableSettings.dateOrder.isOn === true){
                    if(this.toggableSettings.dateOrder.directive === 'asc'){
                        allNews.sort((a, b) => new Date(a.date) - new Date(b.date));
                    }else{
                        allNews.sort((a, b) => new Date(a.date) - new Date(b.date));
                        allNews.reverse();
                    }
                }

                if(this.toggableSettings.alphaOrder.isOn === true){
                    allNews.sort(function(a, b) {
                        // localeCompare does a string comparison that returns -1, 0, or 1
                        return a.title.localeCompare(b.title);
                    })
                    if(this.toggableSettings.alphaOrder.directive === 'desc'){ 
                        allNews.reverse();
                    }        
                }
                
                newsTypes.forEach((type)=>{
                    if(target[type].isOn !== true){
                        allNews = allNews.filter(news=> news.postType !== type)
                    }
                })

                if(allNews.length){
                    if(allNews.length <= newsOutput){
                        let page = newsPages.concat(allNews);
                        newsPages.push(page);
                    }else{
                        while (allNews.length > newsOutput){
                            for(let item = 1; item <= newsOutput; item++){
                                let removed = allNews.shift();
                                newsPage.push(removed);
                            }
                            let page = newsPage.splice(0);
                            newsPages.push(page);
                        } 

                            if(allNews.length){
                                newsPage = allNews.splice(0);
                                newsPages.push(newsPage);
                            }
                        }
                }

                if(newsPages.length && !this.cleared){                
                    contentShown = newsPages[this.currentPages];
                    console.log(this.currentPages)
                }else if(newsPages.length && this.cleared){
                    contentShown = newsPages[this.storedPages];
                }else{
                    contentShown = [];
                }

                this.deliverNews(contentShown)
                if(this.contentLoaded && document.querySelector(`.content-direction_previous`)){
                    this.contentNextAndPrevious();
                }else if(contentShown.length > 0){
                    this.insertPagination(newsPages, dataCount, pageCount);
                }else{
                    this.paginationHolder.innerHTML = '';
                }

                this.contentNextActivation(); 

                this.contentLoaded = true;
            }else{
                //This needs to change to
                this.optionsButton.forEach(o=> o.classList.add('inactive')); 
                this.toggleOptions.forEach(o=> o.classList.add('inactive')); 
                this.dateFilterOptions.forEach(f => {f.disabled = true});
                this.newsSearch.disabled = true;
                this.newsSearch.classList.add('inactive');
                this.resetAll.classList.add('inactive');
                this.fullDisplayContent = [];
                this.calledIds = [];
                for(let news of allNews){
                    this.newsReciever.classList.add('dismissed');
                    this.paginationHolder.classList.add('dismissed');
                    this.fullDisplayContainer.classList.remove('dismissed');
                    this.dismissButton.classList.remove('dismissed');
                    //seperate the insertions to a function
                    
                    //Use if to vary if look for news with that or ones with relationship that has that
                    //make array of each news's relationships[give the first post 2 for testing of if checking aray properly]
                    if(this.fullDisplay){                    
                        this.calledIds = [news.id]
                    }else{
                        news.relationships.forEach(r=>this.calledIds.push(r.id))
                    }

                    if(this.calledIds.includes(parseInt(this.currentReport))){
                        this.fullDisplayContent.push(news);
                        this.mainHeader.innerHTML = `${news.title}`;
                    }
                    this.calledIds = [];
                }
                    // if(this.singleCall){ 
                        this.deliverNews(this.fullDisplayContent, this.fullDisplayContainer);
                //     }else{
                //         this.contentLoaded = false;
                //         this.gatherNews();
                //     }
                // console.log(this.externalCall)
                if(this.fullDisplay && this.externalCall){
                    this.backgroundCall = true;
                    this.contentLoaded = false;
                    this.gatherNews();
                    this.fullDisplay = false;
                } 
            }
            
            this.isSpinnerVisible = false;  
        }catch(e){
            console.log(e);
        }
    }

    deliverNews(contentShown, destination = this.newsReciever){
        destination.innerHTML = `
            ${contentShown.length ? `<ul>`  : 'No articles match your criteria'}
            ${!contentShown.length ? `<button id="searchReset">Please try a different query or change your filters.</button>`  : ''}
                ${contentShown.map(report => `
                <li>
                    <div class="news">                           
                        ${!this.fullDisplay ? `<h4>${report.title}</h4>` : ''}
    
                        <p>
                            ${report.caption.length >= 1 ? report.caption + ' - ' : ''}
                            ${report.date} 
                        </p>
                        
                        <p>${report.relationships.map(relationship => `<span class="name">${relationship.title}</span>  ${!this.fullDisplay ? `<a class="relationship-link" data-related="${relationship.id}">(See Associated News)</a> ` : `<a class="relationship-link dismissed" data-related="${relationship.id}">(Associated News)</a> `}<a class="single-link" href="${relationship.permalink}">(View Profile)</a>`)}</p>
                        <div class="media-card">
                            <img data-id="${report.id}" data-post="${report.postTypePlural}" src="${report.gallery[0].selectImage}">
                        </div>
        
                        ${!this.fullDisplay ? `<p>${report.description}</p>` : `<p>${report.fullDescription}</p>`}
                        ${!this.fullDisplay ? `<button id="${report.id}" class="see-more-link">See More </button>` : `<button id="${report.id}" class="see-more-link dismissed">Read more: ${report.id} </button>`} 
                    </div>
                </li> 
                `).join('')}
            ${contentShown.length ? `</ul>`  : ''}
        `;

        if(!this.fullDisplay){
            this.seeMoreFunctionality();
            this.gatherRelatedNews();  
        }

            // let mediaLink = document.querySelectorAll('.media-card img') 
            // this.closeMediaButton = document.querySelector('#media-close')   
            // this.html = document.querySelector('html')
            // this.mediaReciever = document.querySelector('#media-reciever')
            // console.log(this.mediaReciever, document.querySelector('#media-reciever')) 
            // this.isMediaRecieverOpen = false
            // this.mediaColumn = document.querySelector('#media-column');
            // this.newload = true;
            // this.galleryPosition = 0; 
            // this.currentMedia = document.querySelector('#current-media');
            // this.mediaPagination = document.querySelector('#media-pagination');

        // mediaLink.forEach(media=>{
        //     media.addEventListener('click', ()=> ShadowBox.prototype.shadowBox(media, this.mediaReciever, this.html, 
        //         this.currentPages, 'gallery', this.mediaColumn, this.newload, this.galleryPosition,
        //         this.currentMedia, this.mediaPagination
        //         ))
        // })

        //  mediaLink.forEach(media=>{
        //     media.addEventListener('click', ()=> ShadowBox.prototype.shadowBox(media))
        // })

        _shadowBox__WEBPACK_IMPORTED_MODULE_1__["default"].prototype.events();

        // ShadowBox.prototype.events(
        //     this.mediaLink = document.querySelectorAll('.media-card img'), 
        //     this.closeMediaButton = document.querySelector('#media-close'),   
        //     this.html = document.querySelector('html'),
        //     this.mediaReciever = document.querySelector('#media-reciever'), 
        //     this.isMediaRecieverOpen = false
        // );

        if(this.contentPageOptions){
            this.contentPageOptions.forEach(option=>{
                setTimeout(function(){option.style.pointerEvents=""; }, 500);
            })  
        }

    }

    gatherRelatedNews(){

        this.relationshipLinks = document.querySelectorAll('.relationship-link');

        this.relationshipLinks.forEach(link=>{
            link.addEventListener('click', ()=> {
                let linkId = link.dataset.related 
                let name = link.parentElement.querySelector('.name').innerText

                this.currentReport = linkId;
                this.newsSearch.value = `#${linkId}`;
                this.previousValue = this.newsSearch;
                this.newsDelivery = `#${linkId}`; 
                this.mainHeader.innerHTML = `Showing Results for: ${name}`;
                this.storedTitle =`Showing Results for: ${name}`;
                this.clearSearch.classList.remove('dismissed');
                this.contentLoaded = false;

                this.storedPages = this.currentPages;
                this.currentPages = 0;
                
                this.gatherNews();
            })
        })
    }

    insertPagination(newsPages, dataCount, pageCount){
        //add manual page entry box
        //Add failsafe against it being a number too big or small
        //Maybe do dropdown instead?  
        //Maybe just don't do at all?

        //Do the number limit, though, one where hide and reveal when at certain points

        //Remember to add the loader

        this.paginationHolder.innerHTML = `
                <div class="content-pages">
                    <a id="" class="content-direction content-direction_previous">Prev</a>
                    ${newsPages.map((page)=>`
                    <a class="content-page" data-page="${dataCount++}"> ${pageCount += 1}</a>
                    `).join('')}  
                    <a id="" class="content-direction content-direction_next ${newsPages.length > 1 ? '' : 'hidden'}">Next</a> 
                </div> 
            `;
            this.previousContentDirection = document.querySelectorAll('.content-direction_previous');    
            this.previousContentDirection.forEach(el=>{
                el.classList.add('hidden')  
            })
            
                this.nextContentDirection = document.querySelector('.content-direction_next'); 
                if(!this.cleared){
                    this.firstPageButton = document.querySelector('.content-page[data-page="0"]');
                
                    this.firstPageButton.classList.add('selectedPage')
                }else{
                    console.log(this.currentPages, 'cleared')
                    //clearSearch
                    let r = document.querySelector(`.content-page[data-page="${this.storedPages}"]`)
                    console.log(this.storedPages, document.querySelector(`.content-page[data-page="${this.storedPages}"]`))
                    r.classList.add('selectedPage');
                    this.cleared = false;
                }

                this.contentPageHolder
                this.contentPageOptions = document.querySelectorAll('.content-pages a')
    
                this.paginationFunctionality(this.contentPageOptions);


    }

    seeMoreFunctionality(){
        //add spinner to this, as needs to consolt backend
        this.seeMore = document.querySelectorAll('.see-more-link')
        this.seeMore.forEach(link=>{
            link.addEventListener('click', ()=>{
                this.currentReport = link.id;          
                this.fullDisplay = true;
                // this.singleCall = true;
                this.gatherNews();
                this.clearSearch.classList.add('dismissed');
                // console.log(`full display is ${this.fullDisplay}`)
            })
        })
    }

    dismissSelection(){
        if(this.newsDelivery !== ''){
            this.mainHeader.innerHTML = `${this.storedTitle}`;
            this.clearSearch.classList.remove('dismissed');
        }else{
            this.mainHeader.innerHTML = `${this.initialTitle}`;
        }
        this.optionsButton.forEach(o=> o.classList.remove('inactive')) 
        this.toggleOptions.forEach(o=> o.classList.remove('inactive')) 
        this.newsSearch.disabled = '';
        this.dateFilterOptions.forEach(f => {f.disabled = ''})
        this.newsSearch.classList.remove('inactive');
        this.resetAll.classList.remove('inactive');
        this.newsReciever.classList.remove('dismissed');
        this.paginationHolder.classList.remove('dismissed');
        this.fullDisplayContainer.classList.add('dismissed');
        this.dismissButton.classList.add('dismissed');  
        this.backgroundCall = false;
        this.fullDisplay = false;
        // this.singleCall = false;
    }

    paginationFunctionality(contentPageOptions){
        contentPageOptions.forEach(el => {
            el.onclick = (e) => {
                let selectedPage = e.currentTarget;

                el.style.pointerEvents="none";
                this.newsReciever.innerHTML = '<div class="spinner-loader"></div>'
                //too slow??
                this.isSpinnerVisible = true

                // setTimeout(function(){el.style.pointerEvents=""; }, 1000);

                this.currentPages = parseInt(selectedPage.dataset.page);
                this.gatherNews()

                contentPageOptions.forEach(i =>{ 
                    i.classList.remove('selectedPage');
                })

                el.classList.add('selectedPage');
            }
        })
    }

    contentNextActivation(){
        let allnextButtons = document.querySelectorAll('.content-direction_next');

        allnextButtons.forEach(el=>{
            el.onclick = (e)=>{
                let selectedPage = e.currentTarget;

                selectedPage.classList.forEach((name)=>{
                    if(name.match(/-group/)){
                        this.groupName = name.slice(0, -6);
                    }
                })
                let current = document.querySelector(`.selectedPage`);
        
                let nextPage = this.currentPages + 1;

                this.currentPages = nextPage;
                current.classList.remove('selectedPage');
                
                el.style.pointerEvents="none";
                this.newsReciever.innerHTML = '<div class="spinner-loader"></div>'
                //too slow??
                this.isSpinnerVisible = true

                this.gatherNews()

                let newCurrent = document.querySelector(`.content-page[data-page="${this.currentPages}"]`);
                newCurrent.classList.add('selectedPage');
            }
        })
        
    };

    contentNextAndPrevious(){
   
        this.contentDirection = document.querySelectorAll('.content-direction');     

        let prevButton = document.querySelector(`.content-direction_previous`)
        let nextButton = document.querySelector(`.content-direction_next`)
        let current = document.querySelector(`.selectedPage`);

        if(this.currentPages > 0){
            prevButton.classList.remove('hidden')
        }else{
            prevButton.classList.add('hidden')
        }


        if(!nextButton.previousElementSibling.classList.contains('selectedPage')){
            nextButton.classList.remove('hidden')
        }else{
            nextButton.classList.add('hidden')
        }

        this.previousContentDirection.forEach(el=>{
            el.onclick =  (i) =>{
                let prevPage = this.currentPages - 1;
                
                this.currentPages = prevPage;
                current.classList.remove('selectedPage');
                el.style.pointerEvents="none";
                this.newsReciever.innerHTML = '<div class="spinner-loader"></div>'
                //too slow??
                this.isSpinnerVisible = true

                this.gatherNews()

                let newCurrent = document.querySelector(`.content-page[data-page="${this.currentPages}"]`);
                newCurrent.classList.add('selectedPage');
                console.log(newCurrent)
            }
        })
    }

    toggleAllOptions(){
        if(!this.allOptionsVisible){
            this.allOptions.classList.add('fade-in');
            this.allOptionsVisible = true;
            this.newsReciever.querySelectorAll('*').forEach(e=>e.style.pointerEvents = 'none')
        }else{
            this.allOptions.classList.remove('fade-in');
            this.allOptions.classList.add('fade-out');
            setTimeout(()=>{this.allOptions.classList.remove('fade-out');}, 450)

            this.allOptionsVisible = false;
            this.newsReciever.querySelectorAll('*').forEach(e=>e.style.pointerEvents = '')
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (News);

/***/ }),

/***/ "./src/modules/dimension-checker.js":
/*!******************************************!*\
  !*** ./src/modules/dimension-checker.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _shadowBox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shadowBox */ "./src/modules/shadowBox.js");

class DimensionCheck{
    constructor(){
        this.height = screen.availHeight;
        this.width = screen.availWidth;
        console.log(this.width)

        this.html = document.querySelector('html');
        this.header = document.querySelector('header');
        // this.footer = document.querySelector('footer');

        // this.darkModeTogglerHeader = document.querySelector('#dark-mode-toggle_header');
        // console.log(this.darkModeTogglerHeader)
        // this.darkModeTogglerFooter = document.querySelector('#dark-mode-toggle_footer');
        this.events();
    }
    events(){
        console.log(this.width, this.height);
        this.evaluateDimensions();
        screen.orientation.addEventListener("change", ()=>{
            this.height = screen.availHeight;
            this.width = screen.availWidth;
            this.evaluateDimensions()
        })
    }

    evaluateDimensions(){
        if(this.height > this.width && this.height > 767 && this.height < 1200){
            this.html.classList.add('tabletPortrait');
            this.html.classList.remove('tabletLandscape');

            // this.footer.querySelector('#dark-mode-toggle_footer').style.display = "flex";
        }else if(this.height < this.width && this.width > 767 && this.width < 1200){
            this.html.classList.remove('tabletPortrait');
            this.html.classList.add('tabletLandscape');

            // this.footer.querySelector('#dark-mode-toggle_footer').style.display = "none";
        }
        if(this.height > this.width && this.height < 1200 && this.width < 576){
            this.html.classList.remove('tabletPortrait');
            this.html.classList.remove('tabletLandscape');
            this.html.classList.add('phonePortrait');
            document.querySelector('#more-options').classList.add('togglable');
            
            console.log(_shadowBox__WEBPACK_IMPORTED_MODULE_0__["default"].prototype.events)
        }
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DimensionCheck);

/***/ }),

/***/ "./src/modules/mobile.js":
/*!*******************************!*\
  !*** ./src/modules/mobile.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class MobileInterface {
    constructor(){
        this.html = document.querySelector('html');
        this.formContainer = document.querySelector('#test');
        this.formField = document.querySelectorAll('.form-field');

        // this.clonedFormFieldContainerOverall = document.querySelector('#mobile-typing-container');

        // this.clonedformFieldContainer = this.clonedFormFieldContainerOverall.querySelectorAll('.form-field-container_front');
        // console.log(this.clonedformFieldContainer)
        // this.clonedFormField = this.clonedFormFieldContainerOverall.querySelectorAll('.form-field_front');

        // this.closeFormFieldClone = document.querySelector('#close-front-form');

        if(this.mobileNavCaller){
            this.events();   
        }
    }
    events(){
        this.nav = document.querySelector('nav');
        this.mobileNavCaller = document.querySelector('#mobile-nav-caller');
        this.opened = false;

        this.mobileNavCaller.addEventListener('click', ()=>this.toggleNav())

        if(window.innerWidth < 500){
            // Can't get this to work, so scrapping until later, as is not all that important

            // this.formField.forEach(f =>{
            //     // this.html.scrollTo({
            //     //     left: 0, 
            //     //     top: 0,
            //     //     // behavior: 'smooth'
            //     // })
            //     let target = f.offsetTop;
            //     let pageTop = this.html.scrollTop;
            //     let combined = target + pageTop;
                
            //     let elDistanceToTop = window.pageYOffset + f.getBoundingClientRect().top
            //     f.addEventListener('focus', ()=>{
            //     console.log(elDistanceToTop)
            //     //     console.log(target-(window.innerHeight/2)-100)
            //     //     console.log(target-(window.innerHeight/2)+(window.innerHeight*.1))
            //     // console.log(target+(window.innerHeight/2))
            //         if(navigator.userAgent.indexOf("Firefox") != -1 ){
            //             this.html.scrollTo({
            //                 left: 0, 
            //                 top: elDistanceToTop + target,
            //                 // behavior: 'smooth'
            //             })
            //         }else{
            //             console.log('not FF')
            //             this.html.scrollTo({
            //                 left: 0, 
            //                 top: elDistanceToTop + target - (target*.6),
            //                 // behavior: 'smooth'
            //             })
            //         }
            //     })
                
            // })
            }
    }

    toggleNav(){
        if(!this.opened){
            this.nav.classList.add('opened');
            this.opened = true;
        }else{
            this.nav.classList.remove('opened');
            this.opened = false;
        }

    }

    allOptionsPosition(e){
        if(window.innerWidth < 1200){
            e.addEventListener('focusin', this.openClone);
            // this.newsSearchClone.value = e.value; 
            e.blur();
        }else{
            e.removeEventListener('focusin', this.openClone);
        }
    }

    openClone(){
        //necessary to remove the event listener
        console.log(this.id)
        const clonedFormFieldContainerOverall = document.querySelector('#mobile-typing-container');
        let clonedFormFieldContainer = document.querySelector(`#front-form-${this.id}-container`);
        let clonedFormField = clonedFormFieldContainer.querySelector('.form-field_front');
        // const newsSearchClone = newsSearchCloneContainer.querySelector('input');
        clonedFormFieldContainerOverall.classList.add('opened');
        clonedFormFieldContainer.classList.add('opened');
        clonedFormField.focus();
    }

      closeClone(){
        this.clonedformFieldContainer .forEach(e=>{e.classList.remove('opened')})
        this.clonedFormFieldContainerOverall.classList.remove('opened');
      }

      simuTyping(){
        console.log(this.id)
        let origin = document.querySelector(`#${this.id.split('-')[2]}`);
        origin.value = this.value;
      }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MobileInterface);

/***/ }),

/***/ "./src/modules/moreOptions.js":
/*!************************************!*\
  !*** ./src/modules/moreOptions.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class MoreOptions {
    constructor(){
        this.moreOptionsButton = document.querySelectorAll('#more-options');
        this.isMoreOptionsMenuOpen = false;
        this.events();
    }
    events(){
        this.moreOptionsButton.forEach(b=>b.addEventListener('click', ()=>this.moreOptionsMenu()));
    }

    moreOptionsMenu(){
        if(!this.isMoreOptionsMenuOpen){
            this.isMoreOptionsMenuOpen = true;
            return console.log(this.isMoreOptionsMenuOpen);
        }
        this.isMoreOptionsMenuOpen = false;
        console.log(this.isMoreOptionsMenuOpen)
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MoreOptions);

/***/ }),

/***/ "./src/modules/pagination.js":
/*!***********************************!*\
  !*** ./src/modules/pagination.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
// Spit out Apts in order of most recent



class Pagination {
    constructor(){
        this.targetedElement;

        this.html = document.querySelector('html');
        this.header = document.querySelector('header');
        this.headerNav = this.header.querySelector('nav');
        this.openButton = document.querySelectorAll(".js-search-trigger");
        this.displayBox = document.querySelector('#pop-up-display-box');
        this.imageHolder = document.querySelector('#image-holder');
        this.closeMagnify = document.querySelector('#closeMagnify');
        // this.overallContainer = document.querySelector('#overallContainer');
        // For now, this will be how I prevent errors on other pages 
        this.frontTest = document.querySelector('.contentContainer_paginated') 
        this.vh = Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0)
        this.vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)

        // Can I setup to load in and Paginate depending on identity, so as to make adaptable? Yes!!!

        //Will target a shared, specific class using querySelectorAll and use a loop

        //remember to use the ajax url set-up to link to the search info
        //Color the selected/current page and put a next and prev buttons that only appear when applicable
        //Make sure pagination is outside of generated text?

        // consider using some sort of loading icon and animation when clicking pagination. Just for user satisfaction on click
        
        // this.paginatedContainers = document.querySelectorAll('.contentContainer_paginated');
  
        let properties = document.querySelector('#propertiesContainer .contentBox');
        let members = document.querySelector('#membersContainer .contentBox');

        this.paginatedContent = [properties, members];
        this.groupName;
        // Make work for all paginate through a loop?
        this.postPageSelect;
        this.postPageOption;
        
        this.currentPropertiesPage = 0;
        
        // Maybe put all things in this object when fuse
        this.currentPages = {
            properties: 0,
            members: 0
        }

        this.contentDirection;

        this.pageLoader = document.querySelector('#page-loader');
        this.contentLoaded = false;
        // this.isSpinnerVisible = true;
        //spinner false before the prev is true

        //Do smaller ones for paginate and for the form submits, as well as search on the all news page and any other pagination 
            
        this.events();
    }

    events(){
        // this.html.style.fontSize = `${this.vh*.017}px`;
        // console.log(this.vh*.017)
        if(this.frontTest){
            // const mainLoaderText = ["One Moment Please...", "Perfection takes time", "Groaning only makes this slower...", "I'm watching you... :)"
            // , "Commencing Hack ;)", "One Moment. Retrieving your SSN", "Shaving your cat...", "You like Scary Movies...? >:)"];
    
            // const random = Math.floor(Math.random() * mainLoaderText.length);
            // const result = mainLoaderText[random];
            // this.pageLoader = document.querySelector('#page-loader');

            // this.pageLoader.setAttribute('data-curtain-text', `${result}`)
    
            this.contentLoader = document.querySelector('.content-loader');

             this.paginate();
        }
        
    }

    
    contentInterface(){
        //I think that I need to delay clickability for touch, otherwise can click when bringing up
        //Also, perhaps I need to add a symbol to indicate that you can bring up options 
        
        this.displaySquares = document.querySelectorAll('.displaySquares');
  
        this.displayImages = document.querySelectorAll('.displayImages');
        this.magnifyButton = document.querySelectorAll('.fa-search-plus');

        this.displaySquares.forEach(displaySquare => {
          let link = displaySquare.querySelector('.displaySquares-pageLinks');
          let image = displaySquare.querySelector('.displayImages');
          let magnifyButton = displaySquare.querySelector('.fa-search-plus')
          
          displaySquare.addEventListener("mouseenter", e => {

              link.classList.add('displaySquares-pageLinks__visible');
              image.classList.add('pageLinks__visible');
              link.style.pointerEvents = 'none';
              if(magnifyButton){
                magnifyButton.style.pointerEvents = 'none';
              }

              setTimeout(()=>{
                link.style.pointerEvents = '';
                if(magnifyButton){
                    magnifyButton.style.pointerEvents = '';
                }
              }, 300)          
            })
          displaySquare.addEventListener("mouseleave", e => {

              link.classList.remove('displaySquares-pageLinks__visible');
              image.classList.remove('pageLinks__visible');
          })
      })
      
      this.magnifyButton.forEach(b =>{ 
          b.onclick = e=>{

            let image = e.target.closest('.displaySquares-pageLinks').previousElementSibling.cloneNode();
            console.log(image)
            //Perhaps carry over associated news, as well

            //this is not necessary as one directly below does it by accessing the parent and query selecting, but keeping this as could be useful to have on hand
            this.findSpecifiedPrevious(e.target, 'more-info-link');
            // this.targetedElement = e.target.closest('.displaySquares-pageLinks').querySelector('.more-info-link').cloneNode(true);
            this.displayBox.insertBefore(this.targetedElement, this.closeMagnify);
       
            // this.displayBox.prepend(image);
            this.imageHolder.prepend(image);
            
            this.displayBox.classList.remove('hidden');
            this.openButton.forEach(e=>{
                e.classList.add('hidden');
            })
            this.html.classList.add('freeze');
          }
      })

     this.closeMagnify.onclick = ()=>{
        this.imageHolder.querySelector('img').remove();
        this.displayBox.querySelector('.more-info-link').remove();
        this.displayBox.classList.add('hidden');
        this.openButton.forEach(e=>{
            e.classList.remove('hidden');
        })
        this.html.classList.remove('freeze');
      }

      //change to be fpr either directional to get let, with if statements
    document.querySelectorAll('.pop-up-directional').forEach(button=>{
        button.onclick = ()=>{
        //Make next and prev unclickable if nothing there to go to
            let currentImage = this.displayBox.querySelector('img');

            let targetName = currentImage.dataset.name;

            let type = button.id;
            let newImageContainer;
            console.log(type)
            this.displaySquares.forEach(e=>{
                if(e.querySelector(`.displayImages[data-name=${targetName}]`)){
                    if(type === 'next-image'){
                        newImageContainer = e.querySelector('.displayImages').closest('.overall-squares').nextElementSibling;
                    }else{
                        newImageContainer = e.querySelector('.displayImages').closest('.overall-squares').previousElementSibling;
                    }
                    if(newImageContainer){
                        let newImage = newImageContainer.querySelector('.displayImages').cloneNode();
                        let newLink = newImageContainer.querySelector('.displaySquares-pageLinks .more-info-link').cloneNode(true);
                        this.imageHolder.querySelector('img').replaceWith(newImage);
                        this.displayBox.querySelector('.more-info-link').replaceWith(newLink);
                    }    
                }
            })
        }
      })
    }
    
    findSpecifiedPrevious(source, identifier){
        // this will need to be tweaked handle non-nested, as well as other needs
        let link = source.parentElement.previousElementSibling;
        while (link) {
            if (link.className.includes(identifier)) {
                
                this.targetedElement = link.cloneNode(true);
                console.log(this.targetedElement);
                break;
            }
            link = link.previousElementSibling;
            } 
    }

    async paginate(){
        //create new search set-up for just the member prop pagination? Like, go make new inc page
        //Use post-type 'if' that checks for the id? Actually, I can use the resuts array as can pluralize

        //start by inserting random shit in both?
        //set-up this up to not replace content, if javascript turned off, along with inserting a button to see all
        //and make that see all page
        //I think I'll make the see all button, but replace it's contents through here, so if this doesn't run, it'll be there
        //disable script in browser to check/work on stuff
        try{
            //Is it better just to use seperate url routes? 
            const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(siteData.root_url + '/wp-json/cah/v1/content?page'); 
            const results = response.data;

            // let currentMembersShown = this.currentPages.members;
            // let currentPropertiesShown = this.currentPages.properties;

            let dataCount = 0;
            let postOutput;
            // window.alert('on tablet!')
            //Consider localized reload on page resize
            if(window.innerWidth >= 1200){
                postOutput = 8;
            }else{
                postOutput = 6;
            }
            let pageCount = 0;
            let postPage = [];
            let postPages = [];
            let resultsKeys = Object.keys(results);
            let name;
            let post;
            let contentShown;
            let paginationLocation;
 
            //Use a for loop here? for result of results?
            // make this into an array and put in if a loop?

            let containerType = this.paginatedContent;

            let containerTypeLocation = 0;

            if(!this.contentLoaded){
                for(let type of resultsKeys){
                    name = type;
                    post = results[name];

                    if(post.length){
                        if(post.length <= postOutput){
                            let page = postPages.concat(post);
                            postPages.push(page);
                        }else{
                            while (post.length > postOutput){
                                for(let item = 1; item <= postOutput; item++){
                                    let removed = post.shift();
                                    postPage.push(removed);
                                }
                                let page = postPage.splice(0);
                                postPages.push(page);
                            } 
        
                            if(post.length){
                                postPage = post.splice(0);
                                postPages.push(postPage);
                            }
                        }
                    }

                    // this will need to made more versatile if decide to universalize pagination
                    if(postPages.length){
                        
                        contentShown = postPages[this.currentPages[type]];
                    }else{
                        contentShown = [];
                    }

                    console.log(postPages[0])

                        let pageName = type;

                        containerType[containerTypeLocation].classList.add(type)

                        this.insertContent(containerType[containerTypeLocation], contentShown, pageName)
                        

                        // paginationLocation = containerType[containerTypeLocation].previousElementSibling.querySelector('.textBox')
                        // console.log(containerType[containerTypeLocation].parentElement)
                        paginationLocation = containerType[containerTypeLocation].parentElement;
                        this.insertPagination(paginationLocation, postPages, dataCount, pageCount, pageName)     

                        containerTypeLocation+= 1
                        
                        // post = [];
                        postPage = [];
                        postPages = []
                        this.contentNextActivation(); 
                }
            }else{
                //temp until change set-up to make section loader work
                this.pageLoader.classList.add('is-active')
                post = results[this.groupName]

                if(post.length <= postOutput){
                    let page = postPages.concat(post);
                    postPages.push(page);
                }else{
                    while (post.length > postOutput){
                        for(let item = 1; item <= postOutput; item++){
                            let removed = post.shift();
                            postPage.push(removed);
                        }
                        let page = postPage.splice(0);
                        postPages.push(page);
                    } 

                    if(post.length){
                        postPage = post.splice(0);
                        postPages.push(postPage);
                    }
                }
                contentShown = postPages[this.currentPages[this.groupName]];
                
                let target = document.querySelector(`.contentBox.${this.groupName}`)

                this.insertContent(target, contentShown, this.groupName);

                this.contentNextAndPrevious(); 
                this.contentNextActivation(); 

                //change to adding fade-class, before removing active, so goes away smoother
                setTimeout(()=>this.pageLoader.classList.remove('is-active'), 810);

            }
            this.contentLoaded = true;
            setTimeout(()=>this.pageLoader.classList.remove('is-active'), 810); 
     
            //Can I loop through the diff results, using variable(s) before the innerHtml and the map, as well as the page container?
            
            // How to get post name, though? Can I apply a foreach to them and grab the post type? Could I include in rest route

            //Have logic that only has the process for the selected section run again, perhaps via a variable in the call below. 
            //ie. this.paginate('members')
            //Maybe the pagination could be split up, with the html insertion being a seperately called function that is repeated
            //through a loops consisting of variables here, and could simply be called again with a specific variable  
            //Or simply just seperate this all 

            //simply display different things, need two diff html blocks, but each can called upon seperately, as different innerHtml blocks

            //But then again, a uniformed displayed could be achieved with ternary operators, checking for title_or_position
            //And checking for something that could rule out the magnifying button and the location link

            //Can I move this And just loop call this?

            //Make work again. And versatile
            //Do I need this anymore, though?

            // let activePagination = document.querySelector(`[data-page='${currentMembersShown}']`);
            // activePagination.classList.add('selectedPage');
          
        }catch (e) {
            console.log(e)
          }
            
        
        this.contentInterface();
    }

    insertContent(destination, type, pageName){
            //Change desitination set-up to accomadate loader
            console.log(pageName)
            //replace word interaction prompts, with custom, drawn symbols
            destination.innerHTML = `
                ${type.map(item => `
                <div class="overall-squares">
                    <div class="displaySquares">
                        <p class="interaction-prompt"><span class="touch-prompt"><img src="${siteData.root_url}/wp-content/themes/cah/images/touch-symbol.png"></span><span class="hover-prompt"><img src="${siteData.root_url}/wp-content/themes/cah/images/hover-symbol.png"></span></p>
                        ${this.vw >= 1200 ? `<img class="displayImages" data-name="${item.title.replaceAll(' ', '')}" src="${item.isCompleted || item.postType === 'member' ? item.image : item.projectedImage}" alt="${item.title}">`: ''}
                        ${this.vw < 1200 ? `<img class="displayImages" data-name="${item.title.replaceAll(' ', '')}" src="${item.isCompleted || item.postType === 'member' ? item.imageMedium : item.projectedImageMedium}" alt="${item.title}">`: ''}
                        <div class="displaySquares-pageLinks">
                            <a class="more-info-link" href="${item.permalink}">Find Out More</a>
                            <a href="${siteData.root_url}/all-news/#${item.id}-related-${item.postTypePlural}">Associated News?</a>
                            ${pageName === 'properties' ? '<button><i class="fas fa-search-plus"></i></button>': ''}
                        </div>
                    </div>
                    <div class="display-text">
                        <p>${item.title}</p>
                        ${item.positionOrRole !== undefined ? `<p>${item.positionOrRole}</p>` : ''}
                    </div> 
                </div>   
                `).join('')}
            `;
        }

    insertPagination(destination, postPages, dataCount, pageCount, pageName){
        //Put in 'next' and 'prev' buttons
        //Make numbers Large and centered, and perhaps put a box around them, along with fancy styling all around
        destination.insertAdjacentHTML(
        "beforeend",
            `
            ${postPages.length ? '<div class="content-pages">' : ''}
                ${postPages.length ? '<div class="content-pages-sub">' : ''}
                    ${postPages.length > 1  ? `<a id="${pageName}-prev" class="${pageName}-group ${pageName}-direction content-direction content-direction_previous">Prev</a>` : ''}
                ${postPages.map((page)=>`
                    ${postPages.length > 1 ? `<a class="content-page ${pageName}-group" data-page="${dataCount++}"> ${pageCount += 1}</a>` : ''}
                `).join('')}  
                    ${postPages.length > 1 ? `<a id="${pageName}-next" class="${pageName}-group ${pageName}-direction content-direction content-direction_next">Next</a>` : ''}
                ${postPages.length ? '</div>' : ''} 
            ${postPages.length ? '</div>' : ''} 

        `);
        this.previousContentDirection = document.querySelectorAll('.content-direction_previous');    
        this.previousContentDirection.forEach(el=>{
            el.classList.add('hidden')  
        })

        this.nextContentDirection = document.querySelectorAll('.content-direction_next'); 
        
        this.firstPageButton = document.querySelectorAll('.content-page[data-page="0"]');
        
        this.firstPageButton.forEach(el=>el.classList.add('selectedPage'))

        let contentPageOptions = document.querySelectorAll('.content-page');

        this.paginationFunctionality(contentPageOptions);
    }
// this new setup causes issues after directional buttons used: selectedPage 
//not being added to clicked and currentPage on directional gets error
//Latter likely connected to the former

    paginationFunctionality(contentPageOptions){
        //Combine the two below
        contentPageOptions.forEach(el => {
            el.onclick = (e) => {
                let selectedPage = e.currentTarget;

                selectedPage.classList.forEach((name)=>{
                    if(name.match(/-group/)){
                        this.groupName = name.slice(0, -6);
                    }
                })

                this.currentPages[this.groupName] = parseInt(selectedPage.dataset.page);

                this.paginate()

                contentPageOptions.forEach(i =>{ 
                    console.log(i)
                    i.classList.forEach((name)=>{
                        if(name.match(this.groupName)){
                            i.classList.remove('selectedPage');
                        }
                    })
                })  
                el.classList.add('selectedPage');
            }
        })

        // contentPageOptions.forEach(el => {
        //     el.addEventListener('click', () =>{
                
        //         contentPageOptions.forEach(i =>{ 
        //             console.log(i)
        //             i.classList.forEach((name)=>{
        //                 if(name.match(this.groupName)){
        //                     i.classList.remove('selectedPage');
        //                 }
        //             })
        //         })  
        //         el.classList.add('selectedPage');
        //     }, { once: true });
        // })
    }

    
    contentNextActivation(){
        let allnextButtons = document.querySelectorAll('.content-direction_next');

        allnextButtons.forEach(el=>{
            el.onclick = (e)=>{
                let selectedPage = e.currentTarget;

                selectedPage.classList.forEach((name)=>{
                    if(name.match(/-group/)){
                        this.groupName = name.slice(0, -6);
                    }
                })
                let current = document.querySelector(`.${this.groupName}-group.selectedPage`);
        
                let nextPage = this.currentPages[this.groupName] + 1;

                this.currentPages[this.groupName] = nextPage;
                current.classList.remove('selectedPage');
                
                el.style.pointerEvents="none";
                setTimeout(function(){el.style.pointerEvents=""; }, 920);

                this.paginate()

                let newCurrent = document.querySelector(`.${this.groupName}-group[data-page="${this.currentPages[this.groupName]}"]`);
                newCurrent.classList.add('selectedPage');
                console.log(newCurrent)
            }
        })
        
    };

    contentNextAndPrevious(){
   
        this.contentDirection = document.querySelectorAll('.content-direction');     

        let prevButton = document.querySelector(`#${this.groupName}-prev`)
        let nextButton = document.querySelector(`#${this.groupName}-next`)
        let current = document.querySelector(`.${this.groupName}-group.selectedPage`);

        this.previousContentDirection.forEach(el=>{
            if(this.currentPages[this.groupName] > 0){
                console.log(this.currentPages)
                prevButton.classList.remove('hidden')
            }else{
                prevButton.classList.add('hidden')
            }
        })

        this.nextContentDirection.forEach(el=>{
            if(!nextButton.previousElementSibling.classList.contains('selectedPage')){
                nextButton.classList.remove('hidden')
            }else{
                nextButton.classList.add('hidden')
            }
        })

        this.previousContentDirection.forEach(el=>{
            el.onclick =  (i) =>{
                let prevPage = this.currentPages[this.groupName] - 1;
                
                this.currentPages[this.groupName] = prevPage;
                current.classList.remove('selectedPage');

                el.style.pointerEvents="none";
                setTimeout(function(){el.style.pointerEvents=""; }, 920);

                this.paginate()

                let newCurrent = document.querySelector(`.${this.groupName}-group[data-page="${this.currentPages[this.groupName]}"]`);
                newCurrent.classList.add('selectedPage');
                console.log(newCurrent)
            }
        })

        //fix repeat of nextButton functionality
        // this.nextContentDirection.forEach(el=>{
        //     el.onclick =  (i) =>{
        //         let nextPage = this.currentPages[pageName] + 1;

        //         this.currentPages[pageName] = nextPage;
        //         current.classList.remove('selectedPage');

        //         this.paginate()

        //         newCurrent = document.querySelector(`.${pageName}-group[data-page="${this.currentPages[pageName]}"]`);
        //         newCurrent.classList.add('selectedPage');
        //         console.log(newCurrent)
        //     }
        // })
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Pagination);

/***/ }),

/***/ "./src/modules/shadowBox.js":
/*!**********************************!*\
  !*** ./src/modules/shadowBox.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mobile__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mobile */ "./src/modules/mobile.js");


//Combine with other pagination?

class ShadowBox {
    constructor(){
        this.mediaLink = document.querySelectorAll('.media-card *');

        this.html;
        this.width = screen.availWidth;
        // this.mediaLink;

        this.mediaReciever;
        this.isMediaRecieverOpen;

        this.currentOwnerId; 
        this.localStorage;
        
        this.currentMedia;
        this.mediaMenu;
        this.mediaColumn;
        this.mediaThumb;
        this.mediaPagination;

        this.videoSrc;
        this.playButton;
        this.closeMediaButton;

        this.dataCount;
        this.postOutput;
        this.pageCount;
        this.postPage;
        this.postPages;
        this.contentShown;

        //Reset when change filter and dismiss current vids
        this.galleryPosition; 
        this.currentPages;
        this.currentSelection;
        this.postField;
        this.currentMedia;
        this.closeMediaButton;

        this.newLoad;

        this.events();
    }

    events(){
        this.closeAlt = document.querySelector('#media-close-alt');
        this.contentShown;
        this.currentPages = 0;
        this.html = document.querySelector('html');
        this.isMediaRecieverOpen = false;
        this.currentOwnerId = null; 
        this.mediaLink = document.querySelectorAll('.media-card *');
        this.currentMedia = document.querySelector('#current-media');
        this.mediaMenu = document.querySelector('#media-menu');
        this.mediaColumn = document.querySelector('#media-column');
        this.mediaThumb;
        this.mediaPagination = document.querySelector('#media-pagination');
        this.galleryPosition = 0; 
        this.postField = 'gallery';
        
        this.newLoad = true;

        this.mediaLink.forEach(media=>{
            if(media.id !== 'thumbnail-column' && media.id !== 'additional-count'){
                media.addEventListener('click', ()=> this.shadowBox(media)); 
            }
        })

        document.addEventListener("keydown", e => this.keyPressDispatcher(e))
    }

        shadowBox(media){
            this.togglableElement = document.querySelector('.togglable');
            this.nav = document.querySelector('nav');
            _mobile__WEBPACK_IMPORTED_MODULE_1__["default"].prototype.events();
            _mobile__WEBPACK_IMPORTED_MODULE_1__["default"].prototype.opened = true;
            _mobile__WEBPACK_IMPORTED_MODULE_1__["default"].prototype.toggleNav();

            this.togglableElement.classList.add('hidden');
            this.nav.classList.add('hidden');
            this.closeAlt.style.display = "block";
            this.mediaReciever = document.querySelector('#media-reciever');

            this.mediaReciever.style.display = "grid";
            this.isMediaRecieverOpen = true; 
            this.html.classList.add('freeze');
            
            let postType = media.dataset.post;
            let dataId = parseInt(media.dataset.id);

            if(postType !== 'none'){
                this.getMedia(postType, dataId);
            }else{
                this.renderIsolatedMedia(media);
            }
        }

        async getMedia(dataType, dataId){
            try{
            const response = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(siteData.root_url + '/wp-json/cah/v1/media?related'); 
            const results = response.data;

            const filterList = [];
              
            results[dataType].forEach(item=>{
                let post = JSON.parse(JSON.stringify(item.gallery));
                if(item.id === dataId){
                    console.log(results[dataType])

                    if(item.postType === 'property'){
                        document.querySelector('#media-selection-interface').classList.add('has-menu');
                        this.mediaMenu.innerHTML = `
                            <a id="gallery" class="active">General</a>
                            <a id="interior">Interior</a>
                            <a id="floorPlans">Floor Plans</a>
                            <a id="buildingPlans">Building Plans</a>
                        `;
                        let menuLink = this.mediaMenu.querySelectorAll('a')
                        
                        menuLink.forEach(e=>{
                            e.addEventListener('click', i=>{
                                this.postField = i.currentTarget.id;

                                post = JSON.parse(JSON.stringify(item[this.postField]));
                                this.newLoad = true;
                                this.currentPages = 0;
                                this.initialMediaPopulation(item, post);

                                menuLink.forEach(c=>{c.classList.remove('active');})
                                i.target.classList.add('active');

                                // if(document.querySelector(`[data-position="0"]`)){
                                //     document.querySelector(`[data-position="0"]`).children[0].classList.add('selected');
                                // }
                               
                            })
                        })
                    }
                    //     let allNews = results['updates'].concat(results['news']);

                    //     allNews.map(reports=>{
                    //         reports.relationships.forEach(post=>{
                    //             if(post.ID === item.id){
                    //                 item.gallery.push(reports.gallery)
                    //             }
                    //         })
                    //     })

                    // if(dataId !==  this.currentOwnerId){
                        this.currentOwnerId = dataId;

                        // this.localStorage = this.contentShown;
                        this.initialMediaPopulation(item, post);
                    // }else{
                    //     this.accessLocalStorage(item);
                    // }
                    // }
                }
            })

            }catch(e){
                console.log(e);
            }
        }

        initialMediaPopulation(item, post){
            
            // if more than one, show
            // is there a more accessible-friendly html tag for filtrr menus?
            //Have desc with 'read more' under active vid. Exerpt under selection, of exists, otherwise trim

            this.dataCount = 0;
            this.postOutput = 3;
            this.pageCount = 0;
            this.postPage = [];
            this.postPages = [];

  
            if(post.length){
                if(post.length <= this.postOutput){
                    let page = this.postPages.concat(post);
                    this.postPages.push(page);
                }else{
                    while (post.length > this.postOutput){
                        for(let item = 1; item <= this.postOutput; item++){
                            let removed = post.shift();
                            this.postPage.push(removed);
                        }
                        let page = this.postPage.splice(0);
                        this.postPages.push(page);
                    } 

                    if(post.length){
                        this.postPage = post.splice(0);
                        this.postPages.push(this.postPage);
                    }
                }
            }

            if(this.postPages.length){
                        
                this.contentShown = JSON.parse(JSON.stringify(this.postPages));
            }else{
                this.contentShown = [];
            }
            console.log(item)
 
            this.populateMediaColumn(item, this.contentShown[this.currentPages]);
            // console.log(item)
            if(this.newLoad === true){
                console.log(this.newLoad);
                this.renderCurrentMedia(item);
                if(this.postPages.length > 1){
                    this.insertPagination(item, this.dataCount, this.pageCount);
                }
            }
 
        }

        renderIsolatedMedia(media){
            // this.currentMedia.classList.remove('aspect-ratio');
            this.currentMedia.classList.add('center-display');
            this.currentMedia.innerHTML = `
                <img src="${media.dataset.full}">
            `;  
   
            // this.videoSrc = this.currentMedia.querySelector('img').dataset.video.replace('watch?v=', 'embed/') + '?autoplay=1';
            // this.playButton = document.querySelector('#play-button');
            // this.playButton.addEventListener('click', ()=>this.playVideo(this.videoSrc));
        }

        renderCurrentMedia(item){
            if(this.newLoad === true){
                this.galleryPosition = 0;
            }
            console.log(this.postField, this.galleryPosition)

            this.currentMedia.innerHTML = `  
                <div id="media-display">
                    ${item[this.postField][this.galleryPosition].videoSource ? '<div id="play-button-container"><button id="play-button"><div></div></button></div>' : ''}
                    <img data-video="${item[this.postField][this.galleryPosition].videoSource}" src="${item[this.postField][this.galleryPosition].image}">
                </div>     
               
                <div id="media-information">
                    <div id="title-and-options">
                        <p id="media-title">${item[this.postField][this.galleryPosition].title}<button id="toggle-desc"><i class="fas fa-chevron-down"></i><i class="fas fa-chevron-up hidden"></i></button></p>                
                    </div>
                    <p id="media-partial-desc">${item[this.postField][this.galleryPosition].description}</p>
                    <p id="media-full-desc" class="hidden">${item[this.postField][this.galleryPosition].fullDescription}</p>
                </div>
            `;  

            this.closeMediaButton = document.querySelectorAll('.media-close');
            this.closeMediaButton.forEach(b=>b.addEventListener('click', ()=>this.closeMediaReciever()))

            this.mediaDisplay = this.currentMedia.querySelector('#media-display');
            this.toggleDesc = this.currentMedia.querySelector('#toggle-desc');
            this.downArrow = this.currentMedia.querySelector('.fa-chevron-down');
            this.upArrow = this.currentMedia.querySelector('.fa-chevron-up');
            this.partialDesc = this.currentMedia.querySelector('#media-partial-desc');
            this.fullDesc = this.currentMedia.querySelector('#media-full-desc');
            let isFullDescVisible = false;

            this.videoSrc = this.currentMedia.querySelector('img').dataset.video.replace('watch?v=', 'embed/') + '?autoplay=1';
            
            this.playButton = document.querySelector('#play-button');

            if(this.playButton){
                this.playButton.addEventListener('click', ()=>this.playVideo(this.videoSrc));
                // this.currentMedia.classList.add('aspect-ratio');
                this.currentMedia.classList.remove('center-display');
            }else{
                // this.currentMedia.classList.remove('aspect-ratio');
                this.currentMedia.classList.add('center-display');
            }

            this.toggleDesc.addEventListener('click', ()=>{
                if(!isFullDescVisible){
                    this.fullDesc.classList.remove('hidden');
                    this.partialDesc.classList.add('hidden');

                    this.downArrow.classList.add('hidden');
                    this.upArrow.classList.remove('hidden');
                    isFullDescVisible = true;
                }else{
                    this.fullDesc.classList.add('hidden');
                    this.partialDesc.classList.remove('hidden');

                    this.downArrow.classList.remove('hidden');
                    this.upArrow.classList.add('hidden');
                    isFullDescVisible = false;
                }
            })

        }

        populateMediaColumn(item, content){
            this.mediaColumn.innerHTML = `
      
                    ${content.map(i => `
                    <div data-position="${item[this.postField].findIndex(a=>{return a.id === i.id})}"  class="media-selection">
                        <img class="media-thumb" src="${i.selectImage}">
                        <div class="media-information">
                            <p>${i.title}</p>
                            <p>${i.description}</p>
                        </div>
                    </div>
                `).join('')}
            `;
            
            this.mediaThumb = document.querySelectorAll('.media-thumb');

            if(this.newLoad === true){
                this.mediaThumb[0].classList.add('selected');
                this.currentSelection = document.querySelector('.media-thumb.selected').parentNode.dataset.position;
                // console.log(this.currentSelection, 'red')
            }

            this.mediaThumb.forEach(thumb=>{
                thumb.addEventListener('click', (e)=>{
                    this.mediaThumb.forEach(c=>{c.classList.remove('selected');})
                    e.target.classList.add('selected');
                    // console.log(e.target)
                    this.galleryPosition = e.target.parentNode.dataset.position;
                    this.renderCurrentMedia(item);

                    this.currentSelection = e.target.parentNode.dataset.position;
                    console.log(this.currentSelection)
                    //activate the seperate function that fills the currentMdia container
                })
            })

        }

        insertPagination(item, dataCount, pageCount){
            console.log(this.postPages.length)
            this.mediaPagination.innerHTML = `
                ${this.postPages.map((page)=>`
                    ${this.postPages.length > 1 ? `<a class="content-page" data-page="${dataCount++}"> ${pageCount += 1}</a>` : ''}
                `).join('')}  
            `;

            // if(document.querySelector('.content-page[data-page="0"]')){
                this.firstPageButton = document.querySelector('#media-pagination .content-page[data-page="0"]');
                console.log(document.querySelector('.content-page[data-page="0"]'))
                this.firstPageButton.classList.add('selectedPage');
            // }

            let contentPageOptions = document.querySelectorAll('#media-pagination .content-page');

            this.paginationFunctionality(item, contentPageOptions);

            this.newLoad = false;
        }

        paginationFunctionality(item, contentPageOptions){
            contentPageOptions.forEach(el => {
                el.addEventListener('click', e => {
                    let selectedPage = e.currentTarget;

                    console.log(this.currentSelection)

                    this.currentPages = parseInt(selectedPage.dataset.page);
                    // this.initialMediaPopulation(item);
                    this.populateMediaColumn(item, this.contentShown[this.currentPages]);

                    contentPageOptions.forEach(i =>{                          
                        i.classList.remove('selectedPage');
                    })  
                    el.classList.add('selectedPage');

                   if(document.querySelector(`[data-position="${this.currentSelection}"]`)){
                        console.log(document.querySelector(`[data-position="${this.currentSelection}"]`))
                        document.querySelector(`[data-position="${this.currentSelection}"]`).children[0].classList.add('selected');
                   }

                })    

            })
        }
    
        closeMediaReciever(){
            this.togglableElement.classList.remove('hidden');
            this.nav.classList.remove('hidden');
            this.closeAlt.style.display = "none";
            while (this.mediaMenu.firstChild) {
                this.mediaMenu.removeChild(this.mediaMenu.firstChild);
            }

            while (this.mediaColumn.firstChild) {
                this.mediaColumn.removeChild(this.mediaColumn.firstChild);
            }

            while (this.currentMedia.firstChild) {
                this.currentMedia.removeChild(this.currentMedia.firstChild);
            }

            this.mediaReciever.style.display = "none";
            this.isMediaRecieverOpen = false; 
            this.html.classList.remove('freeze');

            this.galleryPosition = 0;
            this.currentPages = 0;

            this.postField = 'gallery';

            this.newLoad = true
        }

        keyPressDispatcher(e){
            // console.log(e.keyCode, this.isMediaRecieverOpen)
            if(e.keyCode === 27 && this.isMediaRecieverOpen){
                this.closeMediaReciever();
            }
        }

        playVideo(videoSrc){
            console.log(videoSrc)

            this.mediaDisplay.innerHTML = `
                <iframe allowfullscreen="allowfullscreen" src="${videoSrc}"></iframe>
            `;
        }

        test(){
            console.log('red');
        }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ShadowBox);

/***/ }),

/***/ "./src/modules/singlePost.js":
/*!***********************************!*\
  !*** ./src/modules/singlePost.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ "./node_modules/axios/index.js");
/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _shadowBox__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shadowBox */ "./src/modules/shadowBox.js");


//The simplicity of this is a chance to try to make my pagination code and code in general cleaner and more efficient
class RelatedNews{
    constructor(){
        if(document.querySelector('#singleContainer')){
            this.newsInfoReciever = document.querySelector('#news-info-reciever');
            this.newsReciever = document.querySelector('#news-reciever');
            this.paginationHolder = document.querySelector('#pagination-holder');
            //interferes with SB. Figure out how to prevent on pages where invalid.
            //Also with all-news if only 1 page
            this.currentPostType = document.querySelector('#singleContainer').dataset.post;
            this.currentPostID = document.querySelector('#singleContainer').dataset.id;
            this.currentPage = 0;
            this.contentShown;
            this.contentPageOptions;
            this.contentLoaded = false;
            this.vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0)

            this.thumbnailColumn = document.querySelector('#thumbnail-column');
            this.additionalCount = document.querySelector('#additional-count');
            // this.sections = document.querySelectorAll('.section');
            // console.log(this.sections)
            // this.sectionTabs = document.querySelectorAll('#section-tabs button');
            // console.log(this.sectionTabs)
            this.events();
        }
    }

    events(){
        // this.hideSections();

        // this.sectionTabs.forEach(t=>{
        //     t.addEventListener('click', ()=> {
        //         // this.hideSections();
        //         this.toggleSections(t)
        //     })
        // })
        this.fetchMedia();
        this.fetchRelatedNews();
    }

    async fetchMedia(){
        const posts = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(siteData.root_url + '/wp-json/cah/v1/media?related');
        const postResults = posts.data;

        const allPosts = postResults[this.currentPostType];
            
        let allMedia;
        const mediaCol = [];
        let mediaColLength = 2;
        let mediaColLimit = mediaColLength; 
        let mediaCount = 0

        allPosts.forEach(post=>{
            if(post.id === parseInt(this.currentPostID)){
                if(this.currentPostType === "property"){
                    allMedia = post.gallery.concat(post.interior, post.buildingPlans, post.floorPlans);
                }else{
                    allMedia = post.gallery;
                }
            }
        })

        allMedia.forEach(media=>{
            mediaCount+=1
            if(mediaColLimit >= 1){
                mediaColLimit-=1;
                mediaCol.push(media);
            }
        })

        let additionalCount = `${mediaCount - mediaColLength}`;
        let additionalCountText = `+${additionalCount}`

        this.populateThumbnailColumn(mediaCol);   

        if(additionalCount>'0'){
            console.log(additionalCount)
            this.additionalCount.innerHTML = `${additionalCountText}`;  
        }
    }

    async fetchRelatedNews(){
        try{
            const related = await axios__WEBPACK_IMPORTED_MODULE_0___default().get(siteData.root_url + '/wp-json/cah/v1/media?related'); 
            const relatedResults = related.data;

            const allNews = relatedResults.updates.concat(relatedResults.news);
            
            const relatedNews = []; 
            let limit = 1;

            let dataCount = 0;
            let pageCount = 0;

            allNews.sort((a, b) => new Date(a.date) - new Date(b.date));
            allNews.reverse();

            if(!this.contentLoaded){

                allNews.forEach(news =>{
                    news.relationships.forEach(r=>{
                        if(r.ID === parseInt(this.currentPostID)){
                            if(limit <= 2){
                                limit+=1;
                                relatedNews.push(news);
                            }
                        }

                    })
                })

                if(relatedNews.length){      
                    this.contentShown = JSON.parse(JSON.stringify(relatedNews));
                }else{
                    this.contentShown = [];
                }

                this.populatePaginationHolder(dataCount, pageCount);
            }
                this.populateNewsReciever();

                this.newsReciever.scrollTo({
                    left: 0, 
                    top: 0
                })

        }catch(e){
            console.log(e);
        }
    }

    populateNewsReciever(){
        console.log(this.contentShown[this.currentPage])
        this.newsInfoReciever.innerHTML = `
            <h4>${this.contentShown[this.currentPage].title}</h4>
            <p>${this.contentShown[this.currentPage].caption ? `${this.contentShown[this.currentPage].caption} -` : ''} ${this.contentShown[this.currentPage].date}</p>
        `;
        this.newsReciever.innerHTML = `
            <div class="media-card"><img data-post="${this.contentShown[this.currentPage].postTypePlural}" data-id="${this.contentShown[this.currentPage].id}" src="${this.vw >= 1200 ? `${this.contentShown[this.currentPage].gallery[0].image}` : `${this.contentShown[this.currentPage].gallery[0].selectImage}`}"></div>
            <p>${this.contentShown[this.currentPage].fullDescription}</p>
        `;
  
        _shadowBox__WEBPACK_IMPORTED_MODULE_1__["default"].prototype.events();
        // console.log(ShadowBox.prototype.mediaLink)
    }

    populatePaginationHolder(dataCount, pageCount){
        this.paginationHolder.innerHTML = `
            ${this.contentShown.length ? '<div class="content-pages">' : ''}
                ${this.contentShown.map((page)=>`
                    ${this.contentShown.length > 1 ? `<a class="content-page" data-page="${dataCount++}"> ${pageCount += 1}</a>` : ''}
                `).join('')} 
            ${this.contentShown.length ? '</div>' : ''} 
        `;

        this.firstPageButton = document.querySelector('.content-page[data-page="0"]');

        if(!this.contentLoaded){
            if(this.firstPageButton){
                this.firstPageButton.classList.add('selectedPage');
            }     
            this.contentPageOptions = document.querySelectorAll('.content-page');
            this.paginationFunctionality();
            this.contentLoaded = true;
        }

    }

    paginationFunctionality(){
        this.contentPageOptions.forEach(el => {
            el.onclick = (e) => {
                let selectedPage = e.currentTarget;

                this.currentPage = parseInt(selectedPage.dataset.page);

                this.fetchRelatedNews()

                this.contentPageOptions.forEach(i =>{ 
                    console.log(i)
                    i.classList.forEach((name)=>{
                        i.classList.remove('selectedPage');
                    })
                })  
                el.classList.add('selectedPage');

            }
        })
    }

    populateThumbnailColumn(imgs){
        console.log(imgs)
        this.thumbnailColumn.innerHTML = `
            ${imgs.map(img=>`
                    <img src="${img.selectImage}">
                `
            ).join('')}
        `
    }
    // hideSections(){
    //     this.sections.forEach(e=> e.style.display="none")
    //     this.sectionTabs.forEach(t=>{
    //         if(t.className.indexOf('active') > -1){
    //             console.log(t)
    //             let target = `#${t.id.replace('-tab', '')}`
    //             console.log(target)
    //             document.querySelector(target).style.display="grid";
    //         }
    //     });
    // }

    // toggleSections(t){
    //     this.sectionTabs.forEach(e=>e.classList.remove('active'));
    //     t.classList.add('active');
    //     this.hideSections();
    //     // let target = `#${t.id.replace('-tab', '')}`
    //     // document.querySelector(target).classList.replace('active', 'hidden');
    // }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RelatedNews); 

/***/ }),

/***/ "./src/modules/tabs.js":
/*!*****************************!*\
  !*** ./src/modules/tabs.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
class Tab{
    constructor(){
        this.width = screen.availWidth;

        this.tabs = document.querySelectorAll('.section-tabs button');
        this.sections = document.querySelectorAll('.section');
        
        // this.searchFilters = document.querySelector('#search-filters');
        // this.propNews = document.querySelector('#propNews');
        this.nonPrimary = document.querySelectorAll('.non-primary');
        this.events();
    }
    events(){
        if(this.width < 767){
            this.nonPrimary.forEach(n=>n.classList.add('hidden'));
        }
        if(this.width < 1200){
            document.querySelectorAll('#singleContainer .non-primary').forEach(c=>{
                c.classList.add('hidden');
            })
        }

        this.tabs.forEach(t=>t.addEventListener('click', t=> this.toggleSections(t)));
    }

    toggleSections(t){
        const tab = document.querySelector(`#${t.target.id}`);
        const target = document.querySelector(`#${t.target.id.replace('-tab', '')}`);
        // const splitId = t.target.id.replace('-tab', '').split('-');
        // const initials = splitId[0][0] + splitId[1][0];
        // this.allOptions.classList.add(initials);
        this.tabs.forEach(i=>i.classList.remove('activated'));
        tab.classList.add('activated');
        this.sections.forEach(s=>{
            s.classList.add('hidden');
            target.classList.remove('hidden');
        })
    }
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tab);

/***/ }),

/***/ "./images/contact_darkened-overlay_darker.jpg":
/*!****************************************************!*\
  !*** ./images/contact_darkened-overlay_darker.jpg ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "a8e6ea2fa58d43040ca2.jpg";

/***/ }),

/***/ "./node_modules/axios/package.json":
/*!*****************************************!*\
  !*** ./node_modules/axios/package.json ***!
  \*****************************************/
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}],"_resolved":"https://registry.npmjs.org/axios/-/axios-0.21.4.tgz","_integrity":"sha512-ut5vewkiu8jjGBdqpM44XxjuCjq9LAKeHVmoVfHVzy8eHgxxq8SbAVQNovDA8mVi05kP0Ea/n/UzcSHcTJQfNg==","_from":"axios@0.21.4"}');

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _css_style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../css/style.css */ "./css/style.css");
/* harmony import */ var _css_dots_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css/dots.css */ "./css/dots.css");
/* harmony import */ var _modules_pagination__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/pagination */ "./src/modules/pagination.js");
/* harmony import */ var _modules_all_news__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/all-news */ "./src/modules/all-news.js");
/* harmony import */ var _modules_singlePost__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/singlePost */ "./src/modules/singlePost.js");
/* harmony import */ var _modules_shadowBox__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/shadowBox */ "./src/modules/shadowBox.js");
/* harmony import */ var _modules_mobile__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/mobile */ "./src/modules/mobile.js");
/* harmony import */ var _modules_tabs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/tabs */ "./src/modules/tabs.js");
/* harmony import */ var _modules_dimension_checker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/dimension-checker */ "./src/modules/dimension-checker.js");
/* harmony import */ var _modules_moreOptions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/moreOptions */ "./src/modules/moreOptions.js");
//Look up how to bundle scss here using webpack and make this into an import file(Also use seperate file for gen logic, 
//so can conditional this for forms)



// import Search from './modules/search';









// const search = new Search();
const pagination = new _modules_pagination__WEBPACK_IMPORTED_MODULE_2__["default"]();
const news = new _modules_all_news__WEBPACK_IMPORTED_MODULE_3__["default"]();
const relatedNews = new _modules_singlePost__WEBPACK_IMPORTED_MODULE_4__["default"]();
const shadowBox = new _modules_shadowBox__WEBPACK_IMPORTED_MODULE_5__["default"]();
const mobileInterface = new _modules_mobile__WEBPACK_IMPORTED_MODULE_6__["default"]();
const tab = new _modules_tabs__WEBPACK_IMPORTED_MODULE_7__["default"]();
const dimensionCheck = new _modules_dimension_checker__WEBPACK_IMPORTED_MODULE_8__["default"]();
const moreOptions = new _modules_moreOptions__WEBPACK_IMPORTED_MODULE_9__["default"]();
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,